// Generated by Haxe 3.4.7
if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = true;
IntIterator.prototype = {
	hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = true;
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = true;
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
Math.__name__ = true;
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = true;
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = true;
StringBuf.prototype = {
	__class__: StringBuf
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = true;
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		if(a[0] != b[0]) {
			return false;
		}
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) {
				return false;
			}
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) {
			return false;
		}
	} catch( e1 ) {
		return false;
	}
	return true;
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = true;
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = true;
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = true;
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = true;
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if (eof instanceof js__$Boot_HaxeError) eof = eof.val;
			if( js_Boot.__instanceof(eof,haxe_io_Eof) ) {
			} else throw(eof);
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = true;
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = true;
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = true;
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.b.push(c);
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_StringInput = function(s) {
	haxe_io_BytesInput.call(this,haxe_io_Bytes.ofString(s));
};
$hxClasses["haxe.io.StringInput"] = haxe_io_StringInput;
haxe_io_StringInput.__name__ = true;
haxe_io_StringInput.__super__ = haxe_io_BytesInput;
haxe_io_StringInput.prototype = $extend(haxe_io_BytesInput.prototype,{
	__class__: haxe_io_StringInput
});
var hscript_Const = { __ename__ : true, __constructs__ : ["CInt","CFloat","CString"] };
hscript_Const.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = hscript_Const; $x.toString = $estr; return $x; };
hscript_Const.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = hscript_Const; $x.toString = $estr; return $x; };
hscript_Const.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = hscript_Const; $x.toString = $estr; return $x; };
var hscript_ExprDef = { __ename__ : true, __constructs__ : ["EConst","EIdent","EVar","EParent","EBlock","EField","EBinop","EUnop","ECall","EIf","EWhile","EFor","EBreak","EContinue","EFunction","EReturn","EArray","EArrayDecl","ENew","EThrow","ETry","EObject","ETernary","ESwitch","EDoWhile","EMeta"] };
hscript_ExprDef.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EIdent = function(v) { var $x = ["EIdent",1,v]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EVar = function(n,t,e) { var $x = ["EVar",2,n,t,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EParent = function(e) { var $x = ["EParent",3,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EBlock = function(e) { var $x = ["EBlock",4,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EField = function(e,f) { var $x = ["EField",5,e,f]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EBinop = function(op,e1,e2) { var $x = ["EBinop",6,op,e1,e2]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EUnop = function(op,prefix,e) { var $x = ["EUnop",7,op,prefix,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.ECall = function(e,params) { var $x = ["ECall",8,e,params]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EIf = function(cond,e1,e2) { var $x = ["EIf",9,cond,e1,e2]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EWhile = function(cond,e) { var $x = ["EWhile",10,cond,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EFor = function(v,it,e) { var $x = ["EFor",11,v,it,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EBreak = ["EBreak",12];
hscript_ExprDef.EBreak.toString = $estr;
hscript_ExprDef.EBreak.__enum__ = hscript_ExprDef;
hscript_ExprDef.EContinue = ["EContinue",13];
hscript_ExprDef.EContinue.toString = $estr;
hscript_ExprDef.EContinue.__enum__ = hscript_ExprDef;
hscript_ExprDef.EFunction = function(args,e,name,ret) { var $x = ["EFunction",14,args,e,name,ret]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EReturn = function(e) { var $x = ["EReturn",15,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EArray = function(e,index) { var $x = ["EArray",16,e,index]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EArrayDecl = function(e) { var $x = ["EArrayDecl",17,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.ENew = function(cl,params) { var $x = ["ENew",18,cl,params]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EThrow = function(e) { var $x = ["EThrow",19,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.ETry = function(e,v,t,ecatch) { var $x = ["ETry",20,e,v,t,ecatch]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EObject = function(fl) { var $x = ["EObject",21,fl]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.ETernary = function(cond,e1,e2) { var $x = ["ETernary",22,cond,e1,e2]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.ESwitch = function(e,cases,defaultExpr) { var $x = ["ESwitch",23,e,cases,defaultExpr]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EDoWhile = function(cond,e) { var $x = ["EDoWhile",24,cond,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
hscript_ExprDef.EMeta = function(name,args,e) { var $x = ["EMeta",25,name,args,e]; $x.__enum__ = hscript_ExprDef; $x.toString = $estr; return $x; };
var hscript_CType = { __ename__ : true, __constructs__ : ["CTPath","CTFun","CTAnon","CTParent"] };
hscript_CType.CTPath = function(path,params) { var $x = ["CTPath",0,path,params]; $x.__enum__ = hscript_CType; $x.toString = $estr; return $x; };
hscript_CType.CTFun = function(args,ret) { var $x = ["CTFun",1,args,ret]; $x.__enum__ = hscript_CType; $x.toString = $estr; return $x; };
hscript_CType.CTAnon = function(fields) { var $x = ["CTAnon",2,fields]; $x.__enum__ = hscript_CType; $x.toString = $estr; return $x; };
hscript_CType.CTParent = function(t) { var $x = ["CTParent",3,t]; $x.__enum__ = hscript_CType; $x.toString = $estr; return $x; };
var hscript_Error = function(e,pmin,pmax,origin,line) {
	this.e = e;
	this.pmin = pmin;
	this.pmax = pmax;
	this.origin = origin;
	this.line = line;
};
$hxClasses["hscript.Error"] = hscript_Error;
hscript_Error.__name__ = true;
hscript_Error.prototype = {
	toString: function() {
		return hscript_Printer.errorToString(this);
	}
	,__class__: hscript_Error
};
var hscript_ErrorDef = { __ename__ : true, __constructs__ : ["EInvalidChar","EUnexpected","EUnterminatedString","EUnterminatedComment","EInvalidPreprocessor","EUnknownVariable","EInvalidIterator","EInvalidOp","EInvalidAccess","ECustom"] };
hscript_ErrorDef.EInvalidChar = function(c) { var $x = ["EInvalidChar",0,c]; $x.__enum__ = hscript_ErrorDef; $x.toString = $estr; return $x; };
hscript_ErrorDef.EUnexpected = function(s) { var $x = ["EUnexpected",1,s]; $x.__enum__ = hscript_ErrorDef; $x.toString = $estr; return $x; };
hscript_ErrorDef.EUnterminatedString = ["EUnterminatedString",2];
hscript_ErrorDef.EUnterminatedString.toString = $estr;
hscript_ErrorDef.EUnterminatedString.__enum__ = hscript_ErrorDef;
hscript_ErrorDef.EUnterminatedComment = ["EUnterminatedComment",3];
hscript_ErrorDef.EUnterminatedComment.toString = $estr;
hscript_ErrorDef.EUnterminatedComment.__enum__ = hscript_ErrorDef;
hscript_ErrorDef.EInvalidPreprocessor = function(msg) { var $x = ["EInvalidPreprocessor",4,msg]; $x.__enum__ = hscript_ErrorDef; $x.toString = $estr; return $x; };
hscript_ErrorDef.EUnknownVariable = function(v) { var $x = ["EUnknownVariable",5,v]; $x.__enum__ = hscript_ErrorDef; $x.toString = $estr; return $x; };
hscript_ErrorDef.EInvalidIterator = function(v) { var $x = ["EInvalidIterator",6,v]; $x.__enum__ = hscript_ErrorDef; $x.toString = $estr; return $x; };
hscript_ErrorDef.EInvalidOp = function(op) { var $x = ["EInvalidOp",7,op]; $x.__enum__ = hscript_ErrorDef; $x.toString = $estr; return $x; };
hscript_ErrorDef.EInvalidAccess = function(f) { var $x = ["EInvalidAccess",8,f]; $x.__enum__ = hscript_ErrorDef; $x.toString = $estr; return $x; };
hscript_ErrorDef.ECustom = function(msg) { var $x = ["ECustom",9,msg]; $x.__enum__ = hscript_ErrorDef; $x.toString = $estr; return $x; };
var hscript_ModuleDecl = { __ename__ : true, __constructs__ : ["DPackage","DImport","DClass","DTypedef"] };
hscript_ModuleDecl.DPackage = function(path) { var $x = ["DPackage",0,path]; $x.__enum__ = hscript_ModuleDecl; $x.toString = $estr; return $x; };
hscript_ModuleDecl.DImport = function(path,everything) { var $x = ["DImport",1,path,everything]; $x.__enum__ = hscript_ModuleDecl; $x.toString = $estr; return $x; };
hscript_ModuleDecl.DClass = function(c) { var $x = ["DClass",2,c]; $x.__enum__ = hscript_ModuleDecl; $x.toString = $estr; return $x; };
hscript_ModuleDecl.DTypedef = function(c) { var $x = ["DTypedef",3,c]; $x.__enum__ = hscript_ModuleDecl; $x.toString = $estr; return $x; };
var hscript_FieldAccess = { __ename__ : true, __constructs__ : ["APublic","APrivate","AInline","AOverride","AStatic","AMacro"] };
hscript_FieldAccess.APublic = ["APublic",0];
hscript_FieldAccess.APublic.toString = $estr;
hscript_FieldAccess.APublic.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.APrivate = ["APrivate",1];
hscript_FieldAccess.APrivate.toString = $estr;
hscript_FieldAccess.APrivate.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.AInline = ["AInline",2];
hscript_FieldAccess.AInline.toString = $estr;
hscript_FieldAccess.AInline.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.AOverride = ["AOverride",3];
hscript_FieldAccess.AOverride.toString = $estr;
hscript_FieldAccess.AOverride.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.AStatic = ["AStatic",4];
hscript_FieldAccess.AStatic.toString = $estr;
hscript_FieldAccess.AStatic.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.AMacro = ["AMacro",5];
hscript_FieldAccess.AMacro.toString = $estr;
hscript_FieldAccess.AMacro.__enum__ = hscript_FieldAccess;
var hscript_FieldKind = { __ename__ : true, __constructs__ : ["KFunction","KVar"] };
hscript_FieldKind.KFunction = function(f) { var $x = ["KFunction",0,f]; $x.__enum__ = hscript_FieldKind; $x.toString = $estr; return $x; };
hscript_FieldKind.KVar = function(v) { var $x = ["KVar",1,v]; $x.__enum__ = hscript_FieldKind; $x.toString = $estr; return $x; };
var hscript__$Interp_Stop = { __ename__ : true, __constructs__ : ["SBreak","SContinue","SReturn"] };
hscript__$Interp_Stop.SBreak = ["SBreak",0];
hscript__$Interp_Stop.SBreak.toString = $estr;
hscript__$Interp_Stop.SBreak.__enum__ = hscript__$Interp_Stop;
hscript__$Interp_Stop.SContinue = ["SContinue",1];
hscript__$Interp_Stop.SContinue.toString = $estr;
hscript__$Interp_Stop.SContinue.__enum__ = hscript__$Interp_Stop;
hscript__$Interp_Stop.SReturn = ["SReturn",2];
hscript__$Interp_Stop.SReturn.toString = $estr;
hscript__$Interp_Stop.SReturn.__enum__ = hscript__$Interp_Stop;
var hscript_Interp = function() {
	var _gthis = this;
	this.variables = new haxe_ds_StringMap();
	this.locals = new haxe_ds_StringMap();
	this.declared = [];
	var _this = this.variables;
	if(__map_reserved["null"] != null) {
		_this.setReserved("null",null);
	} else {
		_this.h["null"] = null;
	}
	var _this1 = this.variables;
	if(__map_reserved["true"] != null) {
		_this1.setReserved("true",true);
	} else {
		_this1.h["true"] = true;
	}
	var _this2 = this.variables;
	if(__map_reserved["false"] != null) {
		_this2.setReserved("false",false);
	} else {
		_this2.h["false"] = false;
	}
	var _this3 = this.variables;
	var value = Reflect.makeVarArgs(function(el) {
		var inf = _gthis.posInfos();
		var v = el.shift();
		if(el.length > 0) {
			inf.customParams = el;
		}
		haxe_Log.trace(Std.string(v),inf);
	});
	if(__map_reserved["trace"] != null) {
		_this3.setReserved("trace",value);
	} else {
		_this3.h["trace"] = value;
	}
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = true;
hscript_Interp.prototype = {
	posInfos: function() {
		if(this.curExpr != null) {
			return { fileName : this.curExpr.origin, lineNumber : this.curExpr.line};
		}
		return { fileName : "hscript", lineNumber : 0};
	}
	,initOps: function() {
		var me = this;
		this.binops = new haxe_ds_StringMap();
		var _this = this.binops;
		if(__map_reserved["+"] != null) {
			_this.setReserved("+",function(e11,e21) {
				return me.expr(e11) + me.expr(e21);
			});
		} else {
			_this.h["+"] = function(e11,e21) {
				return me.expr(e11) + me.expr(e21);
			};
		}
		var _this1 = this.binops;
		if(__map_reserved["-"] != null) {
			_this1.setReserved("-",function(e121,e221) {
				return me.expr(e121) - me.expr(e221);
			});
		} else {
			_this1.h["-"] = function(e121,e221) {
				return me.expr(e121) - me.expr(e221);
			};
		}
		var _this2 = this.binops;
		if(__map_reserved["*"] != null) {
			_this2.setReserved("*",function(e131,e231) {
				return me.expr(e131) * me.expr(e231);
			});
		} else {
			_this2.h["*"] = function(e131,e231) {
				return me.expr(e131) * me.expr(e231);
			};
		}
		var _this3 = this.binops;
		if(__map_reserved["/"] != null) {
			_this3.setReserved("/",function(e141,e241) {
				return me.expr(e141) / me.expr(e241);
			});
		} else {
			_this3.h["/"] = function(e141,e241) {
				return me.expr(e141) / me.expr(e241);
			};
		}
		var _this4 = this.binops;
		if(__map_reserved["%"] != null) {
			_this4.setReserved("%",function(e151,e251) {
				return me.expr(e151) % me.expr(e251);
			});
		} else {
			_this4.h["%"] = function(e151,e251) {
				return me.expr(e151) % me.expr(e251);
			};
		}
		var _this5 = this.binops;
		if(__map_reserved["&"] != null) {
			_this5.setReserved("&",function(e161,e261) {
				return me.expr(e161) & me.expr(e261);
			});
		} else {
			_this5.h["&"] = function(e161,e261) {
				return me.expr(e161) & me.expr(e261);
			};
		}
		var _this6 = this.binops;
		if(__map_reserved["|"] != null) {
			_this6.setReserved("|",function(e171,e271) {
				return me.expr(e171) | me.expr(e271);
			});
		} else {
			_this6.h["|"] = function(e171,e271) {
				return me.expr(e171) | me.expr(e271);
			};
		}
		var _this7 = this.binops;
		if(__map_reserved["^"] != null) {
			_this7.setReserved("^",function(e181,e281) {
				return me.expr(e181) ^ me.expr(e281);
			});
		} else {
			_this7.h["^"] = function(e181,e281) {
				return me.expr(e181) ^ me.expr(e281);
			};
		}
		var _this8 = this.binops;
		if(__map_reserved["<<"] != null) {
			_this8.setReserved("<<",function(e191,e291) {
				return me.expr(e191) << me.expr(e291);
			});
		} else {
			_this8.h["<<"] = function(e191,e291) {
				return me.expr(e191) << me.expr(e291);
			};
		}
		var _this9 = this.binops;
		if(__map_reserved[">>"] != null) {
			_this9.setReserved(">>",function(e1101,e2101) {
				return me.expr(e1101) >> me.expr(e2101);
			});
		} else {
			_this9.h[">>"] = function(e1101,e2101) {
				return me.expr(e1101) >> me.expr(e2101);
			};
		}
		var _this10 = this.binops;
		if(__map_reserved[">>>"] != null) {
			_this10.setReserved(">>>",function(e1111,e2111) {
				return me.expr(e1111) >>> me.expr(e2111);
			});
		} else {
			_this10.h[">>>"] = function(e1111,e2111) {
				return me.expr(e1111) >>> me.expr(e2111);
			};
		}
		var _this11 = this.binops;
		if(__map_reserved["=="] != null) {
			_this11.setReserved("==",function(e1121,e2121) {
				return me.expr(e1121) == me.expr(e2121);
			});
		} else {
			_this11.h["=="] = function(e1121,e2121) {
				return me.expr(e1121) == me.expr(e2121);
			};
		}
		var _this12 = this.binops;
		if(__map_reserved["!="] != null) {
			_this12.setReserved("!=",function(e1131,e2131) {
				return me.expr(e1131) != me.expr(e2131);
			});
		} else {
			_this12.h["!="] = function(e1131,e2131) {
				return me.expr(e1131) != me.expr(e2131);
			};
		}
		var _this13 = this.binops;
		if(__map_reserved[">="] != null) {
			_this13.setReserved(">=",function(e1141,e2141) {
				return me.expr(e1141) >= me.expr(e2141);
			});
		} else {
			_this13.h[">="] = function(e1141,e2141) {
				return me.expr(e1141) >= me.expr(e2141);
			};
		}
		var _this14 = this.binops;
		if(__map_reserved["<="] != null) {
			_this14.setReserved("<=",function(e1151,e2151) {
				return me.expr(e1151) <= me.expr(e2151);
			});
		} else {
			_this14.h["<="] = function(e1151,e2151) {
				return me.expr(e1151) <= me.expr(e2151);
			};
		}
		var _this15 = this.binops;
		if(__map_reserved[">"] != null) {
			_this15.setReserved(">",function(e1161,e2161) {
				return me.expr(e1161) > me.expr(e2161);
			});
		} else {
			_this15.h[">"] = function(e1161,e2161) {
				return me.expr(e1161) > me.expr(e2161);
			};
		}
		var _this16 = this.binops;
		if(__map_reserved["<"] != null) {
			_this16.setReserved("<",function(e1171,e2171) {
				return me.expr(e1171) < me.expr(e2171);
			});
		} else {
			_this16.h["<"] = function(e1171,e2171) {
				return me.expr(e1171) < me.expr(e2171);
			};
		}
		var _this17 = this.binops;
		if(__map_reserved["||"] != null) {
			_this17.setReserved("||",function(e1181,e2181) {
				if(me.expr(e1181) != true) {
					return me.expr(e2181) == true;
				} else {
					return true;
				}
			});
		} else {
			_this17.h["||"] = function(e1181,e2181) {
				if(me.expr(e1181) != true) {
					return me.expr(e2181) == true;
				} else {
					return true;
				}
			};
		}
		var _this18 = this.binops;
		if(__map_reserved["&&"] != null) {
			_this18.setReserved("&&",function(e1191,e2191) {
				if(me.expr(e1191) == true) {
					return me.expr(e2191) == true;
				} else {
					return false;
				}
			});
		} else {
			_this18.h["&&"] = function(e1191,e2191) {
				if(me.expr(e1191) == true) {
					return me.expr(e2191) == true;
				} else {
					return false;
				}
			};
		}
		var _this19 = this.binops;
		var value = $bind(this,this.assign);
		if(__map_reserved["="] != null) {
			_this19.setReserved("=",value);
		} else {
			_this19.h["="] = value;
		}
		var _this20 = this.binops;
		if(__map_reserved["..."] != null) {
			_this20.setReserved("...",function(e1201,e2201) {
				return new IntIterator(me.expr(e1201),me.expr(e2201));
			});
		} else {
			_this20.h["..."] = function(e1201,e2201) {
				return new IntIterator(me.expr(e1201),me.expr(e2201));
			};
		}
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v11,v21) {
			return v11 - v21;
		});
		this.assignOp("*=",function(v12,v22) {
			return v12 * v22;
		});
		this.assignOp("/=",function(v13,v23) {
			return v13 / v23;
		});
		this.assignOp("%=",function(v14,v24) {
			return v14 % v24;
		});
		this.assignOp("&=",function(v15,v25) {
			return v15 & v25;
		});
		this.assignOp("|=",function(v16,v26) {
			return v16 | v26;
		});
		this.assignOp("^=",function(v17,v27) {
			return v17 ^ v27;
		});
		this.assignOp("<<=",function(v18,v28) {
			return v18 << v28;
		});
		this.assignOp(">>=",function(v19,v29) {
			return v19 >> v29;
		});
		this.assignOp(">>>=",function(v110,v210) {
			return v110 >>> v210;
		});
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		var _g = e1.e;
		switch(_g[1]) {
		case 1:
			var id = _g[2];
			var l = this.locals.get(id);
			if(l == null) {
				this.variables.set(id,v);
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = _g[3];
			var e = _g[2];
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var index = _g[3];
			var e3 = _g[2];
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			var e4 = new hscript_Error(hscript_ErrorDef.EInvalidOp("="),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		var _this = this.binops;
		if(__map_reserved[op] != null) {
			_this.setReserved(op,function(e11,e21) {
				return me.evalAssignOp(op,fop,e11,e21);
			});
		} else {
			_this.h[op] = function(e11,e21) {
				return me.evalAssignOp(op,fop,e11,e21);
			};
		}
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		var _g = e1.e;
		switch(_g[1]) {
		case 1:
			var id = _g[2];
			var l = this.locals.get(id);
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				this.variables.set(id,v);
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = _g[3];
			var e = _g[2];
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var index = _g[3];
			var e3 = _g[2];
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index1),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				v = fop(arr[index1],this.expr(e2));
				arr[index1] = v;
			}
			break;
		default:
			var e4 = new hscript_Error(hscript_ErrorDef.EInvalidOp(op),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		this.curExpr = e;
		var e1 = e.e;
		switch(e1[1]) {
		case 1:
			var id = e1[2];
			var l = this.locals.get(id);
			var v = l == null ? this.variables.get(id) : l.r;
			if(prefix) {
				v += delta;
				if(l == null) {
					this.variables.set(id,v);
				} else {
					l.r = v;
				}
			} else if(l == null) {
				this.variables.set(id,v + delta);
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			var f = e1[3];
			var e2 = e1[2];
			var obj = this.expr(e2);
			var v1 = this.get(obj,f);
			if(prefix) {
				v1 += delta;
				this.set(obj,f,v1);
			} else {
				this.set(obj,f,v1 + delta);
			}
			return v1;
		case 16:
			var index = e1[3];
			var e3 = e1[2];
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				var v2 = (js_Boot.__cast(arr , haxe_IMap)).get(index1);
				if(prefix) {
					v2 += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2 + delta);
				}
				return v2;
			} else {
				var v3 = arr[index1];
				if(prefix) {
					v3 += delta;
					arr[index1] = v3;
				} else {
					arr[index1] = v3 + delta;
				}
				return v3;
			}
			break;
		default:
			var e4 = new hscript_Error(hscript_ErrorDef.EInvalidOp(delta > 0 ? "++" : "--"),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw new js__$Boot_HaxeError(e4);
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			if( js_Boot.__instanceof(e1,hscript__$Interp_Stop) ) {
				switch(e1[1]) {
				case 0:
					throw new js__$Boot_HaxeError("Invalid break");
					break;
				case 1:
					throw new js__$Boot_HaxeError("Invalid continue");
					break;
				case 2:
					var v = this.returnValue;
					this.returnValue = null;
					return v;
				}
			} else throw(e1);
		}
	}
	,duplicate: function(h) {
		var h2 = new haxe_ds_StringMap();
		var k = h.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var value = __map_reserved[k1] != null ? h.getReserved(k1) : h.h[k1];
			if(__map_reserved[k1] != null) {
				h2.setReserved(k1,value);
			} else {
				h2.h[k1] = value;
			}
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			var key = d.n;
			var value = d.old;
			var _this = this.locals;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,value);
			} else {
				_this.h[key] = value;
			}
		}
	}
	,edef: function(e) {
		return e.e;
	}
	,error: function(e,rethrow) {
		if(rethrow == null) {
			rethrow = false;
		}
		var e1 = new hscript_Error(e,this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
		if(rethrow) {
			throw new js__$Boot_HaxeError(e1);
		} else {
			throw new js__$Boot_HaxeError(e1);
		}
	}
	,rethrow: function(e) {
		throw js__$Boot_HaxeError.wrap(e);
	}
	,resolve: function(id) {
		var _this = this.locals;
		var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(l != null) {
			return l.r;
		}
		var _this1 = this.variables;
		var v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
		var tmp;
		if(v == null) {
			var _this2 = this.variables;
			tmp = !(__map_reserved[id] != null ? _this2.existsReserved(id) : _this2.h.hasOwnProperty(id));
		} else {
			tmp = false;
		}
		if(tmp) {
			var e = new hscript_Error(hscript_ErrorDef.EUnknownVariable(id),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw new js__$Boot_HaxeError(e);
		}
		return v;
	}
	,expr: function(e) {
		var _gthis = this;
		this.curExpr = e;
		var e1 = e.e;
		switch(e1[1]) {
		case 0:
			var c = e1[2];
			switch(c[1]) {
			case 0:
				var v = c[2];
				return v;
			case 1:
				var f = c[2];
				return f;
			case 2:
				var s = c[2];
				return s;
			}
			break;
		case 1:
			var id = e1[2];
			return this.resolve(id);
		case 2:
			var e2 = e1[4];
			var n = e1[2];
			this.declared.push({ n : n, old : this.locals.get(n)});
			this.locals.set(n,{ r : e2 == null ? null : this.expr(e2)});
			return null;
		case 3:
			var e3 = e1[2];
			return this.expr(e3);
		case 4:
			var exprs = e1[2];
			var old = this.declared.length;
			var v1 = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e4 = exprs[_g];
				++_g;
				v1 = this.expr(e4);
			}
			this.restore(old);
			return v1;
		case 5:
			var f1 = e1[3];
			var e5 = e1[2];
			return this.get(this.expr(e5),f1);
		case 6:
			var e21 = e1[4];
			var e11 = e1[3];
			var op = e1[2];
			var fop = this.binops.get(op);
			if(fop == null) {
				var e6 = new hscript_Error(hscript_ErrorDef.EInvalidOp(op),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
				throw new js__$Boot_HaxeError(e6);
			}
			return fop(e11,e21);
		case 7:
			var e7 = e1[4];
			var prefix = e1[3];
			var op1 = e1[2];
			switch(op1) {
			case "!":
				return this.expr(e7) != true;
			case "++":
				return this.increment(e7,prefix,1);
			case "-":
				return -this.expr(e7);
			case "--":
				return this.increment(e7,prefix,-1);
			case "~":
				return ~this.expr(e7);
			default:
				var e8 = new hscript_Error(hscript_ErrorDef.EInvalidOp(op1),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
				throw new js__$Boot_HaxeError(e8);
			}
			break;
		case 8:
			var params = e1[3];
			var e9 = e1[2];
			var args = [];
			var _g1 = 0;
			while(_g1 < params.length) {
				var p = params[_g1];
				++_g1;
				args.push(this.expr(p));
			}
			var _g2 = e9.e;
			if(_g2[1] == 5) {
				var f2 = _g2[3];
				var e10 = _g2[2];
				var obj = this.expr(e10);
				if(obj == null) {
					var e12 = new hscript_Error(hscript_ErrorDef.EInvalidAccess(f2),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
					throw new js__$Boot_HaxeError(e12);
				}
				return this.fcall(obj,f2,args);
			} else {
				return this.call(null,this.expr(e9),args);
			}
			break;
		case 9:
			var e22 = e1[4];
			var e13 = e1[3];
			var econd = e1[2];
			if(this.expr(econd) == true) {
				return this.expr(e13);
			} else if(e22 == null) {
				return null;
			} else {
				return this.expr(e22);
			}
			break;
		case 10:
			var e14 = e1[3];
			var econd1 = e1[2];
			this.whileLoop(econd1,e14);
			return null;
		case 11:
			var e15 = e1[4];
			var it = e1[3];
			var v2 = e1[2];
			this.forLoop(v2,it,e15);
			return null;
		case 12:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SBreak);
			break;
		case 13:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SContinue);
			break;
		case 14:
			var name = e1[4];
			var fexpr = e1[3];
			var params1 = e1[2];
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g3 = 0;
			while(_g3 < params1.length) {
				var p1 = params1[_g3];
				++_g3;
				if(p1.opt) {
					hasOpt = true;
				} else {
					minParams += 1;
				}
			}
			var f3 = function(args1) {
				if(args1.length != params1.length) {
					if(args1.length < minParams) {
						var str = "Invalid number of parameters. Got " + args1.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						throw new js__$Boot_HaxeError(str);
					}
					var args2 = [];
					var extraParams = args1.length - minParams;
					var pos = 0;
					var _g4 = 0;
					while(_g4 < params1.length) {
						var p2 = params1[_g4];
						++_g4;
						if(p2.opt) {
							if(extraParams > 0) {
								args2.push(args1[pos++]);
								--extraParams;
							} else {
								args2.push(null);
							}
						} else {
							args2.push(args1[pos++]);
						}
					}
					args1 = args2;
				}
				var old1 = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g11 = 0;
				var _g5 = params1.length;
				while(_g11 < _g5) {
					var i = _g11++;
					me.locals.set(params1[i].name,{ r : args1[i]});
				}
				var r = null;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( e16 ) {
						if (e16 instanceof js__$Boot_HaxeError) e16 = e16.val;
						me.locals = old1;
						me.depth = depth;
						throw js__$Boot_HaxeError.wrap(e16);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				me.locals = old1;
				me.depth = depth;
				return r;
			};
			var f4 = Reflect.makeVarArgs(f3);
			if(name != null) {
				if(this.depth == 0) {
					this.variables.set(name,f4);
				} else {
					var tmp = this.declared;
					var tmp1 = this.locals.get(name);
					tmp.push({ n : name, old : tmp1});
					var ref = { r : f4};
					this.locals.set(name,ref);
					if(__map_reserved[name] != null) {
						capturedLocals.setReserved(name,ref);
					} else {
						capturedLocals.h[name] = ref;
					}
				}
			}
			return f4;
		case 15:
			var e17 = e1[2];
			this.returnValue = e17 == null ? null : this.expr(e17);
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SReturn);
			break;
		case 16:
			var index = e1[3];
			var e18 = e1[2];
			var arr = this.expr(e18);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index1);
			} else {
				return arr[index1];
			}
			break;
		case 17:
			var arr1 = e1[2];
			var tmp2;
			if(arr1.length > 0) {
				var _g6 = arr1[0].e;
				if(_g6[1] == 6) {
					if(_g6[2] == "=>") {
						tmp2 = true;
					} else {
						tmp2 = false;
					}
				} else {
					tmp2 = false;
				}
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				var isAllString = true;
				var isAllInt = true;
				var isAllObject = true;
				var isAllEnum = true;
				var keys = [];
				var values = [];
				var _g12 = 0;
				while(_g12 < arr1.length) {
					var e19 = arr1[_g12];
					++_g12;
					var _g21 = e19.e;
					if(_g21[1] == 6) {
						if(_g21[2] == "=>") {
							var eValue = _g21[4];
							var eKey = _g21[3];
							var key = this.expr(eKey);
							var value = this.expr(eValue);
							if(isAllString) {
								isAllString = typeof(key) == "string";
							} else {
								isAllString = false;
							}
							if(isAllInt) {
								if(typeof(key) == "number") {
									isAllInt = ((key | 0) === key);
								} else {
									isAllInt = false;
								}
							} else {
								isAllInt = false;
							}
							if(isAllObject) {
								isAllObject = Reflect.isObject(key);
							} else {
								isAllObject = false;
							}
							if(isAllEnum) {
								isAllEnum = Reflect.isEnumValue(key);
							} else {
								isAllEnum = false;
							}
							keys.push(key);
							values.push(value);
						} else {
							throw new js__$Boot_HaxeError("=> expected");
						}
					} else {
						throw new js__$Boot_HaxeError("=> expected");
					}
				}
				var map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw new js__$Boot_HaxeError("Inconsistent key types");
				}
				var _g22 = 0;
				var _g13 = keys.length;
				while(_g22 < _g13) {
					var n1 = _g22++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n1],values[n1]);
				}
				return map;
			} else {
				var a = [];
				var _g14 = 0;
				while(_g14 < arr1.length) {
					var e20 = arr1[_g14];
					++_g14;
					a.push(this.expr(e20));
				}
				return a;
			}
			break;
		case 18:
			var params2 = e1[3];
			var cl = e1[2];
			var a1 = [];
			var _g7 = 0;
			while(_g7 < params2.length) {
				var e23 = params2[_g7];
				++_g7;
				a1.push(this.expr(e23));
			}
			return this.cnew(cl,a1);
		case 19:
			var e24 = e1[2];
			throw js__$Boot_HaxeError.wrap(this.expr(e24));
			break;
		case 20:
			var ecatch = e1[5];
			var n2 = e1[3];
			var e25 = e1[2];
			var old2 = this.declared.length;
			var oldTry = this.inTry;
			try {
				this.inTry = true;
				var v3 = this.expr(e25);
				this.restore(old2);
				this.inTry = oldTry;
				return v3;
			} catch( $e0 ) {
				if ($e0 instanceof js__$Boot_HaxeError) $e0 = $e0.val;
				if( js_Boot.__instanceof($e0,hscript__$Interp_Stop) ) {
					var err = $e0;
					this.inTry = oldTry;
					throw new js__$Boot_HaxeError(err);
				} else {
				var err1 = $e0;
				this.restore(old2);
				this.inTry = oldTry;
				this.declared.push({ n : n2, old : this.locals.get(n2)});
				this.locals.set(n2,{ r : err1});
				var v4 = this.expr(ecatch);
				this.restore(old2);
				return v4;
				}
			}
			break;
		case 21:
			var fl = e1[2];
			var o = { };
			var _g8 = 0;
			while(_g8 < fl.length) {
				var f5 = fl[_g8];
				++_g8;
				this.set(o,f5.name,this.expr(f5.e));
			}
			return o;
		case 22:
			var e26 = e1[4];
			var e110 = e1[3];
			var econd2 = e1[2];
			if(this.expr(econd2) == true) {
				return this.expr(e110);
			} else {
				return this.expr(e26);
			}
			break;
		case 23:
			var def = e1[4];
			var cases = e1[3];
			var e27 = e1[2];
			var val = this.expr(e27);
			var match = false;
			var _g9 = 0;
			while(_g9 < cases.length) {
				var c1 = cases[_g9];
				++_g9;
				var _g15 = 0;
				var _g23 = c1.values;
				while(_g15 < _g23.length) {
					var v5 = _g23[_g15];
					++_g15;
					if(this.expr(v5) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c1.expr);
					break;
				}
			}
			if(!match) {
				if(def == null) {
					val = null;
				} else {
					val = this.expr(def);
				}
			}
			return val;
		case 24:
			var e28 = e1[3];
			var econd3 = e1[2];
			this.doWhileLoop(econd3,e28);
			return null;
		case 25:
			var e29 = e1[4];
			return this.expr(e29);
		}
	}
	,doWhileLoop: function(econd,e) {
		var old = this.declared.length;
		try {
			while(true) {
				try {
					this.expr(e);
				} catch( err ) {
					if (err instanceof js__$Boot_HaxeError) err = err.val;
					if( js_Boot.__instanceof(err,hscript__$Interp_Stop) ) {
						switch(err[1]) {
						case 0:
							throw "__break__";
							break;
						case 1:
							break;
						case 2:
							throw new js__$Boot_HaxeError(err);
							break;
						}
					} else throw(err);
				}
				if(!(this.expr(econd) == true)) {
					throw "__break__";
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		this.restore(old);
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		try {
			while(this.expr(econd) == true) try {
				this.expr(e);
			} catch( err ) {
				if (err instanceof js__$Boot_HaxeError) err = err.val;
				if( js_Boot.__instanceof(err,hscript__$Interp_Stop) ) {
					switch(err[1]) {
					case 0:
						throw "__break__";
						break;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err);
						break;
					}
				} else throw(err);
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $iterator(v)();
		} catch( e ) {
		}
		if(v.hasNext == null || v.next == null) {
			var e1 = new hscript_Error(hscript_ErrorDef.EInvalidIterator(v),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw new js__$Boot_HaxeError(e1);
		}
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		var _this = this.locals;
		this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
		var it1 = this.makeIterator(this.expr(it));
		try {
			while(it1.hasNext()) {
				var this1 = this.locals;
				var value = { r : it1.next()};
				var _this1 = this1;
				if(__map_reserved[n] != null) {
					_this1.setReserved(n,value);
				} else {
					_this1.h[n] = value;
				}
				try {
					this.expr(e);
				} catch( err ) {
					if (err instanceof js__$Boot_HaxeError) err = err.val;
					if( js_Boot.__instanceof(err,hscript__$Interp_Stop) ) {
						switch(err[1]) {
						case 0:
							throw "__break__";
							break;
						case 1:
							break;
						case 2:
							throw new js__$Boot_HaxeError(err);
							break;
						}
					} else throw(err);
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		this.restore(old);
	}
	,isMap: function(o) {
		return js_Boot.__instanceof(o,haxe_IMap);
	}
	,getMapValue: function(map,key) {
		return (js_Boot.__cast(map , haxe_IMap)).get(key);
	}
	,setMapValue: function(map,key,value) {
		(js_Boot.__cast(map , haxe_IMap)).set(key,value);
	}
	,get: function(o,f) {
		if(o == null) {
			var e = new hscript_Error(hscript_ErrorDef.EInvalidAccess(f),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw new js__$Boot_HaxeError(e);
		}
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) {
			var e = new hscript_Error(hscript_ErrorDef.EInvalidAccess(f),this.curExpr.pmin,this.curExpr.pmax,this.curExpr.origin,this.curExpr.line);
			throw new js__$Boot_HaxeError(e);
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = Type.resolveClass(cl);
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
	,__class__: hscript_Interp
};
var hscript_Token = { __ename__ : true, __constructs__ : ["TEof","TConst","TId","TOp","TPOpen","TPClose","TBrOpen","TBrClose","TDot","TComma","TSemicolon","TBkOpen","TBkClose","TQuestion","TDoubleDot","TMeta","TPrepro"] };
hscript_Token.TEof = ["TEof",0];
hscript_Token.TEof.toString = $estr;
hscript_Token.TEof.__enum__ = hscript_Token;
hscript_Token.TConst = function(c) { var $x = ["TConst",1,c]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
hscript_Token.TId = function(s) { var $x = ["TId",2,s]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
hscript_Token.TOp = function(s) { var $x = ["TOp",3,s]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
hscript_Token.TPOpen = ["TPOpen",4];
hscript_Token.TPOpen.toString = $estr;
hscript_Token.TPOpen.__enum__ = hscript_Token;
hscript_Token.TPClose = ["TPClose",5];
hscript_Token.TPClose.toString = $estr;
hscript_Token.TPClose.__enum__ = hscript_Token;
hscript_Token.TBrOpen = ["TBrOpen",6];
hscript_Token.TBrOpen.toString = $estr;
hscript_Token.TBrOpen.__enum__ = hscript_Token;
hscript_Token.TBrClose = ["TBrClose",7];
hscript_Token.TBrClose.toString = $estr;
hscript_Token.TBrClose.__enum__ = hscript_Token;
hscript_Token.TDot = ["TDot",8];
hscript_Token.TDot.toString = $estr;
hscript_Token.TDot.__enum__ = hscript_Token;
hscript_Token.TComma = ["TComma",9];
hscript_Token.TComma.toString = $estr;
hscript_Token.TComma.__enum__ = hscript_Token;
hscript_Token.TSemicolon = ["TSemicolon",10];
hscript_Token.TSemicolon.toString = $estr;
hscript_Token.TSemicolon.__enum__ = hscript_Token;
hscript_Token.TBkOpen = ["TBkOpen",11];
hscript_Token.TBkOpen.toString = $estr;
hscript_Token.TBkOpen.__enum__ = hscript_Token;
hscript_Token.TBkClose = ["TBkClose",12];
hscript_Token.TBkClose.toString = $estr;
hscript_Token.TBkClose.__enum__ = hscript_Token;
hscript_Token.TQuestion = ["TQuestion",13];
hscript_Token.TQuestion.toString = $estr;
hscript_Token.TQuestion.__enum__ = hscript_Token;
hscript_Token.TDoubleDot = ["TDoubleDot",14];
hscript_Token.TDoubleDot.toString = $estr;
hscript_Token.TDoubleDot.__enum__ = hscript_Token;
hscript_Token.TMeta = function(s) { var $x = ["TMeta",15,s]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
hscript_Token.TPrepro = function(s) { var $x = ["TPrepro",16,s]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
var hscript_Parser = function() {
	this.uid = 0;
	this.preprocesorValues = new haxe_ds_StringMap();
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	this.unops = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g = priorities.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g2 = 0;
		var _g3 = priorities[i];
		while(_g2 < _g3.length) {
			var x = _g3[_g2];
			++_g2;
			var _this = this.opPriority;
			if(__map_reserved[x] != null) {
				_this.setReserved(x,i);
			} else {
				_this.h[x] = i;
			}
			if(i == 9) {
				var _this1 = this.opRightAssoc;
				if(__map_reserved[x] != null) {
					_this1.setReserved(x,true);
				} else {
					_this1.h[x] = true;
				}
			}
		}
	}
	var _g4 = 0;
	var _g11 = ["!","++","--","-","~"];
	while(_g4 < _g11.length) {
		var x1 = _g11[_g4];
		++_g4;
		var _this2 = this.unops;
		var value = x1 == "++" || x1 == "--";
		if(__map_reserved[x1] != null) {
			_this2.setReserved(x1,value);
		} else {
			_this2.h[x1] = value;
		}
	}
};
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = true;
hscript_Parser.prototype = {
	error: function(err,pmin,pmax) {
		throw new js__$Boot_HaxeError(new hscript_Error(err,pmin,pmax,this.origin,this.line));
	}
	,invalidChar: function(c) {
		throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EInvalidChar(c),this.readPos,this.readPos,this.origin,this.line));
	}
	,initParser: function(origin) {
		this.preprocStack = [];
		this.origin = origin;
		this.readPos = 0;
		this.tokenMin = this.oldTokenMin = 0;
		this.tokenMax = this.oldTokenMax = 0;
		this.tokens = new List();
		this["char"] = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		var _g1 = 0;
		var _g = this.opChars.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g11 = 0;
		var _g2 = this.identChars.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.idents[HxOverrides.cca(this.identChars,i1)] = true;
		}
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		return this.parse(new haxe_io_StringInput(s),origin);
	}
	,parse: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			var e = hscript_ExprDef.EBlock(a);
			var pmin = 0;
			var pmax = null;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
		}
	}
	,unexpected: function(tk) {
		throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EUnexpected(this.tokenString(tk)),this.tokenMin,this.tokenMax,this.origin,this.line));
	}
	,push: function(tk) {
		this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
		this.tokenMin = this.oldTokenMin;
		this.tokenMax = this.oldTokenMax;
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,ensureToken: function(tk) {
		var t = this.token();
		if(!Type.enumEq(t,tk)) {
			this.unexpected(t);
		}
	}
	,maybe: function(tk) {
		var t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
		this.tokenMin = this.oldTokenMin;
		this.tokenMax = this.oldTokenMax;
		return false;
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk[1] == 2) {
			var id = tk[2];
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e.e;
	}
	,pmin: function(e) {
		return e.pmin;
	}
	,pmax: function(e) {
		return e.pmax;
	}
	,mk: function(e,pmin,pmax) {
		if(e == null) {
			return null;
		}
		if(pmin == null) {
			pmin = this.tokenMin;
		}
		if(pmax == null) {
			pmax = this.tokenMax;
		}
		return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
	}
	,isBlock: function(e) {
		var _g = e.e;
		switch(_g[1]) {
		case 2:
			var e1 = _g[4];
			var t = _g[3];
			if(e1 != null) {
				return this.isBlock(e1);
			} else if(t != null) {
				if(t == null) {
					return false;
				} else if(t[1] == 2) {
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 6:
			var e2 = _g[4];
			return this.isBlock(e2);
		case 7:
			var e3 = _g[4];
			var prefix = _g[3];
			if(!prefix) {
				return this.isBlock(e3);
			} else {
				return false;
			}
			break;
		case 9:
			var e21 = _g[4];
			var e11 = _g[3];
			if(e21 != null) {
				return this.isBlock(e21);
			} else {
				return this.isBlock(e11);
			}
			break;
		case 10:
			var e4 = _g[3];
			return this.isBlock(e4);
		case 11:
			var e5 = _g[4];
			return this.isBlock(e5);
		case 14:
			var e6 = _g[3];
			return this.isBlock(e6);
		case 15:
			var e7 = _g[2];
			if(e7 != null) {
				return this.isBlock(e7);
			} else {
				return false;
			}
			break;
		case 20:
			var e8 = _g[5];
			return this.isBlock(e8);
		case 4:case 21:case 23:
			return true;
		case 24:
			var e9 = _g[3];
			return this.isBlock(e9);
		case 25:
			var e10 = _g[4];
			return this.isBlock(e10);
		default:
			return false;
		}
	}
	,parseFullExpr: function(exprs) {
		var e = this.parseExpr();
		exprs.push(e);
		var tk = this.token();
		while(true) {
			var tmp;
			if(tk == hscript_Token.TComma) {
				var _g = e.e;
				if(_g[1] == 2) {
					tmp = true;
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			} else {
				this.unexpected(tk);
			}
		}
	}
	,parseObject: function(p1) {
		var fl = [];
		try {
			while(true) {
				var tk = this.token();
				var id = null;
				switch(tk[1]) {
				case 1:
					var c = tk[2];
					if(!this.allowJSON) {
						this.unexpected(tk);
					}
					if(c[1] == 2) {
						var s = c[2];
						id = s;
					} else {
						this.unexpected(tk);
					}
					break;
				case 2:
					var i = tk[2];
					id = i;
					break;
				case 7:
					throw "__break__";
					break;
				default:
					this.unexpected(tk);
				}
				var t = this.token();
				if(t != hscript_Token.TDoubleDot) {
					this.unexpected(t);
				}
				fl.push({ name : id, e : this.parseExpr()});
				tk = this.token();
				switch(tk[1]) {
				case 7:
					throw "__break__";
					break;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		var e = hscript_ExprDef.EObject(fl);
		var pmin = p1;
		var pmax = null;
		var tmp;
		if(e == null) {
			tmp = null;
		} else {
			if(pmin == null) {
				pmin = this.tokenMin;
			}
			if(pmax == null) {
				pmax = this.tokenMax;
			}
			tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
		}
		return this.parseExprNext(tmp);
	}
	,parseExpr: function() {
		var tk = this.token();
		var p1 = this.tokenMin;
		switch(tk[1]) {
		case 1:
			var c = tk[2];
			var e = hscript_ExprDef.EConst(c);
			var pmin = null;
			var pmax = null;
			var tmp;
			if(e == null) {
				tmp = null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				tmp = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp);
		case 2:
			var id = tk[2];
			var e1 = this.parseStructure(id);
			if(e1 == null) {
				var e2 = hscript_ExprDef.EIdent(id);
				var pmin1 = null;
				var pmax1 = null;
				if(e2 == null) {
					e1 = null;
				} else {
					if(pmin1 == null) {
						pmin1 = this.tokenMin;
					}
					if(pmax1 == null) {
						pmax1 = this.tokenMax;
					}
					e1 = { e : e2, pmin : pmin1, pmax : pmax1, origin : this.origin, line : this.line};
				}
			}
			return this.parseExprNext(e1);
		case 3:
			var op = tk[2];
			if(this.unops.exists(op)) {
				var start = this.tokenMin;
				var e3 = this.parseExpr();
				if(op == "-") {
					var _g = e3.e;
					if(_g[1] == 0) {
						switch(_g[2][1]) {
						case 0:
							var i = _g[2][2];
							var e4 = hscript_ExprDef.EConst(hscript_Const.CInt(-i));
							var pmin2 = start;
							var pmax2 = e3.pmax;
							if(e4 == null) {
								return null;
							} else {
								if(pmin2 == null) {
									pmin2 = this.tokenMin;
								}
								if(pmax2 == null) {
									pmax2 = this.tokenMax;
								}
								return { e : e4, pmin : pmin2, pmax : pmax2, origin : this.origin, line : this.line};
							}
							break;
						case 1:
							var f = _g[2][2];
							var e5 = hscript_ExprDef.EConst(hscript_Const.CFloat(-f));
							var pmin3 = start;
							var pmax3 = e3.pmax;
							if(e5 == null) {
								return null;
							} else {
								if(pmin3 == null) {
									pmin3 = this.tokenMin;
								}
								if(pmax3 == null) {
									pmax3 = this.tokenMax;
								}
								return { e : e5, pmin : pmin3, pmax : pmax3, origin : this.origin, line : this.line};
							}
							break;
						default:
						}
					}
				}
				return this.makeUnop(op,e3);
			}
			return this.unexpected(tk);
		case 4:
			var e6 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			var e7 = hscript_ExprDef.EParent(e6);
			var pmin4 = p1;
			var pmax4 = this.tokenMax;
			var tmp1;
			if(e7 == null) {
				tmp1 = null;
			} else {
				if(pmin4 == null) {
					pmin4 = this.tokenMin;
				}
				if(pmax4 == null) {
					pmax4 = this.tokenMax;
				}
				tmp1 = { e : e7, pmin : pmin4, pmax : pmax4, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp1);
		case 6:
			tk = this.token();
			switch(tk[1]) {
			case 1:
				var c1 = tk[2];
				if(this.allowJSON) {
					if(c1[1] == 2) {
						var tk2 = this.token();
						this.tokens.push({ t : tk2, min : this.tokenMin, max : this.tokenMax});
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
						this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
						if(tk2[1] == 14) {
							return this.parseExprNext(this.parseObject(p1));
						}
					} else {
						this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
					}
				} else {
					this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
				}
				break;
			case 2:
				var tk21 = this.token();
				this.tokens.push({ t : tk21, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				if(tk21[1] == 14) {
					return this.parseExprNext(this.parseObject(p1));
				}
				break;
			case 7:
				var e8 = hscript_ExprDef.EObject([]);
				var pmin5 = p1;
				var pmax5 = null;
				var tmp2;
				if(e8 == null) {
					tmp2 = null;
				} else {
					if(pmin5 == null) {
						pmin5 = this.tokenMin;
					}
					if(pmax5 == null) {
						pmax5 = this.tokenMax;
					}
					tmp2 = { e : e8, pmin : pmin5, pmax : pmax5, origin : this.origin, line : this.line};
				}
				return this.parseExprNext(tmp2);
			default:
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			var a = [];
			while(true) {
				this.parseFullExpr(a);
				tk = this.token();
				if(tk == hscript_Token.TBrClose) {
					break;
				}
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			var e9 = hscript_ExprDef.EBlock(a);
			var pmin6 = p1;
			var pmax6 = null;
			if(e9 == null) {
				return null;
			} else {
				if(pmin6 == null) {
					pmin6 = this.tokenMin;
				}
				if(pmax6 == null) {
					pmax6 = this.tokenMax;
				}
				return { e : e9, pmin : pmin6, pmax : pmax6, origin : this.origin, line : this.line};
			}
			break;
		case 11:
			var a1 = [];
			tk = this.token();
			while(tk != hscript_Token.TBkClose) {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				a1.push(this.parseExpr());
				tk = this.token();
				if(tk == hscript_Token.TComma) {
					tk = this.token();
				}
			}
			if(a1.length == 1) {
				var _g1 = a1[0].e;
				switch(_g1[1]) {
				case 10:case 11:case 24:
					var tmp3 = "__a_" + this.uid++;
					var e10 = hscript_ExprDef.EArrayDecl([]);
					var pmin7 = p1;
					var pmax7 = null;
					var e11;
					if(e10 == null) {
						e11 = null;
					} else {
						if(pmin7 == null) {
							pmin7 = this.tokenMin;
						}
						if(pmax7 == null) {
							pmax7 = this.tokenMax;
						}
						e11 = { e : e10, pmin : pmin7, pmax : pmax7, origin : this.origin, line : this.line};
					}
					var e12 = hscript_ExprDef.EVar(tmp3,null,e11);
					var pmin8 = p1;
					var pmax8 = null;
					var e13;
					if(e12 == null) {
						e13 = null;
					} else {
						if(pmin8 == null) {
							pmin8 = this.tokenMin;
						}
						if(pmax8 == null) {
							pmax8 = this.tokenMax;
						}
						e13 = { e : e12, pmin : pmin8, pmax : pmax8, origin : this.origin, line : this.line};
					}
					var e14 = this.mapCompr(tmp3,a1[0]);
					var e15 = hscript_ExprDef.EIdent(tmp3);
					var pmin9 = p1;
					var pmax9 = null;
					var e16;
					if(e15 == null) {
						e16 = null;
					} else {
						if(pmin9 == null) {
							pmin9 = this.tokenMin;
						}
						if(pmax9 == null) {
							pmax9 = this.tokenMax;
						}
						e16 = { e : e15, pmin : pmin9, pmax : pmax9, origin : this.origin, line : this.line};
					}
					var e17 = hscript_ExprDef.EBlock([e13,e14,e16]);
					var pmin10 = p1;
					var pmax10 = null;
					var e18;
					if(e17 == null) {
						e18 = null;
					} else {
						if(pmin10 == null) {
							pmin10 = this.tokenMin;
						}
						if(pmax10 == null) {
							pmax10 = this.tokenMax;
						}
						e18 = { e : e17, pmin : pmin10, pmax : pmax10, origin : this.origin, line : this.line};
					}
					return this.parseExprNext(e18);
				default:
				}
			}
			var e19 = hscript_ExprDef.EArrayDecl(a1);
			var pmin11 = p1;
			var pmax11 = null;
			var tmp4;
			if(e19 == null) {
				tmp4 = null;
			} else {
				if(pmin11 == null) {
					pmin11 = this.tokenMin;
				}
				if(pmax11 == null) {
					pmax11 = this.tokenMax;
				}
				tmp4 = { e : e19, pmin : pmin11, pmax : pmax11, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp4);
		case 15:
			var id1 = tk[2];
			if(this.allowMetadata) {
				var args = this.parseMetaArgs();
				var e20 = hscript_ExprDef.EMeta(id1,args,this.parseExpr());
				var pmin12 = p1;
				var pmax12 = null;
				if(e20 == null) {
					return null;
				} else {
					if(pmin12 == null) {
						pmin12 = this.tokenMin;
					}
					if(pmax12 == null) {
						pmax12 = this.tokenMax;
					}
					return { e : e20, pmin : pmin12, pmax : pmax12, origin : this.origin, line : this.line};
				}
			} else {
				return this.unexpected(tk);
			}
			break;
		default:
			return this.unexpected(tk);
		}
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			try {
				while(true) {
					args.push(this.parseExpr());
					var _g = this.token();
					switch(_g[1]) {
					case 5:
						throw "__break__";
						break;
					case 9:
						break;
					default:
						var tk1 = _g;
						this.unexpected(tk1);
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		var edef;
		var _g = e.e;
		switch(_g[1]) {
		case 3:
			var e2 = _g[2];
			edef = hscript_ExprDef.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			if(_g[2].length == 1) {
				var e1 = _g[2][0];
				edef = hscript_ExprDef.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				var e3 = hscript_ExprDef.EIdent(tmp);
				var pmin = e.pmin;
				var pmax = e.pmax;
				var e4;
				if(e3 == null) {
					e4 = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					e4 = { e : e3, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
				var e5 = hscript_ExprDef.EField(e4,"push");
				var pmin1 = e.pmin;
				var pmax1 = e.pmax;
				var edef1;
				if(e5 == null) {
					edef1 = null;
				} else {
					if(pmin1 == null) {
						pmin1 = this.tokenMin;
					}
					if(pmax1 == null) {
						pmax1 = this.tokenMax;
					}
					edef1 = { e : e5, pmin : pmin1, pmax : pmax1, origin : this.origin, line : this.line};
				}
				edef = hscript_ExprDef.ECall(edef1,[e]);
			}
			break;
		case 9:
			var e21 = _g[4];
			var e11 = _g[3];
			var cond = _g[2];
			if(e21 == null) {
				edef = hscript_ExprDef.EIf(cond,this.mapCompr(tmp,e11),null);
			} else {
				var e6 = hscript_ExprDef.EIdent(tmp);
				var pmin2 = e.pmin;
				var pmax2 = e.pmax;
				var e7;
				if(e6 == null) {
					e7 = null;
				} else {
					if(pmin2 == null) {
						pmin2 = this.tokenMin;
					}
					if(pmax2 == null) {
						pmax2 = this.tokenMax;
					}
					e7 = { e : e6, pmin : pmin2, pmax : pmax2, origin : this.origin, line : this.line};
				}
				var e8 = hscript_ExprDef.EField(e7,"push");
				var pmin3 = e.pmin;
				var pmax3 = e.pmax;
				var edef2;
				if(e8 == null) {
					edef2 = null;
				} else {
					if(pmin3 == null) {
						pmin3 = this.tokenMin;
					}
					if(pmax3 == null) {
						pmax3 = this.tokenMax;
					}
					edef2 = { e : e8, pmin : pmin3, pmax : pmax3, origin : this.origin, line : this.line};
				}
				edef = hscript_ExprDef.ECall(edef2,[e]);
			}
			break;
		case 10:
			var e22 = _g[3];
			var cond1 = _g[2];
			edef = hscript_ExprDef.EWhile(cond1,this.mapCompr(tmp,e22));
			break;
		case 11:
			var e23 = _g[4];
			var it = _g[3];
			var v = _g[2];
			edef = hscript_ExprDef.EFor(v,it,this.mapCompr(tmp,e23));
			break;
		case 24:
			var e24 = _g[3];
			var cond2 = _g[2];
			edef = hscript_ExprDef.EDoWhile(cond2,this.mapCompr(tmp,e24));
			break;
		default:
			var e9 = hscript_ExprDef.EIdent(tmp);
			var pmin4 = e.pmin;
			var pmax4 = e.pmax;
			var e10;
			if(e9 == null) {
				e10 = null;
			} else {
				if(pmin4 == null) {
					pmin4 = this.tokenMin;
				}
				if(pmax4 == null) {
					pmax4 = this.tokenMax;
				}
				e10 = { e : e9, pmin : pmin4, pmax : pmax4, origin : this.origin, line : this.line};
			}
			var e12 = hscript_ExprDef.EField(e10,"push");
			var pmin5 = e.pmin;
			var pmax5 = e.pmax;
			var edef3;
			if(e12 == null) {
				edef3 = null;
			} else {
				if(pmin5 == null) {
					pmin5 = this.tokenMin;
				}
				if(pmax5 == null) {
					pmax5 = this.tokenMax;
				}
				edef3 = { e : e12, pmin : pmin5, pmax : pmax5, origin : this.origin, line : this.line};
			}
			edef = hscript_ExprDef.ECall(edef3,[e]);
		}
		var pmin6 = e.pmin;
		var pmax6 = e.pmax;
		if(edef == null) {
			return null;
		} else {
			if(pmin6 == null) {
				pmin6 = this.tokenMin;
			}
			if(pmax6 == null) {
				pmax6 = this.tokenMax;
			}
			return { e : edef, pmin : pmin6, pmax : pmax6, origin : this.origin, line : this.line};
		}
	}
	,makeUnop: function(op,e) {
		var _g = e.e;
		switch(_g[1]) {
		case 6:
			var e2 = _g[4];
			var e1 = _g[3];
			var bop = _g[2];
			var e3 = hscript_ExprDef.EBinop(bop,this.makeUnop(op,e1),e2);
			var pmin = e1.pmin;
			var pmax = e2.pmax;
			if(e3 == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e3, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case 22:
			var e31 = _g[4];
			var e21 = _g[3];
			var e11 = _g[2];
			var e4 = hscript_ExprDef.ETernary(this.makeUnop(op,e11),e21,e31);
			var pmin1 = e11.pmin;
			var pmax1 = e31.pmax;
			if(e4 == null) {
				return null;
			} else {
				if(pmin1 == null) {
					pmin1 = this.tokenMin;
				}
				if(pmax1 == null) {
					pmax1 = this.tokenMax;
				}
				return { e : e4, pmin : pmin1, pmax : pmax1, origin : this.origin, line : this.line};
			}
			break;
		default:
			var e5 = hscript_ExprDef.EUnop(op,true,e);
			var pmin2 = e.pmin;
			var pmax2 = e.pmax;
			if(e5 == null) {
				return null;
			} else {
				if(pmin2 == null) {
					pmin2 = this.tokenMin;
				}
				if(pmax2 == null) {
					pmax2 = this.tokenMax;
				}
				return { e : e5, pmin : pmin2, pmax : pmax2, origin : this.origin, line : this.line};
			}
		}
	}
	,makeBinop: function(op,e1,e) {
		var _g = e.e;
		switch(_g[1]) {
		case 6:
			var e3 = _g[4];
			var e2 = _g[3];
			var op2 = _g[2];
			if(this.opPriority.get(op) <= this.opPriority.get(op2) && !this.opRightAssoc.exists(op)) {
				var e4 = hscript_ExprDef.EBinop(op2,this.makeBinop(op,e1,e2),e3);
				var pmin = e1.pmin;
				var pmax = e3.pmax;
				if(e4 == null) {
					return null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					return { e : e4, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
			} else {
				var e5 = hscript_ExprDef.EBinop(op,e1,e);
				var pmin1 = e1.pmin;
				var pmax1 = e.pmax;
				if(e5 == null) {
					return null;
				} else {
					if(pmin1 == null) {
						pmin1 = this.tokenMin;
					}
					if(pmax1 == null) {
						pmax1 = this.tokenMax;
					}
					return { e : e5, pmin : pmin1, pmax : pmax1, origin : this.origin, line : this.line};
				}
			}
			break;
		case 22:
			var e41 = _g[4];
			var e31 = _g[3];
			var e21 = _g[2];
			if(this.opRightAssoc.exists(op)) {
				var e6 = hscript_ExprDef.EBinop(op,e1,e);
				var pmin2 = e1.pmin;
				var pmax2 = e.pmax;
				if(e6 == null) {
					return null;
				} else {
					if(pmin2 == null) {
						pmin2 = this.tokenMin;
					}
					if(pmax2 == null) {
						pmax2 = this.tokenMax;
					}
					return { e : e6, pmin : pmin2, pmax : pmax2, origin : this.origin, line : this.line};
				}
			} else {
				var e7 = hscript_ExprDef.ETernary(this.makeBinop(op,e1,e21),e31,e41);
				var pmin3 = e1.pmin;
				var pmax3 = e.pmax;
				if(e7 == null) {
					return null;
				} else {
					if(pmin3 == null) {
						pmin3 = this.tokenMin;
					}
					if(pmax3 == null) {
						pmax3 = this.tokenMax;
					}
					return { e : e7, pmin : pmin3, pmax : pmax3, origin : this.origin, line : this.line};
				}
			}
			break;
		default:
			var e8 = hscript_ExprDef.EBinop(op,e1,e);
			var pmin4 = e1.pmin;
			var pmax4 = e.pmax;
			if(e8 == null) {
				return null;
			} else {
				if(pmin4 == null) {
					pmin4 = this.tokenMin;
				}
				if(pmax4 == null) {
					pmax4 = this.tokenMax;
				}
				return { e : e8, pmin : pmin4, pmax : pmax4, origin : this.origin, line : this.line};
			}
		}
	}
	,parseStructure: function(id) {
		var p1 = this.tokenMin;
		switch(id) {
		case "break":
			var e = hscript_ExprDef.EBreak;
			var pmin = null;
			var pmax = null;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case "continue":
			var e1 = hscript_ExprDef.EContinue;
			var pmin1 = null;
			var pmax1 = null;
			if(e1 == null) {
				return null;
			} else {
				if(pmin1 == null) {
					pmin1 = this.tokenMin;
				}
				if(pmax1 == null) {
					pmax1 = this.tokenMax;
				}
				return { e : e1, pmin : pmin1, pmax : pmax1, origin : this.origin, line : this.line};
			}
			break;
		case "do":
			var e2 = this.parseExpr();
			var tk = this.token();
			if(tk[1] == 2) {
				if(tk[2] != "while") {
					this.unexpected(tk);
				}
			} else {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			var e3 = hscript_ExprDef.EDoWhile(econd,e2);
			var pmin2 = p1;
			var pmax2 = econd.pmax;
			if(e3 == null) {
				return null;
			} else {
				if(pmin2 == null) {
					pmin2 = this.tokenMin;
				}
				if(pmax2 == null) {
					pmax2 = this.tokenMax;
				}
				return { e : e3, pmin : pmin2, pmax : pmax2, origin : this.origin, line : this.line};
			}
			break;
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t1 = this.token();
			if(!Type.enumEq(t1,hscript_Token.TId("in"))) {
				this.unexpected(t1);
			}
			var eiter = this.parseExpr();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			var e4 = this.parseExpr();
			var e5 = hscript_ExprDef.EFor(vname,eiter,e4);
			var pmin3 = p1;
			var pmax3 = e4.pmax;
			if(e5 == null) {
				return null;
			} else {
				if(pmin3 == null) {
					pmin3 = this.tokenMin;
				}
				if(pmax3 == null) {
					pmax3 = this.tokenMax;
				}
				return { e : e5, pmin : pmin3, pmax : pmax3, origin : this.origin, line : this.line};
			}
			break;
		case "function":
			var tk1 = this.token();
			var name = null;
			if(tk1[1] == 2) {
				var id1 = tk1[2];
				name = id1;
			} else {
				this.tokens.push({ t : tk1, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			var inf = this.parseFunctionDecl();
			var e6 = hscript_ExprDef.EFunction(inf.args,inf.body,name,inf.ret);
			var pmin4 = p1;
			var pmax4 = inf.body.pmax;
			if(e6 == null) {
				return null;
			} else {
				if(pmin4 == null) {
					pmin4 = this.tokenMin;
				}
				if(pmax4 == null) {
					pmax4 = this.tokenMax;
				}
				return { e : e6, pmin : pmin4, pmax : pmax4, origin : this.origin, line : this.line};
			}
			break;
		case "if":
			var t3 = this.token();
			if(t3 != hscript_Token.TPOpen) {
				this.unexpected(t3);
			}
			var cond = this.parseExpr();
			var t4 = this.token();
			if(t4 != hscript_Token.TPClose) {
				this.unexpected(t4);
			}
			var e11 = this.parseExpr();
			var e21 = null;
			var semic = false;
			var tk2 = this.token();
			if(tk2 == hscript_Token.TSemicolon) {
				semic = true;
				tk2 = this.token();
			}
			if(Type.enumEq(tk2,hscript_Token.TId("else"))) {
				e21 = this.parseExpr();
			} else {
				this.tokens.push({ t : tk2, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				if(semic) {
					this.tokens.push({ t : hscript_Token.TSemicolon, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
				}
			}
			var e7 = hscript_ExprDef.EIf(cond,e11,e21);
			var pmin5 = p1;
			var pmax5 = e21 == null ? this.tokenMax : e21.pmax;
			if(e7 == null) {
				return null;
			} else {
				if(pmin5 == null) {
					pmin5 = this.tokenMin;
				}
				if(pmax5 == null) {
					pmax5 = this.tokenMax;
				}
				return { e : e7, pmin : pmin5, pmax : pmax5, origin : this.origin, line : this.line};
			}
			break;
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			var a = [];
			a.push(this.getIdent());
			var next = true;
			while(next) {
				var tk3 = this.token();
				switch(tk3[1]) {
				case 4:
					next = false;
					break;
				case 8:
					a.push(this.getIdent());
					break;
				default:
					this.unexpected(tk3);
				}
			}
			var args = this.parseExprList(hscript_Token.TPClose);
			var e8 = hscript_ExprDef.ENew(a.join("."),args);
			var pmin6 = p1;
			var pmax6 = null;
			if(e8 == null) {
				return null;
			} else {
				if(pmin6 == null) {
					pmin6 = this.tokenMin;
				}
				if(pmax6 == null) {
					pmax6 = this.tokenMax;
				}
				return { e : e8, pmin : pmin6, pmax : pmax6, origin : this.origin, line : this.line};
			}
			break;
		case "return":
			var tk4 = this.token();
			this.tokens.push({ t : tk4, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			var e9 = tk4 == hscript_Token.TSemicolon ? null : this.parseExpr();
			var e10 = hscript_ExprDef.EReturn(e9);
			var pmin7 = p1;
			var pmax7 = e9 == null ? this.tokenMax : e9.pmax;
			if(e10 == null) {
				return null;
			} else {
				if(pmin7 == null) {
					pmin7 = this.tokenMin;
				}
				if(pmax7 == null) {
					pmax7 = this.tokenMax;
				}
				return { e : e10, pmin : pmin7, pmax : pmax7, origin : this.origin, line : this.line};
			}
			break;
		case "switch":
			var e12 = this.parseExpr();
			var def = null;
			var cases = [];
			var t5 = this.token();
			if(t5 != hscript_Token.TBrOpen) {
				this.unexpected(t5);
			}
			try {
				while(true) {
					var tk5 = this.token();
					switch(tk5[1]) {
					case 2:
						switch(tk5[2]) {
						case "case":
							var c = { values : [], expr : null};
							cases.push(c);
							try {
								while(true) {
									var e13 = this.parseExpr();
									c.values.push(e13);
									tk5 = this.token();
									switch(tk5[1]) {
									case 9:
										break;
									case 14:
										throw "__break__";
										break;
									default:
										this.unexpected(tk5);
									}
								}
							} catch( e ) { if( e != "__break__" ) throw e; }
							var exprs = [];
							try {
								while(true) {
									tk5 = this.token();
									this.tokens.push({ t : tk5, min : this.tokenMin, max : this.tokenMax});
									this.tokenMin = this.oldTokenMin;
									this.tokenMax = this.oldTokenMax;
									switch(tk5[1]) {
									case 2:
										switch(tk5[2]) {
										case "case":case "default":
											throw "__break__";
											break;
										default:
											this.parseFullExpr(exprs);
										}
										break;
									case 7:
										throw "__break__";
										break;
									default:
										this.parseFullExpr(exprs);
									}
								}
							} catch( e ) { if( e != "__break__" ) throw e; }
							var tmp;
							if(exprs.length == 1) {
								tmp = exprs[0];
							} else if(exprs.length == 0) {
								var e14 = hscript_ExprDef.EBlock([]);
								var pmin8 = this.tokenMin;
								var pmax8 = this.tokenMin;
								if(e14 == null) {
									tmp = null;
								} else {
									if(pmin8 == null) {
										pmin8 = this.tokenMin;
									}
									if(pmax8 == null) {
										pmax8 = this.tokenMax;
									}
									tmp = { e : e14, pmin : pmin8, pmax : pmax8, origin : this.origin, line : this.line};
								}
							} else {
								var e15 = hscript_ExprDef.EBlock(exprs);
								var pmin9 = exprs[0].pmin;
								var pmax9 = exprs[exprs.length - 1].pmax;
								if(e15 == null) {
									tmp = null;
								} else {
									if(pmin9 == null) {
										pmin9 = this.tokenMin;
									}
									if(pmax9 == null) {
										pmax9 = this.tokenMax;
									}
									tmp = { e : e15, pmin : pmin9, pmax : pmax9, origin : this.origin, line : this.line};
								}
							}
							c.expr = tmp;
							break;
						case "default":
							if(def != null) {
								this.unexpected(tk5);
							}
							var t6 = this.token();
							if(t6 != hscript_Token.TDoubleDot) {
								this.unexpected(t6);
							}
							var exprs1 = [];
							try {
								while(true) {
									tk5 = this.token();
									this.tokens.push({ t : tk5, min : this.tokenMin, max : this.tokenMax});
									this.tokenMin = this.oldTokenMin;
									this.tokenMax = this.oldTokenMax;
									switch(tk5[1]) {
									case 2:
										switch(tk5[2]) {
										case "case":case "default":
											throw "__break__";
											break;
										default:
											this.parseFullExpr(exprs1);
										}
										break;
									case 7:
										throw "__break__";
										break;
									default:
										this.parseFullExpr(exprs1);
									}
								}
							} catch( e ) { if( e != "__break__" ) throw e; }
							if(exprs1.length == 1) {
								def = exprs1[0];
							} else if(exprs1.length == 0) {
								var e16 = hscript_ExprDef.EBlock([]);
								var pmin10 = this.tokenMin;
								var pmax10 = this.tokenMin;
								if(e16 == null) {
									def = null;
								} else {
									if(pmin10 == null) {
										pmin10 = this.tokenMin;
									}
									if(pmax10 == null) {
										pmax10 = this.tokenMax;
									}
									def = { e : e16, pmin : pmin10, pmax : pmax10, origin : this.origin, line : this.line};
								}
							} else {
								var e17 = hscript_ExprDef.EBlock(exprs1);
								var pmin11 = exprs1[0].pmin;
								var pmax11 = exprs1[exprs1.length - 1].pmax;
								if(e17 == null) {
									def = null;
								} else {
									if(pmin11 == null) {
										pmin11 = this.tokenMin;
									}
									if(pmax11 == null) {
										pmax11 = this.tokenMax;
									}
									def = { e : e17, pmin : pmin11, pmax : pmax11, origin : this.origin, line : this.line};
								}
							}
							break;
						default:
							this.unexpected(tk5);
						}
						break;
					case 7:
						throw "__break__";
						break;
					default:
						this.unexpected(tk5);
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			var e18 = hscript_ExprDef.ESwitch(e12,cases,def);
			var pmin12 = p1;
			var pmax12 = this.tokenMax;
			if(e18 == null) {
				return null;
			} else {
				if(pmin12 == null) {
					pmin12 = this.tokenMin;
				}
				if(pmax12 == null) {
					pmax12 = this.tokenMax;
				}
				return { e : e18, pmin : pmin12, pmax : pmax12, origin : this.origin, line : this.line};
			}
			break;
		case "throw":
			var e19 = this.parseExpr();
			var e20 = hscript_ExprDef.EThrow(e19);
			var pmin13 = p1;
			var pmax13 = e19.pmax;
			if(e20 == null) {
				return null;
			} else {
				if(pmin13 == null) {
					pmin13 = this.tokenMin;
				}
				if(pmax13 == null) {
					pmax13 = this.tokenMax;
				}
				return { e : e20, pmin : pmin13, pmax : pmax13, origin : this.origin, line : this.line};
			}
			break;
		case "try":
			var e22 = this.parseExpr();
			var t7 = this.token();
			if(!Type.enumEq(t7,hscript_Token.TId("catch"))) {
				this.unexpected(t7);
			}
			var t8 = this.token();
			if(t8 != hscript_Token.TPOpen) {
				this.unexpected(t8);
			}
			var vname1 = this.getIdent();
			var t9 = this.token();
			if(t9 != hscript_Token.TDoubleDot) {
				this.unexpected(t9);
			}
			var t10 = null;
			if(this.allowTypes) {
				t10 = this.parseType();
			} else {
				var t11 = this.token();
				if(!Type.enumEq(t11,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t11);
				}
			}
			var t12 = this.token();
			if(t12 != hscript_Token.TPClose) {
				this.unexpected(t12);
			}
			var ec = this.parseExpr();
			var e23 = hscript_ExprDef.ETry(e22,vname1,t10,ec);
			var pmin14 = p1;
			var pmax14 = ec.pmax;
			if(e23 == null) {
				return null;
			} else {
				if(pmin14 == null) {
					pmin14 = this.tokenMin;
				}
				if(pmax14 == null) {
					pmax14 = this.tokenMax;
				}
				return { e : e23, pmin : pmin14, pmax : pmax14, origin : this.origin, line : this.line};
			}
			break;
		case "var":
			var ident = this.getIdent();
			var tk6 = this.token();
			var t13 = null;
			if(tk6 == hscript_Token.TDoubleDot && this.allowTypes) {
				t13 = this.parseType();
				tk6 = this.token();
			}
			var e24 = null;
			if(Type.enumEq(tk6,hscript_Token.TOp("="))) {
				e24 = this.parseExpr();
			} else {
				this.tokens.push({ t : tk6, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			var e25 = hscript_ExprDef.EVar(ident,t13,e24);
			var pmin15 = p1;
			var pmax15 = e24 == null ? this.tokenMax : e24.pmax;
			if(e25 == null) {
				return null;
			} else {
				if(pmin15 == null) {
					pmin15 = this.tokenMin;
				}
				if(pmax15 == null) {
					pmax15 = this.tokenMax;
				}
				return { e : e25, pmin : pmin15, pmax : pmax15, origin : this.origin, line : this.line};
			}
			break;
		case "while":
			var econd1 = this.parseExpr();
			var e26 = this.parseExpr();
			var e27 = hscript_ExprDef.EWhile(econd1,e26);
			var pmin16 = p1;
			var pmax16 = e26.pmax;
			if(e27 == null) {
				return null;
			} else {
				if(pmin16 == null) {
					pmin16 = this.tokenMin;
				}
				if(pmax16 == null) {
					pmax16 = this.tokenMax;
				}
				return { e : e27, pmin : pmin16, pmax : pmax16, origin : this.origin, line : this.line};
			}
			break;
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		switch(tk[1]) {
		case 3:
			var op = tk[2];
			if(this.unops.get(op)) {
				var tmp;
				if(!this.isBlock(e1)) {
					var _g = e1.e;
					if(_g[1] == 3) {
						tmp = true;
					} else {
						tmp = false;
					}
				} else {
					tmp = true;
				}
				if(tmp) {
					this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
					return e1;
				}
				var e = hscript_ExprDef.EUnop(op,false,e1);
				var pmin = e1.pmin;
				var pmax = null;
				var tmp1;
				if(e == null) {
					tmp1 = null;
				} else {
					if(pmin == null) {
						pmin = this.tokenMin;
					}
					if(pmax == null) {
						pmax = this.tokenMax;
					}
					tmp1 = { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
				}
				return this.parseExprNext(tmp1);
			}
			return this.makeBinop(op,e1,this.parseExpr());
		case 4:
			var e2 = hscript_ExprDef.ECall(e1,this.parseExprList(hscript_Token.TPClose));
			var pmin1 = e1.pmin;
			var pmax1 = null;
			var tmp2;
			if(e2 == null) {
				tmp2 = null;
			} else {
				if(pmin1 == null) {
					pmin1 = this.tokenMin;
				}
				if(pmax1 == null) {
					pmax1 = this.tokenMax;
				}
				tmp2 = { e : e2, pmin : pmin1, pmax : pmax1, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp2);
		case 8:
			var field = this.getIdent();
			var e3 = hscript_ExprDef.EField(e1,field);
			var pmin2 = e1.pmin;
			var pmax2 = null;
			var tmp3;
			if(e3 == null) {
				tmp3 = null;
			} else {
				if(pmin2 == null) {
					pmin2 = this.tokenMin;
				}
				if(pmax2 == null) {
					pmax2 = this.tokenMax;
				}
				tmp3 = { e : e3, pmin : pmin2, pmax : pmax2, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp3);
		case 11:
			var e21 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TBkClose) {
				this.unexpected(t);
			}
			var e4 = hscript_ExprDef.EArray(e1,e21);
			var pmin3 = e1.pmin;
			var pmax3 = null;
			var tmp4;
			if(e4 == null) {
				tmp4 = null;
			} else {
				if(pmin3 == null) {
					pmin3 = this.tokenMin;
				}
				if(pmax3 == null) {
					pmax3 = this.tokenMax;
				}
				tmp4 = { e : e4, pmin : pmin3, pmax : pmax3, origin : this.origin, line : this.line};
			}
			return this.parseExprNext(tmp4);
		case 13:
			var e22 = this.parseExpr();
			var t1 = this.token();
			if(t1 != hscript_Token.TDoubleDot) {
				this.unexpected(t1);
			}
			var e31 = this.parseExpr();
			var e5 = hscript_ExprDef.ETernary(e1,e22,e31);
			var pmin4 = e1.pmin;
			var pmax4 = e31.pmax;
			if(e5 == null) {
				return null;
			} else {
				if(pmin4 == null) {
					pmin4 = this.tokenMin;
				}
				if(pmax4 == null) {
					pmax4 = this.tokenMax;
				}
				return { e : e5, pmin : pmin4, pmax : pmax4, origin : this.origin, line : this.line};
			}
			break;
		default:
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			return e1;
		}
	}
	,parseFunctionDecl: function() {
		var t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		var args = [];
		var tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var done = false;
			while(!done) {
				var name = null;
				var opt = false;
				if(tk[1] == 13) {
					opt = true;
					tk = this.token();
				}
				if(tk[1] == 2) {
					var id = tk[2];
					name = id;
				} else {
					this.unexpected(tk);
				}
				var arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				switch(tk[1]) {
				case 5:
					done = true;
					break;
				case 9:
					tk = this.token();
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		var ret = null;
		if(this.allowTypes) {
			tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	,parsePath: function() {
		var path = [this.getIdent()];
		while(true) {
			var t = this.token();
			if(t != hscript_Token.TDot) {
				this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	,parseType: function() {
		var t = this.token();
		switch(t[1]) {
		case 2:
			var v = t[2];
			this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			var path = this.parsePath();
			var params = null;
			t = this.token();
			if(t[1] == 3) {
				var op = t[2];
				if(op == "<") {
					params = [];
					try {
						while(true) {
							params.push(this.parseType());
							t = this.token();
							switch(t[1]) {
							case 3:
								var op1 = t[2];
								if(op1 == ">") {
									throw "__break__";
								}
								if(HxOverrides.cca(op1,0) == 62) {
									this.tokens.add({ t : hscript_Token.TOp(HxOverrides.substr(op1,1,null)), min : this.tokenMax - op1.length - 1, max : this.tokenMax});
									throw "__break__";
								}
								break;
							case 9:
								continue;
								break;
							default:
							}
							this.unexpected(t);
						}
					} catch( e ) { if( e != "__break__" ) throw e; }
				} else {
					this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
				}
			} else {
				this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
			}
			return this.parseTypeNext(hscript_CType.CTPath(path,params));
		case 4:
			var t1 = this.parseType();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			return this.parseTypeNext(hscript_CType.CTParent(t1));
		case 6:
			var fields = [];
			var meta = null;
			try {
				while(true) {
					t = this.token();
					switch(t[1]) {
					case 2:
						if(t[2] == "var") {
							var name = this.getIdent();
							var t3 = this.token();
							if(t3 != hscript_Token.TDoubleDot) {
								this.unexpected(t3);
							}
							fields.push({ name : name, t : this.parseType(), meta : meta});
							meta = null;
							var t4 = this.token();
							if(t4 != hscript_Token.TSemicolon) {
								this.unexpected(t4);
							}
						} else {
							var name1 = t[2];
							var t5 = this.token();
							if(t5 != hscript_Token.TDoubleDot) {
								this.unexpected(t5);
							}
							fields.push({ name : name1, t : this.parseType(), meta : meta});
							t = this.token();
							switch(t[1]) {
							case 7:
								throw "__break__";
								break;
							case 9:
								break;
							default:
								this.unexpected(t);
							}
						}
						break;
					case 7:
						throw "__break__";
						break;
					case 15:
						var name2 = t[2];
						if(meta == null) {
							meta = [];
						}
						meta.push({ name : name2, params : this.parseMetaArgs()});
						break;
					default:
						this.unexpected(t);
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			return this.parseTypeNext(hscript_CType.CTAnon(fields));
		default:
			return this.unexpected(t);
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk[1] == 3) {
			var op = tk[2];
			if(op != "->") {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				return t;
			}
		} else {
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			return t;
		}
		var t2 = this.parseType();
		if(t2[1] == 1) {
			var args = t2[2];
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
		this.tokenMin = this.oldTokenMin;
		this.tokenMax = this.oldTokenMax;
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk[1] != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
			}
		}
		return args;
	}
	,parseModule: function(content,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = new haxe_io_StringInput(content);
		this.allowTypes = true;
		this.allowMetadata = true;
		var decls = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			decls.push(this.parseModuleDecl());
		}
		return decls;
	}
	,parseMetadata: function() {
		var meta = [];
		while(true) {
			var tk = this.token();
			if(tk[1] == 15) {
				var name = tk[2];
				meta.push({ name : name, params : this.parseMetaArgs()});
			} else {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				break;
			}
		}
		return meta;
	}
	,parseParams: function() {
		if(this.maybe(hscript_Token.TOp("<"))) {
			throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EInvalidOp("Unsupported class type parameters"),this.readPos,this.readPos,this.origin,this.line));
		}
		return { };
	}
	,parseModuleDecl: function() {
		var meta = this.parseMetadata();
		var ident = this.getIdent();
		var isPrivate = false;
		var isExtern = false;
		try {
			while(true) {
				switch(ident) {
				case "extern":
					isExtern = true;
					break;
				case "private":
					isPrivate = true;
					break;
				default:
					throw "__break__";
				}
				ident = this.getIdent();
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		switch(ident) {
		case "class":
			var name = this.getIdent();
			var params = this.parseParams();
			var extend = null;
			var implement = [];
			try {
				while(true) {
					var t = this.token();
					if(t[1] == 2) {
						switch(t[2]) {
						case "extends":
							extend = this.parseType();
							break;
						case "implements":
							implement.push(this.parseType());
							break;
						default:
							this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
							throw "__break__";
						}
					} else {
						this.tokens.push({ t : t, min : this.tokenMin, max : this.tokenMax});
						this.tokenMin = this.oldTokenMin;
						this.tokenMax = this.oldTokenMax;
						throw "__break__";
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			var fields = [];
			var t1 = this.token();
			if(t1 != hscript_Token.TBrOpen) {
				this.unexpected(t1);
			}
			while(!this.maybe(hscript_Token.TBrClose)) fields.push(this.parseField());
			return hscript_ModuleDecl.DClass({ name : name, meta : meta, params : params, extend : extend, implement : implement, fields : fields, isPrivate : isPrivate, isExtern : isExtern});
		case "import":
			var path = [this.getIdent()];
			var star = false;
			while(true) {
				var t2 = this.token();
				if(t2 != hscript_Token.TDot) {
					this.tokens.push({ t : t2, min : this.tokenMin, max : this.tokenMax});
					this.tokenMin = this.oldTokenMin;
					this.tokenMax = this.oldTokenMax;
					break;
				}
				t2 = this.token();
				switch(t2[1]) {
				case 2:
					var id = t2[2];
					path.push(id);
					break;
				case 3:
					if(t2[2] == "*") {
						star = true;
					} else {
						this.unexpected(t2);
					}
					break;
				default:
					this.unexpected(t2);
				}
			}
			var t3 = this.token();
			if(t3 != hscript_Token.TSemicolon) {
				this.unexpected(t3);
			}
			return hscript_ModuleDecl.DImport(path,star);
		case "package":
			var path1 = this.parsePath();
			var t4 = this.token();
			if(t4 != hscript_Token.TSemicolon) {
				this.unexpected(t4);
			}
			return hscript_ModuleDecl.DPackage(path1);
		case "typedef":
			var name1 = this.getIdent();
			var params1 = this.parseParams();
			var t5 = this.token();
			if(!Type.enumEq(t5,hscript_Token.TOp("="))) {
				this.unexpected(t5);
			}
			var t6 = this.parseType();
			return hscript_ModuleDecl.DTypedef({ name : name1, meta : meta, params : params1, isPrivate : isPrivate, t : t6});
		default:
			this.unexpected(hscript_Token.TId(ident));
		}
		return null;
	}
	,parseField: function() {
		var meta = this.parseMetadata();
		var access = [];
		while(true) {
			var id = this.getIdent();
			switch(id) {
			case "function":
				var name = this.getIdent();
				var inf = this.parseFunctionDecl();
				return { name : name, meta : meta, access : access, kind : hscript_FieldKind.KFunction({ args : inf.args, expr : inf.body, ret : inf.ret})};
			case "inline":
				access.push(hscript_FieldAccess.AInline);
				break;
			case "macro":
				access.push(hscript_FieldAccess.AMacro);
				break;
			case "override":
				access.push(hscript_FieldAccess.AOverride);
				break;
			case "private":
				access.push(hscript_FieldAccess.APrivate);
				break;
			case "public":
				access.push(hscript_FieldAccess.APublic);
				break;
			case "static":
				access.push(hscript_FieldAccess.AStatic);
				break;
			case "var":
				var name1 = this.getIdent();
				var get = null;
				var set = null;
				if(this.maybe(hscript_Token.TPOpen)) {
					get = this.getIdent();
					var t = this.token();
					if(t != hscript_Token.TComma) {
						this.unexpected(t);
					}
					set = this.getIdent();
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
				}
				var type = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
				var expr = this.maybe(hscript_Token.TOp("=")) ? this.parseExpr() : null;
				if(expr != null) {
					if(this.isBlock(expr)) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					}
				} else if(type != null && type[1] == 2) {
					this.maybe(hscript_Token.TSemicolon);
				} else {
					var t3 = this.token();
					if(t3 != hscript_Token.TSemicolon) {
						this.unexpected(t3);
					}
				}
				return { name : name1, meta : meta, access : access, kind : hscript_FieldKind.KVar({ get : get, set : set, type : type, expr : expr})};
			default:
				this.unexpected(hscript_Token.TId(id));
			}
		}
	}
	,incPos: function() {
		this.readPos++;
	}
	,readChar: function() {
		this.readPos++;
		try {
			return this.input.readByte();
		} catch( e ) {
			return 0;
		}
	}
	,readString: function(until) {
		var c = 0;
		var b = new haxe_io_BytesOutput();
		var esc = false;
		var old = this.line;
		var s = this.input;
		var p1 = this.readPos - 1;
		while(true) {
			try {
				this.readPos++;
				c = s.readByte();
			} catch( e ) {
				this.line = old;
				throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EUnterminatedString,p1,p1,this.origin,this.line));
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 34:case 39:case 92:
					b.writeByte(c);
					break;
				case 47:
					if(this.allowJSON) {
						b.writeByte(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 110:
					b.writeByte(10);
					break;
				case 114:
					b.writeByte(13);
					break;
				case 116:
					b.writeByte(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					var code = null;
					try {
						this.readPos++;
						this.readPos++;
						this.readPos++;
						this.readPos++;
						code = s.readString(4);
					} catch( e1 ) {
						this.line = old;
						throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EUnterminatedString,p1,p1,this.origin,this.line));
					}
					var k = 0;
					var _g = 0;
					while(_g < 4) {
						var i = _g++;
						k <<= 4;
						var $char = HxOverrides.cca(code,i);
						if($char == null) {
							this.invalidChar($char);
						} else {
							switch($char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								k += $char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								k += $char - 55;
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								k += $char - 87;
								break;
							default:
								this.invalidChar($char);
							}
						}
					}
					if(k <= 127) {
						b.writeByte(k);
					} else if(k <= 2047) {
						b.writeByte(192 | k >> 6);
						b.writeByte(128 | k & 63);
					} else {
						b.writeByte(224 | k >> 12);
						b.writeByte(128 | k >> 6 & 63);
						b.writeByte(128 | k & 63);
					}
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b.writeByte(c);
			}
		}
		return b.getBytes().toString();
	}
	,token: function() {
		var t = this.tokens.pop();
		if(t != null) {
			this.tokenMin = t.min;
			this.tokenMax = t.max;
			return t.t;
		}
		this.oldTokenMin = this.tokenMin;
		this.oldTokenMax = this.tokenMax;
		this.tokenMin = this["char"] < 0 ? this.readPos : this.readPos - 1;
		var t1 = this._token();
		this.tokenMax = this["char"] < 0 ? this.readPos - 1 : this.readPos - 2;
		return t1;
	}
	,_token: function() {
		var $char;
		if(this["char"] < 0) {
			$char = this.readChar();
		} else {
			$char = this["char"];
			this["char"] = -1;
		}
		while(true) {
			switch($char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				this.tokenMin++;
				break;
			case 9:case 13:case 32:
				this.tokenMin++;
				break;
			case 35:
				$char = this.readChar();
				if(this.idents[$char]) {
					var id = String.fromCharCode($char);
					while(true) {
						$char = this.readChar();
						if(!this.idents[$char]) {
							this["char"] = $char;
							return this.preprocess(id);
						}
						id += String.fromCharCode($char);
					}
				}
				this.invalidChar($char);
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString($char)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				$char = this.readChar();
				switch($char) {
				case 46:
					$char = this.readChar();
					if($char != 46) {
						this.invalidChar($char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = $char - 48;
					var exp = 1;
					while(true) {
						$char = this.readChar();
						exp *= 10;
						switch($char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + ($char - 48);
							break;
						default:
							this["char"] = $char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this["char"] = $char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = ($char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					$char = this.readChar();
					exp1 *= 10;
					switch($char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.readChar() == 46) {
								this.tokens.push({ t : hscript_Token.TOp("..."), min : this.tokenMin, max : this.tokenMax});
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar($char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + ($char - 48);
						break;
					case 69:case 101:
						var tk = this.token();
						var pow = null;
						switch(tk[1]) {
						case 1:
							if(tk[2][1] == 0) {
								var e = tk[2][2];
								pow = e;
							} else {
								this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
							}
							break;
						case 3:
							if(tk[2] == "-") {
								tk = this.token();
								if(tk[1] == 1) {
									if(tk[2][1] == 0) {
										var e1 = tk[2][2];
										pow = -e1;
									} else {
										this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
										this.tokenMin = this.oldTokenMin;
										this.tokenMax = this.oldTokenMax;
									}
								} else {
									this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
									this.tokenMin = this.oldTokenMin;
									this.tokenMax = this.oldTokenMax;
								}
							} else {
								this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
								this.tokenMin = this.oldTokenMin;
								this.tokenMax = this.oldTokenMax;
							}
							break;
						default:
							this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
							this.tokenMin = this.oldTokenMin;
							this.tokenMax = this.oldTokenMax;
						}
						if(pow == null) {
							this.invalidChar($char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar($char);
						}
						var n2 = 0;
						while(true) {
							$char = this.readChar();
							switch($char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + $char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + ($char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + ($char - 87);
								break;
							default:
								this["char"] = $char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this["char"] = $char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				$char = this.readChar();
				if($char == 61) {
					return hscript_Token.TOp("==");
				} else if($char == 62) {
					return hscript_Token.TOp("=>");
				}
				this["char"] = $char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				$char = this.readChar();
				if(this.idents[$char] || $char == 58) {
					var id1 = String.fromCharCode($char);
					while(true) {
						$char = this.readChar();
						if(!this.idents[$char]) {
							this["char"] = $char;
							return hscript_Token.TMeta(id1);
						}
						id1 += String.fromCharCode($char);
					}
				}
				this.invalidChar($char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[$char]) {
					var op = String.fromCharCode($char);
					var prev = -1;
					while(true) {
						$char = this.readChar();
						if(!this.ops[$char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,$char);
							}
							this["char"] = $char;
							return hscript_Token.TOp(op);
						}
						prev = $char;
						op += String.fromCharCode($char);
					}
				}
				if(this.idents[$char]) {
					var id2 = String.fromCharCode($char);
					while(true) {
						$char = this.readChar();
						if(!this.idents[$char]) {
							this["char"] = $char;
							return hscript_Token.TId(id2);
						}
						id2 += String.fromCharCode($char);
					}
				}
				this.invalidChar($char);
			}
			$char = this.readChar();
		}
	}
	,preprocValue: function(id) {
		var _this = this.preprocesorValues;
		if(__map_reserved[id] != null) {
			return _this.getReserved(id);
		} else {
			return _this.h[id];
		}
	}
	,parsePreproCond: function() {
		var tk = this.token();
		switch(tk[1]) {
		case 2:
			var id = tk[2];
			var e = hscript_ExprDef.EIdent(id);
			var pmin = this.tokenMin;
			var pmax = this.tokenMax;
			if(e == null) {
				return null;
			} else {
				if(pmin == null) {
					pmin = this.tokenMin;
				}
				if(pmax == null) {
					pmax = this.tokenMax;
				}
				return { e : e, pmin : pmin, pmax : pmax, origin : this.origin, line : this.line};
			}
			break;
		case 3:
			if(tk[2] == "!") {
				var e1 = hscript_ExprDef.EUnop("!",true,this.parsePreproCond());
				var pmin1 = this.tokenMin;
				var pmax1 = this.tokenMax;
				if(e1 == null) {
					return null;
				} else {
					if(pmin1 == null) {
						pmin1 = this.tokenMin;
					}
					if(pmax1 == null) {
						pmax1 = this.tokenMax;
					}
					return { e : e1, pmin : pmin1, pmax : pmax1, origin : this.origin, line : this.line};
				}
			} else {
				return this.unexpected(tk);
			}
			break;
		case 4:
			this.tokens.push({ t : hscript_Token.TPOpen, min : this.tokenMin, max : this.tokenMax});
			this.tokenMin = this.oldTokenMin;
			this.tokenMax = this.oldTokenMax;
			return this.parseExpr();
		default:
			return this.unexpected(tk);
		}
	}
	,evalPreproCond: function(e) {
		var _g = e.e;
		switch(_g[1]) {
		case 1:
			var id = _g[2];
			return this.preprocValue(id) != null;
		case 3:
			var e1 = _g[2];
			return this.evalPreproCond(e1);
		case 6:
			switch(_g[2]) {
			case "&&":
				var e2 = _g[4];
				var e11 = _g[3];
				if(this.evalPreproCond(e11)) {
					return this.evalPreproCond(e2);
				} else {
					return false;
				}
				break;
			case "||":
				var e21 = _g[4];
				var e12 = _g[3];
				if(!this.evalPreproCond(e12)) {
					return this.evalPreproCond(e21);
				} else {
					return true;
				}
				break;
			default:
				throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EInvalidPreprocessor("Can't eval " + e.e[0]),this.readPos,this.readPos,this.origin,this.line));
			}
			break;
		case 7:
			if(_g[2] == "!") {
				var e3 = _g[4];
				return !this.evalPreproCond(e3);
			} else {
				throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EInvalidPreprocessor("Can't eval " + e.e[0]),this.readPos,this.readPos,this.origin,this.line));
			}
			break;
		default:
			throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EInvalidPreprocessor("Can't eval " + e.e[0]),this.readPos,this.readPos,this.origin,this.line));
		}
	}
	,preprocess: function(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			var e = this.parsePreproCond();
			if(this.evalPreproCond(e)) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	,skipTokens: function() {
		var spos = this.preprocStack.length - 1;
		var obj = this.preprocStack[spos];
		var pos = this.readPos;
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EInvalidPreprocessor("Unclosed"),pos,pos,this.origin,this.line));
			}
			if(this.preprocStack[spos] != obj) {
				this.tokens.push({ t : tk, min : this.tokenMin, max : this.tokenMax});
				this.tokenMin = this.oldTokenMin;
				this.tokenMax = this.oldTokenMax;
				break;
			}
		}
	}
	,tokenComment: function(op,$char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			try {
				while($char != 13 && $char != 10) {
					this.readPos++;
					$char = s.readByte();
				}
				this["char"] = $char;
			} catch( e ) {
			}
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this["char"] = $char;
				return this.token();
			}
			try {
				while(true) {
					while($char != 42) {
						if($char == 10) {
							this.line++;
						}
						this.readPos++;
						$char = s.readByte();
					}
					this.readPos++;
					$char = s.readByte();
					if($char == 47) {
						break;
					}
				}
			} catch( e1 ) {
				this.line = old;
				throw new js__$Boot_HaxeError(new hscript_Error(hscript_ErrorDef.EUnterminatedComment,this.tokenMin,this.tokenMin,this.origin,this.line));
			}
			return this.token();
		}
		this["char"] = $char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c[1]) {
		case 0:
			var v = c[2];
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c[2];
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c[2];
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t[1]) {
		case 0:
			return "<eof>";
		case 1:
			var c = t[2];
			return this.constString(c);
		case 2:
			var s = t[2];
			return s;
		case 3:
			var s1 = t[2];
			return s1;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t[2];
			return "@" + id;
		case 16:
			var id1 = t[2];
			return "#" + id1;
		}
	}
	,__class__: hscript_Parser
};
var hscript_Printer = function() {
};
$hxClasses["hscript.Printer"] = hscript_Printer;
hscript_Printer.__name__ = true;
hscript_Printer.toString = function(e) {
	return new hscript_Printer().exprToString(e);
};
hscript_Printer.errorToString = function(e) {
	var message;
	var _g = e.e;
	switch(_g[1]) {
	case 0:
		var c = _g[2];
		message = "Invalid character: '" + String.fromCharCode(c) + "' (" + c + ")";
		break;
	case 1:
		var s = _g[2];
		message = "Unexpected token: \"" + s + "\"";
		break;
	case 2:
		message = "Unterminated string";
		break;
	case 3:
		message = "Unterminated comment";
		break;
	case 4:
		var str = _g[2];
		message = "Invalid preprocessor (" + str + ")";
		break;
	case 5:
		var v = _g[2];
		message = "Unknown variable: " + v;
		break;
	case 6:
		var v1 = _g[2];
		message = "Invalid iterator: " + v1;
		break;
	case 7:
		var op = _g[2];
		message = "Invalid operator: " + op;
		break;
	case 8:
		var f = _g[2];
		message = "Invalid access to field " + f;
		break;
	case 9:
		var msg = _g[2];
		message = msg;
		break;
	}
	return e.origin + ":" + e.line + ": " + message;
};
hscript_Printer.prototype = {
	exprToString: function(e) {
		this.buf = new StringBuf();
		this.tabs = "";
		this.expr(e);
		return this.buf.b;
	}
	,typeToString: function(t) {
		this.buf = new StringBuf();
		this.tabs = "";
		this.type(t);
		return this.buf.b;
	}
	,add: function(s) {
		this.buf.b += Std.string(s);
	}
	,type: function(t) {
		switch(t[1]) {
		case 0:
			var params = t[3];
			var path = t[2];
			var s = path.join(".");
			this.buf.b += Std.string(s);
			if(params != null) {
				this.buf.b += "<";
				var first = true;
				var _g = 0;
				while(_g < params.length) {
					var p = params[_g];
					++_g;
					if(first) {
						first = false;
					} else {
						this.buf.b += ", ";
					}
					this.type(p);
				}
				this.buf.b += ">";
			}
			break;
		case 1:
			var ret = t[3];
			var args = t[2];
			if(args.length == 0) {
				this.buf.b += "Void -> ";
			} else {
				var _g1 = 0;
				while(_g1 < args.length) {
					var a = args[_g1];
					++_g1;
					this.type(a);
					this.buf.b += " -> ";
				}
			}
			this.type(ret);
			break;
		case 2:
			var fields = t[2];
			this.buf.b += "{";
			var first1 = true;
			var _g2 = 0;
			while(_g2 < fields.length) {
				var f = fields[_g2];
				++_g2;
				if(first1) {
					first1 = false;
					this.buf.b += " ";
				} else {
					this.buf.b += ", ";
				}
				this.buf.b += Std.string(f.name + " : ");
				this.type(f.t);
			}
			this.buf.b += first1 ? "}" : " }";
			break;
		case 3:
			var t1 = t[2];
			this.buf.b += "(";
			this.type(t1);
			this.buf.b += ")";
			break;
		}
	}
	,addType: function(t) {
		if(t != null) {
			this.buf.b += " : ";
			this.type(t);
		}
	}
	,expr: function(e) {
		if(e == null) {
			this.buf.b += "??NULL??";
			return;
		}
		var _g = e.e;
		switch(_g[1]) {
		case 0:
			var c = _g[2];
			switch(c[1]) {
			case 0:
				var i = c[2];
				this.buf.b += i == null ? "null" : "" + i;
				break;
			case 1:
				var f = c[2];
				this.buf.b += f == null ? "null" : "" + f;
				break;
			case 2:
				var s = c[2];
				this.buf.b += "\"";
				var s1 = s.split("\"").join("\\\"").split("\n").join("\\n").split("\r").join("\\r").split("\t").join("\\t");
				this.buf.b += Std.string(s1);
				this.buf.b += "\"";
				break;
			}
			break;
		case 1:
			var v = _g[2];
			this.buf.b += v == null ? "null" : "" + v;
			break;
		case 2:
			var e1 = _g[4];
			var t = _g[3];
			var n = _g[2];
			this.buf.b += Std.string("var " + n);
			this.addType(t);
			if(e1 != null) {
				this.buf.b += " = ";
				this.expr(e1);
			}
			break;
		case 3:
			var e2 = _g[2];
			this.buf.b += "(";
			this.expr(e2);
			this.buf.b += ")";
			break;
		case 4:
			var el = _g[2];
			if(el.length == 0) {
				this.buf.b += "{}";
			} else {
				this.tabs += "\t";
				this.buf.b += "{\n";
				var _g1 = 0;
				while(_g1 < el.length) {
					var e3 = el[_g1];
					++_g1;
					this.buf.b += Std.string(this.tabs);
					this.expr(e3);
					this.buf.b += ";\n";
				}
				this.tabs = HxOverrides.substr(this.tabs,1,null);
				this.buf.b += "}";
			}
			break;
		case 5:
			var f1 = _g[3];
			var e4 = _g[2];
			this.expr(e4);
			this.buf.b += Std.string("." + f1);
			break;
		case 6:
			var e21 = _g[4];
			var e11 = _g[3];
			var op = _g[2];
			this.expr(e11);
			this.buf.b += Std.string(" " + op + " ");
			this.expr(e21);
			break;
		case 7:
			var e5 = _g[4];
			var pre = _g[3];
			var op1 = _g[2];
			if(pre) {
				this.buf.b += op1 == null ? "null" : "" + op1;
				this.expr(e5);
			} else {
				this.expr(e5);
				this.buf.b += op1 == null ? "null" : "" + op1;
			}
			break;
		case 8:
			var args = _g[3];
			var e6 = _g[2];
			if(e6 == null) {
				this.expr(e6);
			} else {
				var _g2 = e6.e;
				switch(_g2[1]) {
				case 0:case 1:case 5:
					this.expr(e6);
					break;
				default:
					this.buf.b += "(";
					this.expr(e6);
					this.buf.b += ")";
				}
			}
			this.buf.b += "(";
			var first = true;
			var _g3 = 0;
			while(_g3 < args.length) {
				var a = args[_g3];
				++_g3;
				if(first) {
					first = false;
				} else {
					this.buf.b += ", ";
				}
				this.expr(a);
			}
			this.buf.b += ")";
			break;
		case 9:
			var e22 = _g[4];
			var e12 = _g[3];
			var cond = _g[2];
			this.buf.b += "if( ";
			this.expr(cond);
			this.buf.b += " ) ";
			this.expr(e12);
			if(e22 != null) {
				this.buf.b += " else ";
				this.expr(e22);
			}
			break;
		case 10:
			var e7 = _g[3];
			var cond1 = _g[2];
			this.buf.b += "while( ";
			this.expr(cond1);
			this.buf.b += " ) ";
			this.expr(e7);
			break;
		case 11:
			var e8 = _g[4];
			var it = _g[3];
			var v1 = _g[2];
			this.buf.b += Std.string("for( " + v1 + " in ");
			this.expr(it);
			this.buf.b += " ) ";
			this.expr(e8);
			break;
		case 12:
			this.buf.b += "break";
			break;
		case 13:
			this.buf.b += "continue";
			break;
		case 14:
			var ret = _g[5];
			var name = _g[4];
			var e9 = _g[3];
			var params = _g[2];
			this.buf.b += "function";
			if(name != null) {
				this.buf.b += Std.string(" " + name);
			}
			this.buf.b += "(";
			var first1 = true;
			var _g4 = 0;
			while(_g4 < params.length) {
				var a1 = params[_g4];
				++_g4;
				if(first1) {
					first1 = false;
				} else {
					this.buf.b += ", ";
				}
				if(a1.opt) {
					this.buf.b += "?";
				}
				this.buf.b += Std.string(a1.name);
				this.addType(a1.t);
			}
			this.buf.b += ")";
			this.addType(ret);
			this.buf.b += " ";
			this.expr(e9);
			break;
		case 15:
			var e10 = _g[2];
			this.buf.b += "return";
			if(e10 != null) {
				this.buf.b += " ";
				this.expr(e10);
			}
			break;
		case 16:
			var index = _g[3];
			var e13 = _g[2];
			this.expr(e13);
			this.buf.b += "[";
			this.expr(index);
			this.buf.b += "]";
			break;
		case 17:
			var el1 = _g[2];
			this.buf.b += "[";
			var first2 = true;
			var _g5 = 0;
			while(_g5 < el1.length) {
				var e14 = el1[_g5];
				++_g5;
				if(first2) {
					first2 = false;
				} else {
					this.buf.b += ", ";
				}
				this.expr(e14);
			}
			this.buf.b += "]";
			break;
		case 18:
			var args1 = _g[3];
			var cl = _g[2];
			this.buf.b += Std.string("new " + cl + "(");
			var first3 = true;
			var _g6 = 0;
			while(_g6 < args1.length) {
				var e15 = args1[_g6];
				++_g6;
				if(first3) {
					first3 = false;
				} else {
					this.buf.b += ", ";
				}
				this.expr(e15);
			}
			this.buf.b += ")";
			break;
		case 19:
			var e16 = _g[2];
			this.buf.b += "throw ";
			this.expr(e16);
			break;
		case 20:
			var ecatch = _g[5];
			var t1 = _g[4];
			var v2 = _g[3];
			var e17 = _g[2];
			this.buf.b += "try ";
			this.expr(e17);
			this.buf.b += Std.string(" catch( " + v2);
			this.addType(t1);
			this.buf.b += ") ";
			this.expr(ecatch);
			break;
		case 21:
			var fl = _g[2];
			if(fl.length == 0) {
				this.buf.b += "{}";
			} else {
				this.tabs += "\t";
				this.buf.b += "{\n";
				var _g7 = 0;
				while(_g7 < fl.length) {
					var f2 = fl[_g7];
					++_g7;
					this.buf.b += Std.string(this.tabs);
					this.buf.b += Std.string(f2.name + " : ");
					this.expr(f2.e);
					this.buf.b += ",\n";
				}
				this.tabs = HxOverrides.substr(this.tabs,1,null);
				this.buf.b += "}";
			}
			break;
		case 22:
			var e23 = _g[4];
			var e18 = _g[3];
			var c1 = _g[2];
			this.expr(c1);
			this.buf.b += " ? ";
			this.expr(e18);
			this.buf.b += " : ";
			this.expr(e23);
			break;
		case 23:
			var def = _g[4];
			var cases = _g[3];
			var e19 = _g[2];
			this.buf.b += "switch( ";
			this.expr(e19);
			this.buf.b += ") {";
			var _g8 = 0;
			while(_g8 < cases.length) {
				var c2 = cases[_g8];
				++_g8;
				this.buf.b += "case ";
				var first4 = true;
				var _g11 = 0;
				var _g21 = c2.values;
				while(_g11 < _g21.length) {
					var v3 = _g21[_g11];
					++_g11;
					if(first4) {
						first4 = false;
					} else {
						this.buf.b += ", ";
					}
					this.expr(v3);
				}
				this.buf.b += ": ";
				this.expr(c2.expr);
				this.buf.b += ";\n";
			}
			if(def != null) {
				this.buf.b += "default: ";
				this.expr(def);
				this.buf.b += ";\n";
			}
			this.buf.b += "}";
			break;
		case 24:
			var e20 = _g[3];
			var cond2 = _g[2];
			this.buf.b += "do ";
			this.expr(e20);
			this.buf.b += " while ( ";
			this.expr(cond2);
			this.buf.b += " )";
			break;
		case 25:
			var e24 = _g[4];
			var args2 = _g[3];
			var name1 = _g[2];
			this.buf.b += "@";
			this.buf.b += name1 == null ? "null" : "" + name1;
			if(args2 != null && args2.length > 0) {
				this.buf.b += "(";
				var first5 = true;
				var _g9 = 0;
				while(_g9 < args2.length) {
					var a2 = args2[_g9];
					++_g9;
					if(first5) {
						first5 = false;
					} else {
						this.buf.b += ", ";
					}
					this.expr(e24);
				}
				this.buf.b += ")";
			}
			this.buf.b += " ";
			this.expr(e24);
			break;
		}
	}
	,__class__: hscript_Printer
};
var hxs_Interp = function() {
	this.oldLocals = [];
	hscript_Interp.call(this);
};
$hxClasses["hxs.Interp"] = hxs_Interp;
hxs_Interp.__name__ = true;
hxs_Interp.__super__ = hscript_Interp;
hxs_Interp.prototype = $extend(hscript_Interp.prototype,{
	beginBlock: function() {
		this.oldLocals.push(this.declared.length);
	}
	,endBlock: function() {
		this.restore(this.oldLocals.pop());
	}
	,resolve: function(id) {
		if(id == "this") {
			return this.variables;
		}
		var _this = this.locals;
		var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(l != null) {
			return l.r;
		}
		var _this1 = this.variables;
		var v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
		if(v == null) {
			return null;
		}
		return v;
	}
	,get: function(o,f) {
		if(o == this.variables) {
			var _this = this.variables;
			if(__map_reserved[f] != null) {
				return _this.getReserved(f);
			} else {
				return _this.h[f];
			}
		}
		return hscript_Interp.prototype.get.call(this,o,f);
	}
	,set: function(o,f,v) {
		if(o == this.variables) {
			var _this = this.variables;
			var value = v;
			if(__map_reserved[f] != null) {
				_this.setReserved(f,value);
			} else {
				_this.h[f] = value;
			}
		}
		return hscript_Interp.prototype.set.call(this,o,f,v);
	}
	,__class__: hxs_Interp
});
var hxs_Scriptable = function() { };
$hxClasses["hxs.Scriptable"] = hxs_Scriptable;
hxs_Scriptable.__name__ = true;
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = true;
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_node_Fs = require("fs");
var js_node_buffer_Buffer = require("buffer").Buffer;
var test_Main = function() { };
$hxClasses["test.Main"] = test_Main;
test_Main.__name__ = true;
test_Main.main = function() {
	haxe_Log.trace("PARSE",{ fileName : "Main.hx", lineNumber : 9, className : "test.Main", methodName : "main"});
	var nativeObj = new test_SomeClass("Jérémy");
	nativeObj.hello();
	var content = js_node_Fs.readFileSync("scripting/SomeClass.hx",{ encoding : "utf8"});
	var parser = new hscript_Parser();
	parser.allowJSON = true;
	parser.allowMetadata = true;
	parser.allowTypes = true;
	var program = parser.parseString(content);
	var interp = new hxs_Interp();
	haxe_Log.trace("EXEC",{ fileName : "Main.hx", lineNumber : 22, className : "test.Main", methodName : "main"});
	interp.execute(program);
	var _this = interp.variables;
	var _new = __map_reserved["new"] != null ? _this.getReserved("new") : _this.h["new"];
	var _this1 = interp.variables;
	var hello = __map_reserved["hello"] != null ? _this1.getReserved("hello") : _this1.h["hello"];
	_new("Jean-Paul");
	hello();
	var _this2 = interp.variables;
	if(__map_reserved["name"] != null) {
		_this2.setReserved("name","Pierrot");
	} else {
		_this2.h["name"] = "Pierrot";
	}
	hello();
};
var test_SomeClass = function(name) {
	this.name = null;
	this.name = name;
};
$hxClasses["test.SomeClass"] = test_SomeClass;
test_SomeClass.__name__ = true;
test_SomeClass.__interfaces__ = [hxs_Scriptable];
test_SomeClass.prototype = {
	hello: function() {
		haxe_Log.trace("hello, " + this.name,{ fileName : "SomeClass.hx", lineNumber : 15, className : "test.SomeClass", methodName : "hello"});
	}
	,__class__: test_SomeClass
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = true;
$hxClasses["Array"] = Array;
Array.__name__ = true;
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
test_Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
