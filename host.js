// Generated by Haxe 3.4.7
if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			var tmp = this.r;
			var tmp1 = len < 0 ? s : HxOverrides.substr(s,0,pos + len);
			this.r.m = tmp.exec(tmp1);
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) {
			i = 0;
		}
	}
	while(i < len) {
		if(a[i] === obj) {
			return i;
		}
		++i;
	}
	return -1;
};
HxOverrides.lastIndexOf = function(a,obj,i) {
	var len = a.length;
	if(i >= len) {
		i = len - 1;
	} else if(i < 0) {
		i += len;
	}
	while(i >= 0) {
		if(a[i] === obj) {
			return i;
		}
		--i;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = ["IntIterator"];
IntIterator.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var _$Map_Map_$Impl_$ = {};
$hxClasses["_Map.Map_Impl_"] = _$Map_Map_$Impl_$;
_$Map_Map_$Impl_$.__name__ = ["_Map","Map_Impl_"];
_$Map_Map_$Impl_$.set = function(this1,key,value) {
	this1.set(key,value);
};
_$Map_Map_$Impl_$.get = function(this1,key) {
	return this1.get(key);
};
_$Map_Map_$Impl_$.exists = function(this1,key) {
	return this1.exists(key);
};
_$Map_Map_$Impl_$.remove = function(this1,key) {
	return this1.remove(key);
};
_$Map_Map_$Impl_$.keys = function(this1) {
	return this1.keys();
};
_$Map_Map_$Impl_$.iterator = function(this1) {
	return this1.iterator();
};
_$Map_Map_$Impl_$.toString = function(this1) {
	return this1.toString();
};
_$Map_Map_$Impl_$.arrayWrite = function(this1,k,v) {
	this1.set(k,v);
	return v;
};
_$Map_Map_$Impl_$.toStringMap = function(t) {
	return new haxe_ds_StringMap();
};
_$Map_Map_$Impl_$.toIntMap = function(t) {
	return new haxe_ds_IntMap();
};
_$Map_Map_$Impl_$.toEnumValueMapMap = function(t) {
	return new haxe_ds_EnumValueMap();
};
_$Map_Map_$Impl_$.toObjectMap = function(t) {
	return new haxe_ds_ObjectMap();
};
_$Map_Map_$Impl_$.fromStringMap = function(map) {
	return map;
};
_$Map_Map_$Impl_$.fromIntMap = function(map) {
	return map;
};
_$Map_Map_$Impl_$.fromObjectMap = function(map) {
	return map;
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
};
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.setField = function(o,field,value) {
	o[field] = value;
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std["is"] = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.instance = function(value,c) {
	if((value instanceof c)) {
		return value;
	} else {
		return null;
	}
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,get_length: function() {
		return this.b.length;
	}
	,add: function(x) {
		this.b += Std.string(x);
	}
	,addChar: function(c) {
		this.b += String.fromCharCode(c);
	}
	,addSub: function(s,pos,len) {
		this.b += len == null ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len);
	}
	,toString: function() {
		return this.b;
	}
	,__class__: StringBuf
	,__properties__: {get_length:"get_length"}
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
};
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
StringTools.htmlUnescape = function(s) {
	return s.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join("\"").split("&#039;").join("'").split("&amp;").join("&");
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
StringTools.isEof = function(c) {
	return c != c;
};
StringTools.quoteUnixArg = function(argument) {
	if(argument == "") {
		return "''";
	}
	if(!new EReg("[^a-zA-Z0-9_@%+=:,./-]","").match(argument)) {
		return argument;
	}
	return "'" + StringTools.replace(argument,"'","'\"'\"'") + "'";
};
StringTools.quoteWinArg = function(argument,escapeMetaCharacters) {
	if(!new EReg("^[^ \t\\\\\"]+$","").match(argument)) {
		var result_b = "";
		var needquote = argument.indexOf(" ") != -1 || argument.indexOf("\t") != -1 || argument == "";
		if(needquote) {
			result_b += "\"";
		}
		var bs_buf = new StringBuf();
		var _g1 = 0;
		var _g = argument.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g2 = HxOverrides.cca(argument,i);
			if(_g2 == null) {
				var c = _g2;
				if(bs_buf.b.length > 0) {
					result_b += Std.string(bs_buf.b);
					bs_buf = new StringBuf();
				}
				result_b += String.fromCharCode(c);
			} else {
				switch(_g2) {
				case 34:
					var bs = bs_buf.b;
					result_b += bs == null ? "null" : "" + bs;
					result_b += bs == null ? "null" : "" + bs;
					bs_buf = new StringBuf();
					result_b += "\\\"";
					break;
				case 92:
					bs_buf.b += "\\";
					break;
				default:
					var c1 = _g2;
					if(bs_buf.b.length > 0) {
						result_b += Std.string(bs_buf.b);
						bs_buf = new StringBuf();
					}
					result_b += String.fromCharCode(c1);
				}
			}
		}
		result_b += Std.string(bs_buf.b);
		if(needquote) {
			result_b += Std.string(bs_buf.b);
			result_b += "\"";
		}
		argument = result_b;
	}
	if(escapeMetaCharacters) {
		var result_b1 = "";
		var _g11 = 0;
		var _g3 = argument.length;
		while(_g11 < _g3) {
			var i1 = _g11++;
			var c2 = HxOverrides.cca(argument,i1);
			if(StringTools.winMetaCharacters.indexOf(c2) >= 0) {
				result_b1 += "^";
			}
			result_b1 += String.fromCharCode(c2);
		}
		return result_b1;
	} else {
		return argument;
	}
};
var Sys = function() { };
$hxClasses["Sys"] = Sys;
Sys.__name__ = ["Sys"];
Sys.print = function(v) {
	process.stdout.write(v);
};
Sys.println = function(v) {
	process.stdout.write(v);
	process.stdout.write("\n");
};
Sys.args = function() {
	return process.argv.slice(2);
};
Sys.getEnv = function(s) {
	return process.env[s];
};
Sys.putEnv = function(s,v) {
	process.env[s] = v;
};
Sys.environment = function() {
	var m = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = Reflect.fields(process.env);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		var v = process.env[key];
		if(__map_reserved[key] != null) {
			m.setReserved(key,v);
		} else {
			m.h[key] = v;
		}
	}
	return m;
};
Sys.setTimeLocale = function(loc) {
	return false;
};
Sys.getCwd = function() {
	return process.cwd();
};
Sys.setCwd = function(s) {
	process.chdir(s);
};
Sys.systemName = function() {
	var _g = process.platform;
	switch(_g) {
	case "darwin":
		return "Mac";
	case "freebsd":
		return "BSD";
	case "linux":
		return "Linux";
	case "win32":
		return "Windows";
	default:
		var other = _g;
		return other;
	}
};
Sys.command = function(cmd,args) {
	if(args == null) {
		return js_node_ChildProcess.spawnSync(cmd,{ stdio : "inherit"}).status;
	} else {
		return js_node_ChildProcess.spawnSync(cmd,args,{ stdio : "inherit"}).status;
	}
};
Sys.exit = function(code) {
	process.exit(code);
};
Sys.time = function() {
	return Date.now() / 1000;
};
Sys.cpuTime = function() {
	return process.uptime();
};
Sys.executablePath = function() {
	return process.argv[0];
};
Sys.programPath = function() {
	return __filename;
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClass = function(o) {
	if(o == null) {
		return null;
	} else {
		return js_Boot.getClass(o);
	}
};
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.getClassFields = function(c) {
	var a = Reflect.fields(c);
	HxOverrides.remove(a,"__name__");
	HxOverrides.remove(a,"__interfaces__");
	HxOverrides.remove(a,"__properties__");
	HxOverrides.remove(a,"__super__");
	HxOverrides.remove(a,"__meta__");
	HxOverrides.remove(a,"prototype");
	return a;
};
Type.getEnumConstructs = function(e) {
	return e.__constructs__.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		if(a[0] != b[0]) {
			return false;
		}
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) {
				return false;
			}
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) {
			return false;
		}
	} catch( e1 ) {
		return false;
	}
	return true;
};
Type.enumConstructor = function(e) {
	return e[0];
};
Type.enumParameters = function(e) {
	return e.slice(2);
};
Type.enumIndex = function(e) {
	return e[1];
};
Type.allEnums = function(e) {
	return e.__empty_constructs__;
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,toString: null
	,__class__: haxe_IMap
};
var haxe__$DynamicAccess_DynamicAccess_$Impl_$ = {};
$hxClasses["haxe._DynamicAccess.DynamicAccess_Impl_"] = haxe__$DynamicAccess_DynamicAccess_$Impl_$;
haxe__$DynamicAccess_DynamicAccess_$Impl_$.__name__ = ["haxe","_DynamicAccess","DynamicAccess_Impl_"];
haxe__$DynamicAccess_DynamicAccess_$Impl_$._new = function() {
	var this1 = { };
	return this1;
};
haxe__$DynamicAccess_DynamicAccess_$Impl_$.get = function(this1,key) {
	return this1[key];
};
haxe__$DynamicAccess_DynamicAccess_$Impl_$.set = function(this1,key,value) {
	return this1[key] = value;
};
haxe__$DynamicAccess_DynamicAccess_$Impl_$.exists = function(this1,key) {
	return Object.prototype.hasOwnProperty.call(this1,key);
};
haxe__$DynamicAccess_DynamicAccess_$Impl_$.remove = function(this1,key) {
	return Reflect.deleteField(this1,key);
};
haxe__$DynamicAccess_DynamicAccess_$Impl_$.keys = function(this1) {
	return Reflect.fields(this1);
};
var haxe__$Int32_Int32_$Impl_$ = {};
$hxClasses["haxe._Int32.Int32_Impl_"] = haxe__$Int32_Int32_$Impl_$;
haxe__$Int32_Int32_$Impl_$.__name__ = ["haxe","_Int32","Int32_Impl_"];
haxe__$Int32_Int32_$Impl_$.preIncrement = function(this1) {
	this1 = ++this1 | 0;
	return this1;
};
haxe__$Int32_Int32_$Impl_$.postIncrement = function(this1) {
	var ret = this1++;
	this1 |= 0;
	return ret;
};
haxe__$Int32_Int32_$Impl_$.preDecrement = function(this1) {
	this1 = --this1 | 0;
	return this1;
};
haxe__$Int32_Int32_$Impl_$.postDecrement = function(this1) {
	var ret = this1--;
	this1 |= 0;
	return ret;
};
haxe__$Int32_Int32_$Impl_$.add = function(a,b) {
	return a + b | 0;
};
haxe__$Int32_Int32_$Impl_$.addInt = function(a,b) {
	return a + b | 0;
};
haxe__$Int32_Int32_$Impl_$.sub = function(a,b) {
	return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.subInt = function(a,b) {
	return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.intSub = function(a,b) {
	return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.mul = function(a,b) {
	return haxe__$Int32_Int32_$Impl_$._mul(a,b);
};
haxe__$Int32_Int32_$Impl_$.mulInt = function(a,b) {
	return haxe__$Int32_Int32_$Impl_$._mul(a,b);
};
haxe__$Int32_Int32_$Impl_$.toFloat = function(this1) {
	return this1;
};
haxe__$Int32_Int32_$Impl_$.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
haxe__$Int32_Int32_$Impl_$.clamp = function(x) {
	return x | 0;
};
var haxe__$Int64_Int64_$Impl_$ = {};
$hxClasses["haxe._Int64.Int64_Impl_"] = haxe__$Int64_Int64_$Impl_$;
haxe__$Int64_Int64_$Impl_$.__name__ = ["haxe","_Int64","Int64_Impl_"];
haxe__$Int64_Int64_$Impl_$.__properties__ = {get_low:"get_low",get_high:"get_high"};
haxe__$Int64_Int64_$Impl_$._new = function(x) {
	var this1 = x;
	return this1;
};
haxe__$Int64_Int64_$Impl_$.copy = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.make = function(high,low) {
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.ofInt = function(x) {
	var this1 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.toInt = function(x) {
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
haxe__$Int64_Int64_$Impl_$["is"] = function(val) {
	return js_Boot.__instanceof(val,haxe__$Int64__$_$_$Int64);
};
haxe__$Int64_Int64_$Impl_$.getHigh = function(x) {
	return x.high;
};
haxe__$Int64_Int64_$Impl_$.getLow = function(x) {
	return x.low;
};
haxe__$Int64_Int64_$Impl_$.isNeg = function(x) {
	return x.high < 0;
};
haxe__$Int64_Int64_$Impl_$.isZero = function(x) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this1;
	if(x.high == b.high) {
		return x.low == b.low;
	} else {
		return false;
	}
};
haxe__$Int64_Int64_$Impl_$.compare = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	if(a.high < 0) {
		if(b.high < 0) {
			return v;
		} else {
			return -1;
		}
	} else if(b.high >= 0) {
		return v;
	} else {
		return 1;
	}
};
haxe__$Int64_Int64_$Impl_$.ucompare = function(a,b) {
	var v = haxe__$Int32_Int32_$Impl_$.ucompare(a.high,b.high);
	if(v != 0) {
		return v;
	} else {
		return haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
};
haxe__$Int64_Int64_$Impl_$.toStr = function(x) {
	return haxe__$Int64_Int64_$Impl_$.toString(x);
};
haxe__$Int64_Int64_$Impl_$.toString = function(this1) {
	var i = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this2;
	if(i.high == b.high && i.low == b.low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(0,10);
	var ten = this3;
	while(true) {
		var this4 = new haxe__$Int64__$_$_$Int64(0,0);
		var b1 = this4;
		if(!(i.high != b1.high || i.low != b1.low)) {
			break;
		}
		var r = haxe__$Int64_Int64_$Impl_$.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var high = ~x.high;
			var low = -x.low;
			if(low == 0) {
				var ret = high++;
				high = high | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high,low);
			str = this5.low + str;
			var x1 = r.quotient;
			var high1 = ~x1.high;
			var low1 = -x1.low;
			if(low1 == 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high1,low1);
			i = this6;
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe__$Int64_Int64_$Impl_$.parseString = function(sParam) {
	return haxe_Int64Helper.parseString(sParam);
};
haxe__$Int64_Int64_$Impl_$.fromFloat = function(f) {
	return haxe_Int64Helper.fromFloat(f);
};
haxe__$Int64_Int64_$Impl_$.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		var _g = divisor.low;
		switch(_g) {
		case 0:
			throw new js__$Boot_HaxeError("divide by zero");
			break;
		case 1:
			var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
			var this2 = new haxe__$Int64__$_$_$Int64(0,0);
			return { quotient : this1, modulus : this2};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = -dividend.low;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this3;
	} else {
		var this4 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
		modulus = this4;
	}
	if(divisor.high < 0) {
		var high1 = ~divisor.high;
		var low1 = -divisor.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this5 = new haxe__$Int64__$_$_$Int64(high1,low1);
		divisor = this5;
	} else {
		divisor = divisor;
	}
	var this6 = new haxe__$Int64__$_$_$Int64(0,0);
	var quotient = this6;
	var this7 = new haxe__$Int64__$_$_$Int64(0,1);
	var mask = this7;
	while(!(divisor.high < 0)) {
		var v = haxe__$Int32_Int32_$Impl_$.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this8 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this8;
		} else if(b < 32) {
			var this9 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b);
			divisor = this9;
		} else {
			var this10 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
			divisor = this10;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this11 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this11;
		} else if(b1 < 32) {
			var this12 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1);
			mask = this12;
		} else {
			var this13 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
			mask = this13;
		}
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var this14 = new haxe__$Int64__$_$_$Int64(0,0);
		var b2 = this14;
		if(!(mask.high != b2.high || mask.low != b2.low)) {
			break;
		}
		var v1 = haxe__$Int32_Int32_$Impl_$.ucompare(modulus.high,divisor.high);
		if((v1 != 0 ? v1 : haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low)) >= 0) {
			var this15 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			quotient = this15;
			var high2 = modulus.high - divisor.high | 0;
			var low2 = modulus.low - divisor.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low) < 0) {
				var ret2 = high2--;
				high2 = high2 | 0;
			}
			var this16 = new haxe__$Int64__$_$_$Int64(high2,low2);
			modulus = this16;
		}
		var b3 = 1;
		b3 &= 63;
		if(b3 == 0) {
			var this17 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this17;
		} else if(b3 < 32) {
			var this18 = new haxe__$Int64__$_$_$Int64(mask.high >>> b3,mask.high << 32 - b3 | mask.low >>> b3);
			mask = this18;
		} else {
			var this19 = new haxe__$Int64__$_$_$Int64(0,mask.high >>> b3 - 32);
			mask = this19;
		}
		var b4 = 1;
		b4 &= 63;
		if(b4 == 0) {
			var this20 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this20;
		} else if(b4 < 32) {
			var this21 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b4,divisor.high << 32 - b4 | divisor.low >>> b4);
			divisor = this21;
		} else {
			var this22 = new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b4 - 32);
			divisor = this22;
		}
	}
	if(divSign) {
		var high3 = ~quotient.high;
		var low3 = -quotient.low;
		if(low3 == 0) {
			var ret3 = high3++;
			high3 = high3 | 0;
		}
		var this23 = new haxe__$Int64__$_$_$Int64(high3,low3);
		quotient = this23;
	}
	if(dividend.high < 0) {
		var high4 = ~modulus.high;
		var low4 = -modulus.low;
		if(low4 == 0) {
			var ret4 = high4++;
			high4 = high4 | 0;
		}
		var this24 = new haxe__$Int64__$_$_$Int64(high4,low4);
		modulus = this24;
	}
	return { quotient : quotient, modulus : modulus};
};
haxe__$Int64_Int64_$Impl_$.neg = function(x) {
	var high = ~x.high;
	var low = -x.low;
	if(low == 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.preIncrement = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	var ret = this1.low++;
	this1.low = this1.low | 0;
	if(this1.low == 0) {
		var ret1 = this1.high++;
		this1.high = this1.high | 0;
	}
	return this1;
};
haxe__$Int64_Int64_$Impl_$.postIncrement = function(this1) {
	var ret = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	var ret1 = this1.low++;
	this1.low = this1.low | 0;
	if(this1.low == 0) {
		var ret2 = this1.high++;
		this1.high = this1.high | 0;
	}
	return ret;
};
haxe__$Int64_Int64_$Impl_$.preDecrement = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	if(this1.low == 0) {
		var ret = this1.high--;
		this1.high = this1.high | 0;
	}
	var ret1 = this1.low--;
	this1.low = this1.low | 0;
	return this1;
};
haxe__$Int64_Int64_$Impl_$.postDecrement = function(this1) {
	var ret = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = this2;
	if(this1.low == 0) {
		var ret1 = this1.high--;
		this1.high = this1.high | 0;
	}
	var ret2 = this1.low--;
	this1.low = this1.low | 0;
	return ret;
};
haxe__$Int64_Int64_$Impl_$.add = function(a,b) {
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.addInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var high = a.high + b1.high | 0;
	var low = a.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.sub = function(a,b) {
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.subInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var high = a.high - b1.high | 0;
	var low = a.low - b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.intSub = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var high = a1.high - b.high | 0;
	var low = a1.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.mul = function(a,b) {
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.mulInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b1.low & mask;
	var bh = b1.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b1.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.div = function(a,b) {
	return haxe__$Int64_Int64_$Impl_$.divMod(a,b).quotient;
};
haxe__$Int64_Int64_$Impl_$.divInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	return haxe__$Int64_Int64_$Impl_$.divMod(a,this1).quotient;
};
haxe__$Int64_Int64_$Impl_$.intDiv = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,b).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var x1 = x.low;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.mod = function(a,b) {
	return haxe__$Int64_Int64_$Impl_$.divMod(a,b).modulus;
};
haxe__$Int64_Int64_$Impl_$.modInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var x1 = x.low;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.intMod = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,b).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var x1 = x.low;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	return this2;
};
haxe__$Int64_Int64_$Impl_$.eq = function(a,b) {
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
haxe__$Int64_Int64_$Impl_$.eqInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	if(a.high == b1.high) {
		return a.low == b1.low;
	} else {
		return false;
	}
};
haxe__$Int64_Int64_$Impl_$.neq = function(a,b) {
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
haxe__$Int64_Int64_$Impl_$.neqInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	if(!(a.high != b1.high)) {
		return a.low != b1.low;
	} else {
		return true;
	}
};
haxe__$Int64_Int64_$Impl_$.lt = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.ltInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.intLt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.lte = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.lteInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.intLte = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.gt = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.gtInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.intGt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.gte = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.gteInt = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(b >> 31,b);
	var b1 = this1;
	var v = a.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b1.low);
	}
	return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.intGte = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a >> 31,a);
	var a1 = this1;
	var v = a1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b.low);
	}
	return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.complement = function(a) {
	var this1 = new haxe__$Int64__$_$_$Int64(~a.high,~a.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.and = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a.high & b.high,a.low & b.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.or = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a.high | b.high,a.low | b.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.xor = function(a,b) {
	var this1 = new haxe__$Int64__$_$_$Int64(a.high ^ b.high,a.low ^ b.low);
	return this1;
};
haxe__$Int64_Int64_$Impl_$.shl = function(a,b) {
	b &= 63;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
		return this1;
	} else if(b < 32) {
		var this2 = new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b,a.low << b);
		return this2;
	} else {
		var this3 = new haxe__$Int64__$_$_$Int64(a.low << b - 32,0);
		return this3;
	}
};
haxe__$Int64_Int64_$Impl_$.shr = function(a,b) {
	b &= 63;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
		return this1;
	} else if(b < 32) {
		var this2 = new haxe__$Int64__$_$_$Int64(a.high >> b,a.high << 32 - b | a.low >>> b);
		return this2;
	} else {
		var this3 = new haxe__$Int64__$_$_$Int64(a.high >> 31,a.high >> b - 32);
		return this3;
	}
};
haxe__$Int64_Int64_$Impl_$.ushr = function(a,b) {
	b &= 63;
	if(b == 0) {
		var this1 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
		return this1;
	} else if(b < 32) {
		var this2 = new haxe__$Int64__$_$_$Int64(a.high >>> b,a.high << 32 - b | a.low >>> b);
		return this2;
	} else {
		var this3 = new haxe__$Int64__$_$_$Int64(0,a.high >>> b - 32);
		return this3;
	}
};
haxe__$Int64_Int64_$Impl_$.get_high = function(this1) {
	return this1.high;
};
haxe__$Int64_Int64_$Impl_$.set_high = function(this1,x) {
	return this1.high = x;
};
haxe__$Int64_Int64_$Impl_$.get_low = function(this1) {
	return this1.low;
};
haxe__$Int64_Int64_$Impl_$.set_low = function(this1,x) {
	return this1.low = x;
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,toString: function() {
		return haxe__$Int64_Int64_$Impl_$.toString(this);
	}
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Int64Helper = function() { };
$hxClasses["haxe.Int64Helper"] = haxe_Int64Helper;
haxe_Int64Helper.__name__ = ["haxe","Int64Helper"];
haxe_Int64Helper.parseString = function(sParam) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	var base = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var current = this2;
	var this3 = new haxe__$Int64__$_$_$Int64(0,1);
	var multiplier = this3;
	var sIsNegative = false;
	var s = StringTools.trim(sParam);
	if(s.charAt(0) == "-") {
		sIsNegative = true;
		s = s.substring(1,s.length);
	}
	var len = s.length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i = _g1++;
		var digitInt = HxOverrides.cca(s,len - 1 - i) - 48;
		if(digitInt < 0 || digitInt > 9) {
			throw new js__$Boot_HaxeError("NumberFormatError");
		}
		var this4 = new haxe__$Int64__$_$_$Int64(digitInt >> 31,digitInt);
		var digit = this4;
		if(sIsNegative) {
			var mask = 65535;
			var al = multiplier.low & mask;
			var ah = multiplier.low >>> 16;
			var bl = digit.low & mask;
			var bh = digit.low >>> 16;
			var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
			var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
			var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
			var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
			var low = p00;
			var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
			p01 = p01 << 16;
			low = low + p01 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
				var ret = high++;
				high = high | 0;
			}
			p10 = p10 << 16;
			low = low + p10 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
				var ret1 = high++;
				high = high | 0;
			}
			high = high + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit.low) | 0) | 0;
			var this5 = new haxe__$Int64__$_$_$Int64(high,low);
			var b = this5;
			var high1 = current.high - b.high | 0;
			var low1 = current.low - b.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(current.low,b.low) < 0) {
				var ret2 = high1--;
				high1 = high1 | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high1,low1);
			current = this6;
			if(!(current.high < 0)) {
				throw new js__$Boot_HaxeError("NumberFormatError: Underflow");
			}
		} else {
			var mask1 = 65535;
			var al1 = multiplier.low & mask1;
			var ah1 = multiplier.low >>> 16;
			var bl1 = digit.low & mask1;
			var bh1 = digit.low >>> 16;
			var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
			var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
			var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
			var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
			var low2 = p001;
			var high2 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
			p011 = p011 << 16;
			low2 = low2 + p011 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p011) < 0) {
				var ret3 = high2++;
				high2 = high2 | 0;
			}
			p101 = p101 << 16;
			low2 = low2 + p101 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p101) < 0) {
				var ret4 = high2++;
				high2 = high2 | 0;
			}
			high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit.low) | 0) | 0;
			var this7 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var b1 = this7;
			var high3 = current.high + b1.high | 0;
			var low3 = current.low + b1.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,current.low) < 0) {
				var ret5 = high3++;
				high3 = high3 | 0;
			}
			var this8 = new haxe__$Int64__$_$_$Int64(high3,low3);
			current = this8;
			if(current.high < 0) {
				throw new js__$Boot_HaxeError("NumberFormatError: Overflow");
			}
		}
		var mask2 = 65535;
		var al2 = multiplier.low & mask2;
		var ah2 = multiplier.low >>> 16;
		var bl2 = base.low & mask2;
		var bh2 = base.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low4 = p002;
		var high4 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low4 = low4 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p012) < 0) {
			var ret6 = high4++;
			high4 = high4 | 0;
		}
		p102 = p102 << 16;
		low4 = low4 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p102) < 0) {
			var ret7 = high4++;
			high4 = high4 | 0;
		}
		high4 = high4 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,base.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,base.low) | 0) | 0;
		var this9 = new haxe__$Int64__$_$_$Int64(high4,low4);
		multiplier = this9;
	}
	return current;
};
haxe_Int64Helper.fromFloat = function(f) {
	if(isNaN(f) || !isFinite(f)) {
		throw new js__$Boot_HaxeError("Number is NaN or Infinite");
	}
	var noFractions = f - f % 1;
	if(noFractions > 9007199254740991) {
		throw new js__$Boot_HaxeError("Conversion overflow");
	}
	if(noFractions < -9007199254740991) {
		throw new js__$Boot_HaxeError("Conversion underflow");
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var result = this1;
	var neg = noFractions < 0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	while(rest >= 1) {
		var curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			var this2 = new haxe__$Int64__$_$_$Int64(0,1);
			var a = this2;
			var b = i;
			b &= 63;
			var b1;
			if(b == 0) {
				var this3 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
				b1 = this3;
			} else if(b < 32) {
				var this4 = new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b,a.low << b);
				b1 = this4;
			} else {
				var this5 = new haxe__$Int64__$_$_$Int64(a.low << b - 32,0);
				b1 = this5;
			}
			var high = result.high + b1.high | 0;
			var low = result.low + b1.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,result.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high,low);
			result = this6;
		}
		++i;
	}
	if(neg) {
		var high1 = ~result.high;
		var low1 = -result.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this7 = new haxe__$Int64__$_$_$Int64(high1,low1);
		result = this7;
	}
	return result;
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
haxe_Log.clear = function() {
	js_Boot.__clear_trace();
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				return false;
			} else throw(e);
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw new js__$Boot_HaxeError("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw new js__$Boot_HaxeError("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,toString: function() {
		if(this.root == null) {
			return "{}";
		} else {
			return "{" + this.root.toString() + "}";
		}
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,toString: function() {
		return (this.left == null ? "" : this.left.toString() + ", ") + ("" + Std.string(this.key) + "=" + Std.string(this.value)) + (this.right == null ? "" : ", " + this.right.toString());
	}
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = ["haxe","ds","GenericCell"];
haxe_ds_GenericCell.prototype = {
	elt: null
	,next: null
	,__class__: haxe_ds_GenericCell
};
var haxe_ds_GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = ["haxe","ds","GenericStack"];
haxe_ds_GenericStack.prototype = {
	head: null
	,add: function(item) {
		this.head = new haxe_ds_GenericCell(item,this.head);
	}
	,first: function() {
		if(this.head == null) {
			return null;
		} else {
			return this.head.elt;
		}
	}
	,pop: function() {
		var k = this.head;
		if(k == null) {
			return null;
		} else {
			this.head = k.next;
			return k.elt;
		}
	}
	,isEmpty: function() {
		return this.head == null;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.head;
		while(l != null) {
			if(l.elt == v) {
				if(prev == null) {
					this.head = l.next;
				} else {
					prev.next = l.next;
				}
				break;
			}
			prev = l;
			l = l.next;
		}
		return l != null;
	}
	,iterator: function() {
		var l = this.head;
		return { hasNext : function() {
			return l != null;
		}, next : function() {
			var k = l;
			l = k.next;
			return k.elt;
		}};
	}
	,toString: function() {
		var a = [];
		var l = this.head;
		while(l != null) {
			a.push(l.elt);
			l = l.next;
		}
		return "{" + a.join(",") + "}";
	}
	,__class__: haxe_ds_GenericStack
};
var haxe_ds__$HashMap_HashMap_$Impl_$ = {};
$hxClasses["haxe.ds._HashMap.HashMap_Impl_"] = haxe_ds__$HashMap_HashMap_$Impl_$;
haxe_ds__$HashMap_HashMap_$Impl_$.__name__ = ["haxe","ds","_HashMap","HashMap_Impl_"];
haxe_ds__$HashMap_HashMap_$Impl_$._new = function() {
	var this1 = new haxe_ds__$HashMap_HashMapData();
	return this1;
};
haxe_ds__$HashMap_HashMap_$Impl_$.set = function(this1,k,v) {
	var _this = this1.keys;
	var key = k.hashCode();
	_this.h[key] = k;
	var _this1 = this1.values;
	var key1 = k.hashCode();
	_this1.h[key1] = v;
};
haxe_ds__$HashMap_HashMap_$Impl_$.get = function(this1,k) {
	var _this = this1.values;
	var key = k.hashCode();
	return _this.h[key];
};
haxe_ds__$HashMap_HashMap_$Impl_$.exists = function(this1,k) {
	var _this = this1.values;
	var key = k.hashCode();
	return _this.h.hasOwnProperty(key);
};
haxe_ds__$HashMap_HashMap_$Impl_$.remove = function(this1,k) {
	this1.values.remove(k.hashCode());
	return this1.keys.remove(k.hashCode());
};
haxe_ds__$HashMap_HashMap_$Impl_$.keys = function(this1) {
	return this1.keys.iterator();
};
haxe_ds__$HashMap_HashMap_$Impl_$.iterator = function(this1) {
	return this1.values.iterator();
};
var haxe_ds__$HashMap_HashMapData = function() {
	this.keys = new haxe_ds_IntMap();
	this.values = new haxe_ds_IntMap();
};
$hxClasses["haxe.ds._HashMap.HashMapData"] = haxe_ds__$HashMap_HashMapData;
haxe_ds__$HashMap_HashMapData.__name__ = ["haxe","ds","_HashMap","HashMapData"];
haxe_ds__$HashMap_HashMapData.prototype = {
	keys: null
	,values: null
	,__class__: haxe_ds__$HashMap_HashMapData
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += i1 == null ? "null" : "" + i1;
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function(obj) {
	return obj.__id__ = ++haxe_ds_ObjectMap.count;
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += Std.string(Std.string(i1));
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1.__id__]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,isReserved: function(key) {
		return __map_reserved[key] != null;
	}
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,toString: function() {
		var s_b = "";
		s_b += "{";
		var keys = this.arrayKeys();
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var k = keys[i];
			s_b += k == null ? "null" : "" + k;
			s_b += " => ";
			s_b += Std.string(Std.string(__map_reserved[k] != null ? this.getReserved(k) : this.h[k]));
			if(i < keys.length - 1) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds_WeakMap = function() {
	throw new js__$Boot_HaxeError("Not implemented for this platform");
};
$hxClasses["haxe.ds.WeakMap"] = haxe_ds_WeakMap;
haxe_ds_WeakMap.__name__ = ["haxe","ds","WeakMap"];
haxe_ds_WeakMap.__interfaces__ = [haxe_IMap];
haxe_ds_WeakMap.prototype = {
	set: function(key,value) {
	}
	,get: function(key) {
		return null;
	}
	,exists: function(key) {
		return false;
	}
	,remove: function(key) {
		return false;
	}
	,keys: function() {
		return null;
	}
	,iterator: function() {
		return null;
	}
	,toString: function() {
		return null;
	}
	,__class__: haxe_ds_WeakMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,get: function(pos) {
		return this.b[pos];
	}
	,set: function(pos,v) {
		this.b[pos] = v & 255;
	}
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,fill: function(pos,len,value) {
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.b[pos++] = value & 255;
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,compare: function(other) {
		var b1 = this.b;
		var b2 = other.b;
		var len = this.length < other.length ? this.length : other.length;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			if(b1[i] != b2[i]) {
				return b1[i] - b2[i];
			}
		}
		return this.length - other.length;
	}
	,initData: function() {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
	}
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat64(pos,v,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,setUInt16: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setUint16(pos,v,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getInt64: function(pos) {
		var this1 = new haxe__$Int64__$_$_$Int64(this.getInt32(pos + 4),this.getInt32(pos));
		return this1;
	}
	,setInt64: function(pos,v) {
		this.setInt32(pos,v.low);
		this.setInt32(pos + 4,v.high);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,readString: function(pos,len) {
		return this.getString(pos,len);
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g1 = 0;
		var _g = str.length;
		while(_g1 < _g) {
			var i = _g1++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g11 = 0;
		var _g2 = this.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var c = this.b[i1];
			s_b += String.fromCharCode(chars[c >> 4]);
			s_b += String.fromCharCode(chars[c & 15]);
		}
		return s_b;
	}
	,getData: function() {
		return this.b.bufferValue;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe_io_BytesBuffer.prototype = {
	b: null
	,get_length: function() {
		return this.b.length;
	}
	,addByte: function($byte) {
		this.b.push($byte);
	}
	,add: function(src) {
		var b1 = this.b;
		var b2 = src.b;
		var _g1 = 0;
		var _g = src.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.b.push(b2[i]);
		}
	}
	,addString: function(v) {
		var src = haxe_io_Bytes.ofString(v);
		var b1 = this.b;
		var b2 = src.b;
		var _g1 = 0;
		var _g = src.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.b.push(b2[i]);
		}
	}
	,addInt32: function(v) {
		this.b.push(v & 255);
		this.b.push(v >> 8 & 255);
		this.b.push(v >> 16 & 255);
		this.b.push(v >>> 24);
	}
	,addInt64: function(v) {
		this.addInt32(v.low);
		this.addInt32(v.high);
	}
	,addFloat: function(v) {
		this.addInt32(haxe_io_FPHelper.floatToI32(v));
	}
	,addDouble: function(v) {
		this.addInt64(haxe_io_FPHelper.doubleToI64(v));
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b1 = this.b;
		var b2 = src.b;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			this.b.push(b2[i]);
		}
	}
	,getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
	,__properties__: {get_length:"get_length"}
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = ["haxe","io","Input"];
haxe_io_Input.prototype = {
	bigEndian: null
	,readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if (eof instanceof js__$Boot_HaxeError) eof = eof.val;
			if( js_Boot.__instanceof(eof,haxe_io_Eof) ) {
			} else throw(eof);
		}
		return len - k;
	}
	,close: function() {
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readAll: function(bufsize) {
		if(bufsize == null) {
			bufsize = 16384;
		}
		var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
		var total = new haxe_io_BytesBuffer();
		try {
			while(true) {
				var len = this.readBytes(buf,0,bufsize);
				if(len == 0) {
					throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
				}
				if(len < 0 || len > buf.length) {
					throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
				}
				var b1 = total.b;
				var b2 = buf.b;
				var _g1 = 0;
				var _g = len;
				while(_g1 < _g) {
					var i = _g1++;
					total.b.push(b2[i]);
				}
			}
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
			} else throw(e);
		}
		return total.getBytes();
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readUntil: function(end) {
		var buf = new haxe_io_BytesBuffer();
		var last;
		while(true) {
			last = this.readByte();
			if(!(last != end)) {
				break;
			}
			buf.b.push(last);
		}
		return buf.getBytes().toString();
	}
	,readLine: function() {
		var buf = new haxe_io_BytesBuffer();
		var last;
		var s;
		try {
			while(true) {
				last = this.readByte();
				if(!(last != 10)) {
					break;
				}
				buf.b.push(last);
			}
			s = buf.getBytes().toString();
			if(HxOverrides.cca(s,s.length - 1) == 13) {
				s = HxOverrides.substr(s,0,-1);
			}
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
				s = buf.getBytes().toString();
				if(s.length == 0) {
					throw new js__$Boot_HaxeError(e);
				}
			} else throw(e);
		}
		return s;
	}
	,readFloat: function() {
		return haxe_io_FPHelper.i32ToFloat(this.readInt32());
	}
	,readDouble: function() {
		var i1 = this.readInt32();
		var i2 = this.readInt32();
		if(this.bigEndian) {
			return haxe_io_FPHelper.i64ToDouble(i2,i1);
		} else {
			return haxe_io_FPHelper.i64ToDouble(i1,i2);
		}
	}
	,readInt8: function() {
		var n = this.readByte();
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt24: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var n = this.bigEndian ? ch3 | ch2 << 8 | ch1 << 16 : ch1 | ch2 << 8 | ch3 << 16;
		if((n & 8388608) != 0) {
			return n - 16777216;
		}
		return n;
	}
	,readUInt24: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		if(this.bigEndian) {
			return ch3 | ch2 << 8 | ch1 << 16;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,getDoubleSig: function(bytes) {
		return ((bytes[1] & 15) << 16 | bytes[2] << 8 | bytes[3]) * 4294967296. + (bytes[4] >> 7) * 2147483648 + ((bytes[4] & 127) << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7]);
	}
	,__class__: haxe_io_Input
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,get_position: function() {
		return this.pos;
	}
	,get_length: function() {
		return this.totlen;
	}
	,set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
	,__properties__: $extend(haxe_io_Input.prototype.__properties__,{get_length:"get_length",set_position:"set_position",get_position:"get_position"})
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = ["haxe","io","Output"];
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,flush: function() {
	}
	,close: function() {
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeDouble: function(x) {
		var i64 = haxe_io_FPHelper.doubleToI64(x);
		if(this.bigEndian) {
			this.writeInt32(i64.high);
			this.writeInt32(i64.low);
		} else {
			this.writeInt32(i64.low);
			this.writeInt32(i64.high);
		}
	}
	,writeInt8: function(x) {
		if(x < -128 || x >= 128) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		this.writeByte(x & 255);
	}
	,writeInt16: function(x) {
		if(x < -32768 || x >= 32768) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		this.writeUInt16(x & 65535);
	}
	,writeUInt16: function(x) {
		if(x < 0 || x >= 65536) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
	}
	,writeInt24: function(x) {
		if(x < -8388608 || x >= 8388608) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		this.writeUInt24(x & 16777215);
	}
	,writeUInt24: function(x) {
		if(x < 0 || x >= 16777216) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 16);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16);
		}
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,prepare: function(nbytes) {
	}
	,writeInput: function(i,bufsize) {
		if(bufsize == null) {
			bufsize = 4096;
		}
		var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
		try {
			while(true) {
				var len = i.readBytes(buf,0,bufsize);
				if(len == 0) {
					throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
				}
				var p = 0;
				while(len > 0) {
					var k = this.writeBytes(buf,p,len);
					if(k == 0) {
						throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
					}
					p += k;
					len -= k;
				}
			}
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
			} else throw(e);
		}
	}
	,writeString: function(s) {
		var b = haxe_io_Bytes.ofString(s);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,get_length: function() {
		return this.b.b.length;
	}
	,writeByte: function(c) {
		this.b.b.push(c);
	}
	,writeBytes: function(buf,pos,len) {
		var _this = this.b;
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b1 = _this.b;
		var b2 = buf.b;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			_this.b.push(b2[i]);
		}
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
	,__properties__: $extend(haxe_io_Output.prototype.__properties__,{get_length:"get_length"})
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
haxe_io_Error.__empty_constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds];
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else if(!isFinite(v)) {
		if(v > 0) {
			i64.low = 0;
			i64.high = 2146435072;
		} else {
			i64.low = 0;
			i64.high = -1048576;
		}
	} else {
		var av = v < 0 ? -v : v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_io_StringInput = function(s) {
	haxe_io_BytesInput.call(this,haxe_io_Bytes.ofString(s));
};
$hxClasses["haxe.io.StringInput"] = haxe_io_StringInput;
haxe_io_StringInput.__name__ = ["haxe","io","StringInput"];
haxe_io_StringInput.__super__ = haxe_io_BytesInput;
haxe_io_StringInput.prototype = $extend(haxe_io_BytesInput.prototype,{
	__class__: haxe_io_StringInput
});
var hscript_Const = $hxClasses["hscript.Const"] = { __ename__ : ["hscript","Const"], __constructs__ : ["CInt","CFloat","CString"] };
hscript_Const.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = hscript_Const; $x.toString = $estr; return $x; };
hscript_Const.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = hscript_Const; $x.toString = $estr; return $x; };
hscript_Const.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = hscript_Const; $x.toString = $estr; return $x; };
hscript_Const.__empty_constructs__ = [];
var hscript_Expr = $hxClasses["hscript.Expr"] = { __ename__ : ["hscript","Expr"], __constructs__ : ["EConst","EIdent","EVar","EParent","EBlock","EField","EBinop","EUnop","ECall","EIf","EWhile","EFor","EBreak","EContinue","EFunction","EReturn","EArray","EArrayDecl","ENew","EThrow","ETry","EObject","ETernary","ESwitch","EDoWhile","EMeta"] };
hscript_Expr.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EIdent = function(v) { var $x = ["EIdent",1,v]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EVar = function(n,t,e) { var $x = ["EVar",2,n,t,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EParent = function(e) { var $x = ["EParent",3,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EBlock = function(e) { var $x = ["EBlock",4,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EField = function(e,f) { var $x = ["EField",5,e,f]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EBinop = function(op,e1,e2) { var $x = ["EBinop",6,op,e1,e2]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EUnop = function(op,prefix,e) { var $x = ["EUnop",7,op,prefix,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.ECall = function(e,params) { var $x = ["ECall",8,e,params]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EIf = function(cond,e1,e2) { var $x = ["EIf",9,cond,e1,e2]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EWhile = function(cond,e) { var $x = ["EWhile",10,cond,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EFor = function(v,it,e) { var $x = ["EFor",11,v,it,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EBreak = ["EBreak",12];
hscript_Expr.EBreak.toString = $estr;
hscript_Expr.EBreak.__enum__ = hscript_Expr;
hscript_Expr.EContinue = ["EContinue",13];
hscript_Expr.EContinue.toString = $estr;
hscript_Expr.EContinue.__enum__ = hscript_Expr;
hscript_Expr.EFunction = function(args,e,name,ret) { var $x = ["EFunction",14,args,e,name,ret]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EReturn = function(e) { var $x = ["EReturn",15,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EArray = function(e,index) { var $x = ["EArray",16,e,index]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EArrayDecl = function(e) { var $x = ["EArrayDecl",17,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.ENew = function(cl,params) { var $x = ["ENew",18,cl,params]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EThrow = function(e) { var $x = ["EThrow",19,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.ETry = function(e,v,t,ecatch) { var $x = ["ETry",20,e,v,t,ecatch]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EObject = function(fl) { var $x = ["EObject",21,fl]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.ETernary = function(cond,e1,e2) { var $x = ["ETernary",22,cond,e1,e2]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.ESwitch = function(e,cases,defaultExpr) { var $x = ["ESwitch",23,e,cases,defaultExpr]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EDoWhile = function(cond,e) { var $x = ["EDoWhile",24,cond,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.EMeta = function(name,args,e) { var $x = ["EMeta",25,name,args,e]; $x.__enum__ = hscript_Expr; $x.toString = $estr; return $x; };
hscript_Expr.__empty_constructs__ = [hscript_Expr.EBreak,hscript_Expr.EContinue];
var hscript_CType = $hxClasses["hscript.CType"] = { __ename__ : ["hscript","CType"], __constructs__ : ["CTPath","CTFun","CTAnon","CTParent"] };
hscript_CType.CTPath = function(path,params) { var $x = ["CTPath",0,path,params]; $x.__enum__ = hscript_CType; $x.toString = $estr; return $x; };
hscript_CType.CTFun = function(args,ret) { var $x = ["CTFun",1,args,ret]; $x.__enum__ = hscript_CType; $x.toString = $estr; return $x; };
hscript_CType.CTAnon = function(fields) { var $x = ["CTAnon",2,fields]; $x.__enum__ = hscript_CType; $x.toString = $estr; return $x; };
hscript_CType.CTParent = function(t) { var $x = ["CTParent",3,t]; $x.__enum__ = hscript_CType; $x.toString = $estr; return $x; };
hscript_CType.__empty_constructs__ = [];
var hscript_Error = $hxClasses["hscript.Error"] = { __ename__ : ["hscript","Error"], __constructs__ : ["EInvalidChar","EUnexpected","EUnterminatedString","EUnterminatedComment","EInvalidPreprocessor","EUnknownVariable","EInvalidIterator","EInvalidOp","EInvalidAccess","ECustom"] };
hscript_Error.EInvalidChar = function(c) { var $x = ["EInvalidChar",0,c]; $x.__enum__ = hscript_Error; $x.toString = $estr; return $x; };
hscript_Error.EUnexpected = function(s) { var $x = ["EUnexpected",1,s]; $x.__enum__ = hscript_Error; $x.toString = $estr; return $x; };
hscript_Error.EUnterminatedString = ["EUnterminatedString",2];
hscript_Error.EUnterminatedString.toString = $estr;
hscript_Error.EUnterminatedString.__enum__ = hscript_Error;
hscript_Error.EUnterminatedComment = ["EUnterminatedComment",3];
hscript_Error.EUnterminatedComment.toString = $estr;
hscript_Error.EUnterminatedComment.__enum__ = hscript_Error;
hscript_Error.EInvalidPreprocessor = function(msg) { var $x = ["EInvalidPreprocessor",4,msg]; $x.__enum__ = hscript_Error; $x.toString = $estr; return $x; };
hscript_Error.EUnknownVariable = function(v) { var $x = ["EUnknownVariable",5,v]; $x.__enum__ = hscript_Error; $x.toString = $estr; return $x; };
hscript_Error.EInvalidIterator = function(v) { var $x = ["EInvalidIterator",6,v]; $x.__enum__ = hscript_Error; $x.toString = $estr; return $x; };
hscript_Error.EInvalidOp = function(op) { var $x = ["EInvalidOp",7,op]; $x.__enum__ = hscript_Error; $x.toString = $estr; return $x; };
hscript_Error.EInvalidAccess = function(f) { var $x = ["EInvalidAccess",8,f]; $x.__enum__ = hscript_Error; $x.toString = $estr; return $x; };
hscript_Error.ECustom = function(msg) { var $x = ["ECustom",9,msg]; $x.__enum__ = hscript_Error; $x.toString = $estr; return $x; };
hscript_Error.__empty_constructs__ = [hscript_Error.EUnterminatedString,hscript_Error.EUnterminatedComment];
var hscript_ModuleDecl = $hxClasses["hscript.ModuleDecl"] = { __ename__ : ["hscript","ModuleDecl"], __constructs__ : ["DPackage","DImport","DClass","DTypedef"] };
hscript_ModuleDecl.DPackage = function(path) { var $x = ["DPackage",0,path]; $x.__enum__ = hscript_ModuleDecl; $x.toString = $estr; return $x; };
hscript_ModuleDecl.DImport = function(path,everything) { var $x = ["DImport",1,path,everything]; $x.__enum__ = hscript_ModuleDecl; $x.toString = $estr; return $x; };
hscript_ModuleDecl.DClass = function(c) { var $x = ["DClass",2,c]; $x.__enum__ = hscript_ModuleDecl; $x.toString = $estr; return $x; };
hscript_ModuleDecl.DTypedef = function(c) { var $x = ["DTypedef",3,c]; $x.__enum__ = hscript_ModuleDecl; $x.toString = $estr; return $x; };
hscript_ModuleDecl.__empty_constructs__ = [];
var hscript_FieldAccess = $hxClasses["hscript.FieldAccess"] = { __ename__ : ["hscript","FieldAccess"], __constructs__ : ["APublic","APrivate","AInline","AOverride","AStatic","AMacro"] };
hscript_FieldAccess.APublic = ["APublic",0];
hscript_FieldAccess.APublic.toString = $estr;
hscript_FieldAccess.APublic.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.APrivate = ["APrivate",1];
hscript_FieldAccess.APrivate.toString = $estr;
hscript_FieldAccess.APrivate.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.AInline = ["AInline",2];
hscript_FieldAccess.AInline.toString = $estr;
hscript_FieldAccess.AInline.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.AOverride = ["AOverride",3];
hscript_FieldAccess.AOverride.toString = $estr;
hscript_FieldAccess.AOverride.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.AStatic = ["AStatic",4];
hscript_FieldAccess.AStatic.toString = $estr;
hscript_FieldAccess.AStatic.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.AMacro = ["AMacro",5];
hscript_FieldAccess.AMacro.toString = $estr;
hscript_FieldAccess.AMacro.__enum__ = hscript_FieldAccess;
hscript_FieldAccess.__empty_constructs__ = [hscript_FieldAccess.APublic,hscript_FieldAccess.APrivate,hscript_FieldAccess.AInline,hscript_FieldAccess.AOverride,hscript_FieldAccess.AStatic,hscript_FieldAccess.AMacro];
var hscript_FieldKind = $hxClasses["hscript.FieldKind"] = { __ename__ : ["hscript","FieldKind"], __constructs__ : ["KFunction","KVar"] };
hscript_FieldKind.KFunction = function(f) { var $x = ["KFunction",0,f]; $x.__enum__ = hscript_FieldKind; $x.toString = $estr; return $x; };
hscript_FieldKind.KVar = function(v) { var $x = ["KVar",1,v]; $x.__enum__ = hscript_FieldKind; $x.toString = $estr; return $x; };
hscript_FieldKind.__empty_constructs__ = [];
var hscript__$Interp_Stop = $hxClasses["hscript._Interp.Stop"] = { __ename__ : ["hscript","_Interp","Stop"], __constructs__ : ["SBreak","SContinue","SReturn"] };
hscript__$Interp_Stop.SBreak = ["SBreak",0];
hscript__$Interp_Stop.SBreak.toString = $estr;
hscript__$Interp_Stop.SBreak.__enum__ = hscript__$Interp_Stop;
hscript__$Interp_Stop.SContinue = ["SContinue",1];
hscript__$Interp_Stop.SContinue.toString = $estr;
hscript__$Interp_Stop.SContinue.__enum__ = hscript__$Interp_Stop;
hscript__$Interp_Stop.SReturn = ["SReturn",2];
hscript__$Interp_Stop.SReturn.toString = $estr;
hscript__$Interp_Stop.SReturn.__enum__ = hscript__$Interp_Stop;
hscript__$Interp_Stop.__empty_constructs__ = [hscript__$Interp_Stop.SBreak,hscript__$Interp_Stop.SContinue,hscript__$Interp_Stop.SReturn];
var hscript_Interp = function() {
	var _gthis = this;
	this.variables = new haxe_ds_StringMap();
	this.locals = new haxe_ds_StringMap();
	this.declared = [];
	var _this = this.variables;
	if(__map_reserved["null"] != null) {
		_this.setReserved("null",null);
	} else {
		_this.h["null"] = null;
	}
	var _this1 = this.variables;
	if(__map_reserved["true"] != null) {
		_this1.setReserved("true",true);
	} else {
		_this1.h["true"] = true;
	}
	var _this2 = this.variables;
	if(__map_reserved["false"] != null) {
		_this2.setReserved("false",false);
	} else {
		_this2.h["false"] = false;
	}
	var _this3 = this.variables;
	var value = Reflect.makeVarArgs(function(el) {
		var inf = _gthis.posInfos();
		var v = el.shift();
		if(el.length > 0) {
			inf.customParams = el;
		}
		haxe_Log.trace(Std.string(v),inf);
	});
	if(__map_reserved["trace"] != null) {
		_this3.setReserved("trace",value);
	} else {
		_this3.h["trace"] = value;
	}
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = ["hscript","Interp"];
hscript_Interp.prototype = {
	variables: null
	,locals: null
	,binops: null
	,depth: null
	,inTry: null
	,declared: null
	,returnValue: null
	,posInfos: function() {
		return { fileName : "hscript", lineNumber : 0};
	}
	,initOps: function() {
		var me = this;
		this.binops = new haxe_ds_StringMap();
		var _this = this.binops;
		if(__map_reserved["+"] != null) {
			_this.setReserved("+",function(e11,e21) {
				return me.expr(e11) + me.expr(e21);
			});
		} else {
			_this.h["+"] = function(e11,e21) {
				return me.expr(e11) + me.expr(e21);
			};
		}
		var _this1 = this.binops;
		if(__map_reserved["-"] != null) {
			_this1.setReserved("-",function(e121,e221) {
				return me.expr(e121) - me.expr(e221);
			});
		} else {
			_this1.h["-"] = function(e121,e221) {
				return me.expr(e121) - me.expr(e221);
			};
		}
		var _this2 = this.binops;
		if(__map_reserved["*"] != null) {
			_this2.setReserved("*",function(e131,e231) {
				return me.expr(e131) * me.expr(e231);
			});
		} else {
			_this2.h["*"] = function(e131,e231) {
				return me.expr(e131) * me.expr(e231);
			};
		}
		var _this3 = this.binops;
		if(__map_reserved["/"] != null) {
			_this3.setReserved("/",function(e141,e241) {
				return me.expr(e141) / me.expr(e241);
			});
		} else {
			_this3.h["/"] = function(e141,e241) {
				return me.expr(e141) / me.expr(e241);
			};
		}
		var _this4 = this.binops;
		if(__map_reserved["%"] != null) {
			_this4.setReserved("%",function(e151,e251) {
				return me.expr(e151) % me.expr(e251);
			});
		} else {
			_this4.h["%"] = function(e151,e251) {
				return me.expr(e151) % me.expr(e251);
			};
		}
		var _this5 = this.binops;
		if(__map_reserved["&"] != null) {
			_this5.setReserved("&",function(e161,e261) {
				return me.expr(e161) & me.expr(e261);
			});
		} else {
			_this5.h["&"] = function(e161,e261) {
				return me.expr(e161) & me.expr(e261);
			};
		}
		var _this6 = this.binops;
		if(__map_reserved["|"] != null) {
			_this6.setReserved("|",function(e171,e271) {
				return me.expr(e171) | me.expr(e271);
			});
		} else {
			_this6.h["|"] = function(e171,e271) {
				return me.expr(e171) | me.expr(e271);
			};
		}
		var _this7 = this.binops;
		if(__map_reserved["^"] != null) {
			_this7.setReserved("^",function(e181,e281) {
				return me.expr(e181) ^ me.expr(e281);
			});
		} else {
			_this7.h["^"] = function(e181,e281) {
				return me.expr(e181) ^ me.expr(e281);
			};
		}
		var _this8 = this.binops;
		if(__map_reserved["<<"] != null) {
			_this8.setReserved("<<",function(e191,e291) {
				return me.expr(e191) << me.expr(e291);
			});
		} else {
			_this8.h["<<"] = function(e191,e291) {
				return me.expr(e191) << me.expr(e291);
			};
		}
		var _this9 = this.binops;
		if(__map_reserved[">>"] != null) {
			_this9.setReserved(">>",function(e1101,e2101) {
				return me.expr(e1101) >> me.expr(e2101);
			});
		} else {
			_this9.h[">>"] = function(e1101,e2101) {
				return me.expr(e1101) >> me.expr(e2101);
			};
		}
		var _this10 = this.binops;
		if(__map_reserved[">>>"] != null) {
			_this10.setReserved(">>>",function(e1111,e2111) {
				return me.expr(e1111) >>> me.expr(e2111);
			});
		} else {
			_this10.h[">>>"] = function(e1111,e2111) {
				return me.expr(e1111) >>> me.expr(e2111);
			};
		}
		var _this11 = this.binops;
		if(__map_reserved["=="] != null) {
			_this11.setReserved("==",function(e1121,e2121) {
				return me.expr(e1121) == me.expr(e2121);
			});
		} else {
			_this11.h["=="] = function(e1121,e2121) {
				return me.expr(e1121) == me.expr(e2121);
			};
		}
		var _this12 = this.binops;
		if(__map_reserved["!="] != null) {
			_this12.setReserved("!=",function(e1131,e2131) {
				return me.expr(e1131) != me.expr(e2131);
			});
		} else {
			_this12.h["!="] = function(e1131,e2131) {
				return me.expr(e1131) != me.expr(e2131);
			};
		}
		var _this13 = this.binops;
		if(__map_reserved[">="] != null) {
			_this13.setReserved(">=",function(e1141,e2141) {
				return me.expr(e1141) >= me.expr(e2141);
			});
		} else {
			_this13.h[">="] = function(e1141,e2141) {
				return me.expr(e1141) >= me.expr(e2141);
			};
		}
		var _this14 = this.binops;
		if(__map_reserved["<="] != null) {
			_this14.setReserved("<=",function(e1151,e2151) {
				return me.expr(e1151) <= me.expr(e2151);
			});
		} else {
			_this14.h["<="] = function(e1151,e2151) {
				return me.expr(e1151) <= me.expr(e2151);
			};
		}
		var _this15 = this.binops;
		if(__map_reserved[">"] != null) {
			_this15.setReserved(">",function(e1161,e2161) {
				return me.expr(e1161) > me.expr(e2161);
			});
		} else {
			_this15.h[">"] = function(e1161,e2161) {
				return me.expr(e1161) > me.expr(e2161);
			};
		}
		var _this16 = this.binops;
		if(__map_reserved["<"] != null) {
			_this16.setReserved("<",function(e1171,e2171) {
				return me.expr(e1171) < me.expr(e2171);
			});
		} else {
			_this16.h["<"] = function(e1171,e2171) {
				return me.expr(e1171) < me.expr(e2171);
			};
		}
		var _this17 = this.binops;
		if(__map_reserved["||"] != null) {
			_this17.setReserved("||",function(e1181,e2181) {
				if(me.expr(e1181) != true) {
					return me.expr(e2181) == true;
				} else {
					return true;
				}
			});
		} else {
			_this17.h["||"] = function(e1181,e2181) {
				if(me.expr(e1181) != true) {
					return me.expr(e2181) == true;
				} else {
					return true;
				}
			};
		}
		var _this18 = this.binops;
		if(__map_reserved["&&"] != null) {
			_this18.setReserved("&&",function(e1191,e2191) {
				if(me.expr(e1191) == true) {
					return me.expr(e2191) == true;
				} else {
					return false;
				}
			});
		} else {
			_this18.h["&&"] = function(e1191,e2191) {
				if(me.expr(e1191) == true) {
					return me.expr(e2191) == true;
				} else {
					return false;
				}
			};
		}
		var _this19 = this.binops;
		var value = $bind(this,this.assign);
		if(__map_reserved["="] != null) {
			_this19.setReserved("=",value);
		} else {
			_this19.h["="] = value;
		}
		var _this20 = this.binops;
		if(__map_reserved["..."] != null) {
			_this20.setReserved("...",function(e1201,e2201) {
				return new IntIterator(me.expr(e1201),me.expr(e2201));
			});
		} else {
			_this20.h["..."] = function(e1201,e2201) {
				return new IntIterator(me.expr(e1201),me.expr(e2201));
			};
		}
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v11,v21) {
			return v11 - v21;
		});
		this.assignOp("*=",function(v12,v22) {
			return v12 * v22;
		});
		this.assignOp("/=",function(v13,v23) {
			return v13 / v23;
		});
		this.assignOp("%=",function(v14,v24) {
			return v14 % v24;
		});
		this.assignOp("&=",function(v15,v25) {
			return v15 & v25;
		});
		this.assignOp("|=",function(v16,v26) {
			return v16 | v26;
		});
		this.assignOp("^=",function(v17,v27) {
			return v17 ^ v27;
		});
		this.assignOp("<<=",function(v18,v28) {
			return v18 << v28;
		});
		this.assignOp(">>=",function(v19,v29) {
			return v19 >> v29;
		});
		this.assignOp(">>>=",function(v110,v210) {
			return v110 >>> v210;
		});
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		switch(e1[1]) {
		case 1:
			var id = e1[2];
			var l = this.locals.get(id);
			if(l == null) {
				this.variables.set(id,v);
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1[3];
			var e = e1[2];
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var index = e1[3];
			var e3 = e1[2];
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			var e4 = hscript_Error.EInvalidOp("=");
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		var _this = this.binops;
		if(__map_reserved[op] != null) {
			_this.setReserved(op,function(e11,e21) {
				return me.evalAssignOp(op,fop,e11,e21);
			});
		} else {
			_this.h[op] = function(e11,e21) {
				return me.evalAssignOp(op,fop,e11,e21);
			};
		}
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		switch(e1[1]) {
		case 1:
			var id = e1[2];
			var l = this.locals.get(id);
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				this.variables.set(id,v);
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1[3];
			var e = e1[2];
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var index = e1[3];
			var e3 = e1[2];
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index1),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				v = fop(arr[index1],this.expr(e2));
				arr[index1] = v;
			}
			break;
		default:
			var e4 = hscript_Error.EInvalidOp(op);
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		switch(e[1]) {
		case 1:
			var id = e[2];
			var l = this.locals.get(id);
			var v = l == null ? this.variables.get(id) : l.r;
			if(prefix) {
				v += delta;
				if(l == null) {
					this.variables.set(id,v);
				} else {
					l.r = v;
				}
			} else if(l == null) {
				this.variables.set(id,v + delta);
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			var f = e[3];
			var e1 = e[2];
			var obj = this.expr(e1);
			var v1 = this.get(obj,f);
			if(prefix) {
				v1 += delta;
				this.set(obj,f,v1);
			} else {
				this.set(obj,f,v1 + delta);
			}
			return v1;
		case 16:
			var index = e[3];
			var e2 = e[2];
			var arr = this.expr(e2);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				var v2 = (js_Boot.__cast(arr , haxe_IMap)).get(index1);
				if(prefix) {
					v2 += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2 + delta);
				}
				return v2;
			} else {
				var v3 = arr[index1];
				if(prefix) {
					v3 += delta;
					arr[index1] = v3;
				} else {
					arr[index1] = v3 + delta;
				}
				return v3;
			}
			break;
		default:
			var e3 = hscript_Error.EInvalidOp(delta > 0 ? "++" : "--");
			throw new js__$Boot_HaxeError(e3);
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			if( js_Boot.__instanceof(e1,hscript__$Interp_Stop) ) {
				switch(e1[1]) {
				case 0:
					throw new js__$Boot_HaxeError("Invalid break");
					break;
				case 1:
					throw new js__$Boot_HaxeError("Invalid continue");
					break;
				case 2:
					var v = this.returnValue;
					this.returnValue = null;
					return v;
				}
			} else throw(e1);
		}
	}
	,duplicate: function(h) {
		var h2 = new haxe_ds_StringMap();
		var k = h.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var value = __map_reserved[k1] != null ? h.getReserved(k1) : h.h[k1];
			if(__map_reserved[k1] != null) {
				h2.setReserved(k1,value);
			} else {
				h2.h[k1] = value;
			}
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			var key = d.n;
			var value = d.old;
			var _this = this.locals;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,value);
			} else {
				_this.h[key] = value;
			}
		}
	}
	,edef: function(e) {
		return e;
	}
	,error: function(e,rethrow) {
		if(rethrow == null) {
			rethrow = false;
		}
		if(rethrow) {
			throw new js__$Boot_HaxeError(e);
		} else {
			throw new js__$Boot_HaxeError(e);
		}
	}
	,rethrow: function(e) {
		throw js__$Boot_HaxeError.wrap(e);
	}
	,resolve: function(id) {
		var _this = this.locals;
		var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(l != null) {
			return l.r;
		}
		var _this1 = this.variables;
		var v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
		var tmp;
		if(v == null) {
			var _this2 = this.variables;
			tmp = !(__map_reserved[id] != null ? _this2.existsReserved(id) : _this2.h.hasOwnProperty(id));
		} else {
			tmp = false;
		}
		if(tmp) {
			var e = hscript_Error.EUnknownVariable(id);
			throw new js__$Boot_HaxeError(e);
		}
		return v;
	}
	,expr: function(e) {
		var _gthis = this;
		switch(e[1]) {
		case 0:
			var c = e[2];
			switch(c[1]) {
			case 0:
				var v = c[2];
				return v;
			case 1:
				var f = c[2];
				return f;
			case 2:
				var s = c[2];
				return s;
			}
			break;
		case 1:
			var id = e[2];
			return this.resolve(id);
		case 2:
			var e1 = e[4];
			var n = e[2];
			this.declared.push({ n : n, old : this.locals.get(n)});
			this.locals.set(n,{ r : e1 == null ? null : this.expr(e1)});
			return null;
		case 3:
			var e2 = e[2];
			return this.expr(e2);
		case 4:
			var exprs = e[2];
			var old = this.declared.length;
			var v1 = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e3 = exprs[_g];
				++_g;
				v1 = this.expr(e3);
			}
			this.restore(old);
			return v1;
		case 5:
			var f1 = e[3];
			var e4 = e[2];
			return this.get(this.expr(e4),f1);
		case 6:
			var e21 = e[4];
			var e11 = e[3];
			var op = e[2];
			var fop = this.binops.get(op);
			if(fop == null) {
				var e5 = hscript_Error.EInvalidOp(op);
				throw new js__$Boot_HaxeError(e5);
			}
			return fop(e11,e21);
		case 7:
			var e6 = e[4];
			var prefix = e[3];
			var op1 = e[2];
			switch(op1) {
			case "!":
				return this.expr(e6) != true;
			case "++":
				return this.increment(e6,prefix,1);
			case "-":
				return -this.expr(e6);
			case "--":
				return this.increment(e6,prefix,-1);
			case "~":
				return ~this.expr(e6);
			default:
				var e7 = hscript_Error.EInvalidOp(op1);
				throw new js__$Boot_HaxeError(e7);
			}
			break;
		case 8:
			var params = e[3];
			var e8 = e[2];
			var args = [];
			var _g1 = 0;
			while(_g1 < params.length) {
				var p = params[_g1];
				++_g1;
				args.push(this.expr(p));
			}
			if(e8[1] == 5) {
				var f2 = e8[3];
				var e9 = e8[2];
				var obj = this.expr(e9);
				if(obj == null) {
					var e10 = hscript_Error.EInvalidAccess(f2);
					throw new js__$Boot_HaxeError(e10);
				}
				return this.fcall(obj,f2,args);
			} else {
				return this.call(null,this.expr(e8),args);
			}
			break;
		case 9:
			var e22 = e[4];
			var e12 = e[3];
			var econd = e[2];
			if(this.expr(econd) == true) {
				return this.expr(e12);
			} else if(e22 == null) {
				return null;
			} else {
				return this.expr(e22);
			}
			break;
		case 10:
			var e13 = e[3];
			var econd1 = e[2];
			this.whileLoop(econd1,e13);
			return null;
		case 11:
			var e14 = e[4];
			var it = e[3];
			var v2 = e[2];
			this.forLoop(v2,it,e14);
			return null;
		case 12:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SBreak);
			break;
		case 13:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SContinue);
			break;
		case 14:
			var name = e[4];
			var fexpr = e[3];
			var params1 = e[2];
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g2 = 0;
			while(_g2 < params1.length) {
				var p1 = params1[_g2];
				++_g2;
				if(p1.opt) {
					hasOpt = true;
				} else {
					minParams += 1;
				}
			}
			var f3 = function(args1) {
				if(args1.length != params1.length) {
					if(args1.length < minParams) {
						var str = "Invalid number of parameters. Got " + args1.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						throw new js__$Boot_HaxeError(str);
					}
					var args2 = [];
					var extraParams = args1.length - minParams;
					var pos = 0;
					var _g3 = 0;
					while(_g3 < params1.length) {
						var p2 = params1[_g3];
						++_g3;
						if(p2.opt) {
							if(extraParams > 0) {
								args2.push(args1[pos++]);
								--extraParams;
							} else {
								args2.push(null);
							}
						} else {
							args2.push(args1[pos++]);
						}
					}
					args1 = args2;
				}
				var old1 = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g11 = 0;
				var _g4 = params1.length;
				while(_g11 < _g4) {
					var i = _g11++;
					me.locals.set(params1[i].name,{ r : args1[i]});
				}
				var r = null;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( e15 ) {
						if (e15 instanceof js__$Boot_HaxeError) e15 = e15.val;
						me.locals = old1;
						me.depth = depth;
						throw js__$Boot_HaxeError.wrap(e15);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				me.locals = old1;
				me.depth = depth;
				return r;
			};
			var f4 = Reflect.makeVarArgs(f3);
			if(name != null) {
				if(this.depth == 0) {
					this.variables.set(name,f4);
				} else {
					var tmp = this.declared;
					var tmp1 = this.locals.get(name);
					tmp.push({ n : name, old : tmp1});
					var ref = { r : f4};
					this.locals.set(name,ref);
					if(__map_reserved[name] != null) {
						capturedLocals.setReserved(name,ref);
					} else {
						capturedLocals.h[name] = ref;
					}
				}
			}
			return f4;
		case 15:
			var e16 = e[2];
			this.returnValue = e16 == null ? null : this.expr(e16);
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SReturn);
			break;
		case 16:
			var index = e[3];
			var e17 = e[2];
			var arr = this.expr(e17);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index1);
			} else {
				return arr[index1];
			}
			break;
		case 17:
			var arr1 = e[2];
			var tmp2;
			if(arr1.length > 0) {
				var _g5 = arr1[0];
				if(_g5[1] == 6) {
					if(_g5[2] == "=>") {
						tmp2 = true;
					} else {
						tmp2 = false;
					}
				} else {
					tmp2 = false;
				}
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				var isAllString = true;
				var isAllInt = true;
				var isAllObject = true;
				var isAllEnum = true;
				var keys = [];
				var values = [];
				var _g12 = 0;
				while(_g12 < arr1.length) {
					var e18 = arr1[_g12];
					++_g12;
					if(e18[1] == 6) {
						if(e18[2] == "=>") {
							var eValue = e18[4];
							var eKey = e18[3];
							var key = this.expr(eKey);
							var value = this.expr(eValue);
							if(isAllString) {
								isAllString = typeof(key) == "string";
							} else {
								isAllString = false;
							}
							if(isAllInt) {
								if(typeof(key) == "number") {
									isAllInt = ((key | 0) === key);
								} else {
									isAllInt = false;
								}
							} else {
								isAllInt = false;
							}
							if(isAllObject) {
								isAllObject = Reflect.isObject(key);
							} else {
								isAllObject = false;
							}
							if(isAllEnum) {
								isAllEnum = Reflect.isEnumValue(key);
							} else {
								isAllEnum = false;
							}
							keys.push(key);
							values.push(value);
						} else {
							throw new js__$Boot_HaxeError("=> expected");
						}
					} else {
						throw new js__$Boot_HaxeError("=> expected");
					}
				}
				var map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw new js__$Boot_HaxeError("Inconsistent key types");
				}
				var _g21 = 0;
				var _g13 = keys.length;
				while(_g21 < _g13) {
					var n1 = _g21++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n1],values[n1]);
				}
				return map;
			} else {
				var a = [];
				var _g14 = 0;
				while(_g14 < arr1.length) {
					var e19 = arr1[_g14];
					++_g14;
					a.push(this.expr(e19));
				}
				return a;
			}
			break;
		case 18:
			var params2 = e[3];
			var cl = e[2];
			var a1 = [];
			var _g6 = 0;
			while(_g6 < params2.length) {
				var e20 = params2[_g6];
				++_g6;
				a1.push(this.expr(e20));
			}
			return this.cnew(cl,a1);
		case 19:
			var e23 = e[2];
			throw js__$Boot_HaxeError.wrap(this.expr(e23));
			break;
		case 20:
			var ecatch = e[5];
			var n2 = e[3];
			var e24 = e[2];
			var old2 = this.declared.length;
			var oldTry = this.inTry;
			try {
				this.inTry = true;
				var v3 = this.expr(e24);
				this.restore(old2);
				this.inTry = oldTry;
				return v3;
			} catch( $e0 ) {
				if ($e0 instanceof js__$Boot_HaxeError) $e0 = $e0.val;
				if( js_Boot.__instanceof($e0,hscript__$Interp_Stop) ) {
					var err = $e0;
					this.inTry = oldTry;
					throw new js__$Boot_HaxeError(err);
				} else {
				var err1 = $e0;
				this.restore(old2);
				this.inTry = oldTry;
				this.declared.push({ n : n2, old : this.locals.get(n2)});
				this.locals.set(n2,{ r : err1});
				var v4 = this.expr(ecatch);
				this.restore(old2);
				return v4;
				}
			}
			break;
		case 21:
			var fl = e[2];
			var o = { };
			var _g7 = 0;
			while(_g7 < fl.length) {
				var f5 = fl[_g7];
				++_g7;
				this.set(o,f5.name,this.expr(f5.e));
			}
			return o;
		case 22:
			var e25 = e[4];
			var e110 = e[3];
			var econd2 = e[2];
			if(this.expr(econd2) == true) {
				return this.expr(e110);
			} else {
				return this.expr(e25);
			}
			break;
		case 23:
			var def = e[4];
			var cases = e[3];
			var e26 = e[2];
			var val = this.expr(e26);
			var match = false;
			var _g8 = 0;
			while(_g8 < cases.length) {
				var c1 = cases[_g8];
				++_g8;
				var _g15 = 0;
				var _g22 = c1.values;
				while(_g15 < _g22.length) {
					var v5 = _g22[_g15];
					++_g15;
					if(this.expr(v5) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c1.expr);
					break;
				}
			}
			if(!match) {
				if(def == null) {
					val = null;
				} else {
					val = this.expr(def);
				}
			}
			return val;
		case 24:
			var e27 = e[3];
			var econd3 = e[2];
			this.doWhileLoop(econd3,e27);
			return null;
		case 25:
			var e28 = e[4];
			return this.expr(e28);
		}
	}
	,doWhileLoop: function(econd,e) {
		var old = this.declared.length;
		try {
			while(true) {
				try {
					this.expr(e);
				} catch( err ) {
					if (err instanceof js__$Boot_HaxeError) err = err.val;
					if( js_Boot.__instanceof(err,hscript__$Interp_Stop) ) {
						switch(err[1]) {
						case 0:
							throw "__break__";
							break;
						case 1:
							break;
						case 2:
							throw new js__$Boot_HaxeError(err);
							break;
						}
					} else throw(err);
				}
				if(!(this.expr(econd) == true)) {
					throw "__break__";
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		this.restore(old);
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		try {
			while(this.expr(econd) == true) try {
				this.expr(e);
			} catch( err ) {
				if (err instanceof js__$Boot_HaxeError) err = err.val;
				if( js_Boot.__instanceof(err,hscript__$Interp_Stop) ) {
					switch(err[1]) {
					case 0:
						throw "__break__";
						break;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err);
						break;
					}
				} else throw(err);
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $iterator(v)();
		} catch( e ) {
		}
		if(v.hasNext == null || v.next == null) {
			var e1 = hscript_Error.EInvalidIterator(v);
			throw new js__$Boot_HaxeError(e1);
		}
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		var _this = this.locals;
		this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
		var it1 = this.makeIterator(this.expr(it));
		try {
			while(it1.hasNext()) {
				var this1 = this.locals;
				var value = { r : it1.next()};
				var _this1 = this1;
				if(__map_reserved[n] != null) {
					_this1.setReserved(n,value);
				} else {
					_this1.h[n] = value;
				}
				try {
					this.expr(e);
				} catch( err ) {
					if (err instanceof js__$Boot_HaxeError) err = err.val;
					if( js_Boot.__instanceof(err,hscript__$Interp_Stop) ) {
						switch(err[1]) {
						case 0:
							throw "__break__";
							break;
						case 1:
							break;
						case 2:
							throw new js__$Boot_HaxeError(err);
							break;
						}
					} else throw(err);
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		this.restore(old);
	}
	,isMap: function(o) {
		return js_Boot.__instanceof(o,haxe_IMap);
	}
	,getMapValue: function(map,key) {
		return (js_Boot.__cast(map , haxe_IMap)).get(key);
	}
	,setMapValue: function(map,key,value) {
		(js_Boot.__cast(map , haxe_IMap)).set(key,value);
	}
	,get: function(o,f) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = Type.resolveClass(cl);
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
	,__class__: hscript_Interp
};
var hscript_Token = $hxClasses["hscript.Token"] = { __ename__ : ["hscript","Token"], __constructs__ : ["TEof","TConst","TId","TOp","TPOpen","TPClose","TBrOpen","TBrClose","TDot","TComma","TSemicolon","TBkOpen","TBkClose","TQuestion","TDoubleDot","TMeta","TPrepro"] };
hscript_Token.TEof = ["TEof",0];
hscript_Token.TEof.toString = $estr;
hscript_Token.TEof.__enum__ = hscript_Token;
hscript_Token.TConst = function(c) { var $x = ["TConst",1,c]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
hscript_Token.TId = function(s) { var $x = ["TId",2,s]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
hscript_Token.TOp = function(s) { var $x = ["TOp",3,s]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
hscript_Token.TPOpen = ["TPOpen",4];
hscript_Token.TPOpen.toString = $estr;
hscript_Token.TPOpen.__enum__ = hscript_Token;
hscript_Token.TPClose = ["TPClose",5];
hscript_Token.TPClose.toString = $estr;
hscript_Token.TPClose.__enum__ = hscript_Token;
hscript_Token.TBrOpen = ["TBrOpen",6];
hscript_Token.TBrOpen.toString = $estr;
hscript_Token.TBrOpen.__enum__ = hscript_Token;
hscript_Token.TBrClose = ["TBrClose",7];
hscript_Token.TBrClose.toString = $estr;
hscript_Token.TBrClose.__enum__ = hscript_Token;
hscript_Token.TDot = ["TDot",8];
hscript_Token.TDot.toString = $estr;
hscript_Token.TDot.__enum__ = hscript_Token;
hscript_Token.TComma = ["TComma",9];
hscript_Token.TComma.toString = $estr;
hscript_Token.TComma.__enum__ = hscript_Token;
hscript_Token.TSemicolon = ["TSemicolon",10];
hscript_Token.TSemicolon.toString = $estr;
hscript_Token.TSemicolon.__enum__ = hscript_Token;
hscript_Token.TBkOpen = ["TBkOpen",11];
hscript_Token.TBkOpen.toString = $estr;
hscript_Token.TBkOpen.__enum__ = hscript_Token;
hscript_Token.TBkClose = ["TBkClose",12];
hscript_Token.TBkClose.toString = $estr;
hscript_Token.TBkClose.__enum__ = hscript_Token;
hscript_Token.TQuestion = ["TQuestion",13];
hscript_Token.TQuestion.toString = $estr;
hscript_Token.TQuestion.__enum__ = hscript_Token;
hscript_Token.TDoubleDot = ["TDoubleDot",14];
hscript_Token.TDoubleDot.toString = $estr;
hscript_Token.TDoubleDot.__enum__ = hscript_Token;
hscript_Token.TMeta = function(s) { var $x = ["TMeta",15,s]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
hscript_Token.TPrepro = function(s) { var $x = ["TPrepro",16,s]; $x.__enum__ = hscript_Token; $x.toString = $estr; return $x; };
hscript_Token.__empty_constructs__ = [hscript_Token.TEof,hscript_Token.TPOpen,hscript_Token.TPClose,hscript_Token.TBrOpen,hscript_Token.TBrClose,hscript_Token.TDot,hscript_Token.TComma,hscript_Token.TSemicolon,hscript_Token.TBkOpen,hscript_Token.TBkClose,hscript_Token.TQuestion,hscript_Token.TDoubleDot];
var hscript_Parser = function() {
	this.uid = 0;
	this.preprocesorValues = new haxe_ds_StringMap();
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	this.unops = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g = priorities.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g2 = 0;
		var _g3 = priorities[i];
		while(_g2 < _g3.length) {
			var x = _g3[_g2];
			++_g2;
			var _this = this.opPriority;
			if(__map_reserved[x] != null) {
				_this.setReserved(x,i);
			} else {
				_this.h[x] = i;
			}
			if(i == 9) {
				var _this1 = this.opRightAssoc;
				if(__map_reserved[x] != null) {
					_this1.setReserved(x,true);
				} else {
					_this1.h[x] = true;
				}
			}
		}
	}
	var _g4 = 0;
	var _g11 = ["!","++","--","-","~"];
	while(_g4 < _g11.length) {
		var x1 = _g11[_g4];
		++_g4;
		var _this2 = this.unops;
		var value = x1 == "++" || x1 == "--";
		if(__map_reserved[x1] != null) {
			_this2.setReserved(x1,value);
		} else {
			_this2.h[x1] = value;
		}
	}
};
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = ["hscript","Parser"];
hscript_Parser.prototype = {
	line: null
	,opChars: null
	,identChars: null
	,opPriority: null
	,opRightAssoc: null
	,unops: null
	,preprocesorValues: null
	,allowJSON: null
	,allowTypes: null
	,allowMetadata: null
	,input: null
	,'char': null
	,ops: null
	,idents: null
	,uid: null
	,tokens: null
	,error: function(err,pmin,pmax) {
		throw new js__$Boot_HaxeError(err);
	}
	,invalidChar: function(c) {
		throw new js__$Boot_HaxeError(hscript_Error.EInvalidChar(c));
	}
	,initParser: function(origin) {
		this.preprocStack = [];
		this.tokens = new haxe_ds_GenericStack();
		this["char"] = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		var _g1 = 0;
		var _g = this.opChars.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g11 = 0;
		var _g2 = this.identChars.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.idents[HxOverrides.cca(this.identChars,i1)] = true;
		}
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		return this.parse(new haxe_io_StringInput(s),origin);
	}
	,parse: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			return hscript_Expr.EBlock(a);
		}
	}
	,unexpected: function(tk) {
		throw new js__$Boot_HaxeError(hscript_Error.EUnexpected(this.tokenString(tk)));
	}
	,push: function(tk) {
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,ensureToken: function(tk) {
		var t = this.token();
		if(!Type.enumEq(t,tk)) {
			this.unexpected(t);
		}
	}
	,maybe: function(tk) {
		var t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(t,_this.head);
		return false;
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk[1] == 2) {
			var id = tk[2];
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e;
	}
	,pmin: function(e) {
		return 0;
	}
	,pmax: function(e) {
		return 0;
	}
	,mk: function(e,pmin,pmax) {
		return e;
	}
	,isBlock: function(e) {
		switch(e[1]) {
		case 2:
			var e1 = e[4];
			var t = e[3];
			if(e1 != null) {
				return this.isBlock(e1);
			} else if(t != null) {
				if(t == null) {
					return false;
				} else if(t[1] == 2) {
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 6:
			var e2 = e[4];
			return this.isBlock(e2);
		case 7:
			var e3 = e[4];
			var prefix = e[3];
			if(!prefix) {
				return this.isBlock(e3);
			} else {
				return false;
			}
			break;
		case 9:
			var e21 = e[4];
			var e11 = e[3];
			if(e21 != null) {
				return this.isBlock(e21);
			} else {
				return this.isBlock(e11);
			}
			break;
		case 10:
			var e4 = e[3];
			return this.isBlock(e4);
		case 11:
			var e5 = e[4];
			return this.isBlock(e5);
		case 14:
			var e6 = e[3];
			return this.isBlock(e6);
		case 15:
			var e7 = e[2];
			if(e7 != null) {
				return this.isBlock(e7);
			} else {
				return false;
			}
			break;
		case 20:
			var e8 = e[5];
			return this.isBlock(e8);
		case 4:case 21:case 23:
			return true;
		case 24:
			var e9 = e[3];
			return this.isBlock(e9);
		case 25:
			var e10 = e[4];
			return this.isBlock(e10);
		default:
			return false;
		}
	}
	,parseFullExpr: function(exprs) {
		var e = this.parseExpr();
		exprs.push(e);
		var tk = this.token();
		while(tk == hscript_Token.TComma && e[1] == 2) {
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				this.unexpected(tk);
			}
		}
	}
	,parseObject: function(p1) {
		var fl = [];
		try {
			while(true) {
				var tk = this.token();
				var id = null;
				switch(tk[1]) {
				case 1:
					var c = tk[2];
					if(!this.allowJSON) {
						this.unexpected(tk);
					}
					if(c[1] == 2) {
						var s = c[2];
						id = s;
					} else {
						this.unexpected(tk);
					}
					break;
				case 2:
					var i = tk[2];
					id = i;
					break;
				case 7:
					throw "__break__";
					break;
				default:
					this.unexpected(tk);
				}
				var t = this.token();
				if(t != hscript_Token.TDoubleDot) {
					this.unexpected(t);
				}
				fl.push({ name : id, e : this.parseExpr()});
				tk = this.token();
				switch(tk[1]) {
				case 7:
					throw "__break__";
					break;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		return this.parseExprNext(hscript_Expr.EObject(fl));
	}
	,parseExpr: function() {
		var tk = this.token();
		switch(tk[1]) {
		case 1:
			var c = tk[2];
			return this.parseExprNext(hscript_Expr.EConst(c));
		case 2:
			var id = tk[2];
			var e = this.parseStructure(id);
			if(e == null) {
				e = hscript_Expr.EIdent(id);
			}
			return this.parseExprNext(e);
		case 3:
			var op = tk[2];
			if(this.unops.exists(op)) {
				var start = 0;
				var e1 = this.parseExpr();
				if(op == "-") {
					if(e1[1] == 0) {
						switch(e1[2][1]) {
						case 0:
							var i = e1[2][2];
							return hscript_Expr.EConst(hscript_Const.CInt(-i));
						case 1:
							var f = e1[2][2];
							return hscript_Expr.EConst(hscript_Const.CFloat(-f));
						default:
						}
					}
				}
				return this.makeUnop(op,e1);
			}
			return this.unexpected(tk);
		case 4:
			var e2 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			return this.parseExprNext(hscript_Expr.EParent(e2));
		case 6:
			tk = this.token();
			switch(tk[1]) {
			case 1:
				var c1 = tk[2];
				if(this.allowJSON) {
					if(c1[1] == 2) {
						var tk2 = this.token();
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk2,_this.head);
						var _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
						if(tk2[1] == 14) {
							return this.parseExprNext(this.parseObject(0));
						}
					} else {
						var _this2 = this.tokens;
						_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
					}
				} else {
					var _this3 = this.tokens;
					_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
				}
				break;
			case 2:
				var tk21 = this.token();
				var _this4 = this.tokens;
				_this4.head = new haxe_ds_GenericCell(tk21,_this4.head);
				var _this5 = this.tokens;
				_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
				if(tk21[1] == 14) {
					return this.parseExprNext(this.parseObject(0));
				}
				break;
			case 7:
				return this.parseExprNext(hscript_Expr.EObject([]));
			default:
				var _this6 = this.tokens;
				_this6.head = new haxe_ds_GenericCell(tk,_this6.head);
			}
			var a = [];
			while(true) {
				this.parseFullExpr(a);
				tk = this.token();
				if(tk == hscript_Token.TBrClose) {
					break;
				}
				var _this7 = this.tokens;
				_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
			}
			return hscript_Expr.EBlock(a);
		case 11:
			var a1 = [];
			tk = this.token();
			while(tk != hscript_Token.TBkClose) {
				var _this8 = this.tokens;
				_this8.head = new haxe_ds_GenericCell(tk,_this8.head);
				a1.push(this.parseExpr());
				tk = this.token();
				if(tk == hscript_Token.TComma) {
					tk = this.token();
				}
			}
			if(a1.length == 1) {
				var _g = a1[0];
				switch(_g[1]) {
				case 10:case 11:case 24:
					var tmp = "__a_" + this.uid++;
					var e3 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a1[0]),hscript_Expr.EIdent(tmp)]);
					return this.parseExprNext(e3);
				default:
				}
			}
			return this.parseExprNext(hscript_Expr.EArrayDecl(a1));
		case 15:
			var id1 = tk[2];
			if(this.allowMetadata) {
				var args = this.parseMetaArgs();
				return hscript_Expr.EMeta(id1,args,this.parseExpr());
			} else {
				return this.unexpected(tk);
			}
			break;
		default:
			return this.unexpected(tk);
		}
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			try {
				while(true) {
					args.push(this.parseExpr());
					var _g = this.token();
					switch(_g[1]) {
					case 5:
						throw "__break__";
						break;
					case 9:
						break;
					default:
						var tk1 = _g;
						this.unexpected(tk1);
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		var edef;
		switch(e[1]) {
		case 3:
			var e2 = e[2];
			edef = hscript_Expr.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			if(e[2].length == 1) {
				var e1 = e[2][0];
				edef = hscript_Expr.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			}
			break;
		case 9:
			var e21 = e[4];
			var e11 = e[3];
			var cond = e[2];
			if(e21 == null) {
				edef = hscript_Expr.EIf(cond,this.mapCompr(tmp,e11),null);
			} else {
				edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			}
			break;
		case 10:
			var e22 = e[3];
			var cond1 = e[2];
			edef = hscript_Expr.EWhile(cond1,this.mapCompr(tmp,e22));
			break;
		case 11:
			var e23 = e[4];
			var it = e[3];
			var v = e[2];
			edef = hscript_Expr.EFor(v,it,this.mapCompr(tmp,e23));
			break;
		case 24:
			var e24 = e[3];
			var cond2 = e[2];
			edef = hscript_Expr.EDoWhile(cond2,this.mapCompr(tmp,e24));
			break;
		default:
			edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
		}
		return edef;
	}
	,makeUnop: function(op,e) {
		switch(e[1]) {
		case 6:
			var e2 = e[4];
			var e1 = e[3];
			var bop = e[2];
			return hscript_Expr.EBinop(bop,this.makeUnop(op,e1),e2);
		case 22:
			var e3 = e[4];
			var e21 = e[3];
			var e11 = e[2];
			return hscript_Expr.ETernary(this.makeUnop(op,e11),e21,e3);
		default:
			return hscript_Expr.EUnop(op,true,e);
		}
	}
	,makeBinop: function(op,e1,e) {
		switch(e[1]) {
		case 6:
			var e3 = e[4];
			var e2 = e[3];
			var op2 = e[2];
			if(this.opPriority.get(op) <= this.opPriority.get(op2) && !this.opRightAssoc.exists(op)) {
				return hscript_Expr.EBinop(op2,this.makeBinop(op,e1,e2),e3);
			} else {
				return hscript_Expr.EBinop(op,e1,e);
			}
			break;
		case 22:
			var e4 = e[4];
			var e31 = e[3];
			var e21 = e[2];
			if(this.opRightAssoc.exists(op)) {
				return hscript_Expr.EBinop(op,e1,e);
			} else {
				return hscript_Expr.ETernary(this.makeBinop(op,e1,e21),e31,e4);
			}
			break;
		default:
			return hscript_Expr.EBinop(op,e1,e);
		}
	}
	,parseStructure: function(id) {
		switch(id) {
		case "break":
			return hscript_Expr.EBreak;
		case "continue":
			return hscript_Expr.EContinue;
		case "do":
			var e = this.parseExpr();
			var tk = this.token();
			if(tk[1] == 2) {
				if(tk[2] != "while") {
					this.unexpected(tk);
				}
			} else {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			return hscript_Expr.EDoWhile(econd,e);
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t1 = this.token();
			if(!Type.enumEq(t1,hscript_Token.TId("in"))) {
				this.unexpected(t1);
			}
			var eiter = this.parseExpr();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			var e1 = this.parseExpr();
			return hscript_Expr.EFor(vname,eiter,e1);
		case "function":
			var tk1 = this.token();
			var name = null;
			if(tk1[1] == 2) {
				var id1 = tk1[2];
				name = id1;
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk1,_this.head);
			}
			var inf = this.parseFunctionDecl();
			var e2 = inf.body;
			var pmax = 0;
			return hscript_Expr.EFunction(inf.args,inf.body,name,inf.ret);
		case "if":
			var t3 = this.token();
			if(t3 != hscript_Token.TPOpen) {
				this.unexpected(t3);
			}
			var cond = this.parseExpr();
			var t4 = this.token();
			if(t4 != hscript_Token.TPClose) {
				this.unexpected(t4);
			}
			var e11 = this.parseExpr();
			var e21 = null;
			var semic = false;
			var tk2 = this.token();
			if(tk2 == hscript_Token.TSemicolon) {
				semic = true;
				tk2 = this.token();
			}
			if(Type.enumEq(tk2,hscript_Token.TId("else"))) {
				e21 = this.parseExpr();
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk2,_this1.head);
				if(semic) {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(hscript_Token.TSemicolon,_this2.head);
				}
			}
			return hscript_Expr.EIf(cond,e11,e21);
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			var a = [];
			a.push(this.getIdent());
			var next = true;
			while(next) {
				var tk3 = this.token();
				switch(tk3[1]) {
				case 4:
					next = false;
					break;
				case 8:
					a.push(this.getIdent());
					break;
				default:
					this.unexpected(tk3);
				}
			}
			var args = this.parseExprList(hscript_Token.TPClose);
			return hscript_Expr.ENew(a.join("."),args);
		case "return":
			var tk4 = this.token();
			var _this3 = this.tokens;
			_this3.head = new haxe_ds_GenericCell(tk4,_this3.head);
			var e3 = tk4 == hscript_Token.TSemicolon ? null : this.parseExpr();
			return hscript_Expr.EReturn(e3);
		case "switch":
			var e4 = this.parseExpr();
			var def = null;
			var cases = [];
			var t5 = this.token();
			if(t5 != hscript_Token.TBrOpen) {
				this.unexpected(t5);
			}
			try {
				while(true) {
					var tk5 = this.token();
					switch(tk5[1]) {
					case 2:
						switch(tk5[2]) {
						case "case":
							var c = { values : [], expr : null};
							cases.push(c);
							try {
								while(true) {
									var e5 = this.parseExpr();
									c.values.push(e5);
									tk5 = this.token();
									switch(tk5[1]) {
									case 9:
										break;
									case 14:
										throw "__break__";
										break;
									default:
										this.unexpected(tk5);
									}
								}
							} catch( e ) { if( e != "__break__" ) throw e; }
							var exprs = [];
							try {
								while(true) {
									tk5 = this.token();
									var _this4 = this.tokens;
									_this4.head = new haxe_ds_GenericCell(tk5,_this4.head);
									switch(tk5[1]) {
									case 2:
										switch(tk5[2]) {
										case "case":case "default":
											throw "__break__";
											break;
										default:
											this.parseFullExpr(exprs);
										}
										break;
									case 7:
										throw "__break__";
										break;
									default:
										this.parseFullExpr(exprs);
									}
								}
							} catch( e ) { if( e != "__break__" ) throw e; }
							var tmp;
							if(exprs.length == 1) {
								tmp = exprs[0];
							} else if(exprs.length == 0) {
								tmp = hscript_Expr.EBlock([]);
							} else {
								var e6 = exprs[exprs.length - 1];
								var pmax1 = 0;
								tmp = hscript_Expr.EBlock(exprs);
							}
							c.expr = tmp;
							break;
						case "default":
							if(def != null) {
								this.unexpected(tk5);
							}
							var t6 = this.token();
							if(t6 != hscript_Token.TDoubleDot) {
								this.unexpected(t6);
							}
							var exprs1 = [];
							try {
								while(true) {
									tk5 = this.token();
									var _this5 = this.tokens;
									_this5.head = new haxe_ds_GenericCell(tk5,_this5.head);
									switch(tk5[1]) {
									case 2:
										switch(tk5[2]) {
										case "case":case "default":
											throw "__break__";
											break;
										default:
											this.parseFullExpr(exprs1);
										}
										break;
									case 7:
										throw "__break__";
										break;
									default:
										this.parseFullExpr(exprs1);
									}
								}
							} catch( e ) { if( e != "__break__" ) throw e; }
							if(exprs1.length == 1) {
								def = exprs1[0];
							} else if(exprs1.length == 0) {
								def = hscript_Expr.EBlock([]);
							} else {
								var e7 = exprs1[exprs1.length - 1];
								var pmax2 = 0;
								def = hscript_Expr.EBlock(exprs1);
							}
							break;
						default:
							this.unexpected(tk5);
						}
						break;
					case 7:
						throw "__break__";
						break;
					default:
						this.unexpected(tk5);
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			return hscript_Expr.ESwitch(e4,cases,def);
		case "throw":
			var e8 = this.parseExpr();
			return hscript_Expr.EThrow(e8);
		case "try":
			var e9 = this.parseExpr();
			var t7 = this.token();
			if(!Type.enumEq(t7,hscript_Token.TId("catch"))) {
				this.unexpected(t7);
			}
			var t8 = this.token();
			if(t8 != hscript_Token.TPOpen) {
				this.unexpected(t8);
			}
			var vname1 = this.getIdent();
			var t9 = this.token();
			if(t9 != hscript_Token.TDoubleDot) {
				this.unexpected(t9);
			}
			var t10 = null;
			if(this.allowTypes) {
				t10 = this.parseType();
			} else {
				var t11 = this.token();
				if(!Type.enumEq(t11,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t11);
				}
			}
			var t12 = this.token();
			if(t12 != hscript_Token.TPClose) {
				this.unexpected(t12);
			}
			var ec = this.parseExpr();
			return hscript_Expr.ETry(e9,vname1,t10,ec);
		case "var":
			var ident = this.getIdent();
			var tk6 = this.token();
			var t13 = null;
			if(tk6 == hscript_Token.TDoubleDot && this.allowTypes) {
				t13 = this.parseType();
				tk6 = this.token();
			}
			var e10 = null;
			if(Type.enumEq(tk6,hscript_Token.TOp("="))) {
				e10 = this.parseExpr();
			} else {
				var _this6 = this.tokens;
				_this6.head = new haxe_ds_GenericCell(tk6,_this6.head);
			}
			return hscript_Expr.EVar(ident,t13,e10);
		case "while":
			var econd1 = this.parseExpr();
			var e12 = this.parseExpr();
			return hscript_Expr.EWhile(econd1,e12);
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		switch(tk[1]) {
		case 3:
			var op = tk[2];
			if(this.unops.get(op)) {
				if(this.isBlock(e1) || e1[1] == 3) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
					return e1;
				}
				return this.parseExprNext(hscript_Expr.EUnop(op,false,e1));
			}
			return this.makeBinop(op,e1,this.parseExpr());
		case 4:
			return this.parseExprNext(hscript_Expr.ECall(e1,this.parseExprList(hscript_Token.TPClose)));
		case 8:
			var field = this.getIdent();
			return this.parseExprNext(hscript_Expr.EField(e1,field));
		case 11:
			var e2 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TBkClose) {
				this.unexpected(t);
			}
			return this.parseExprNext(hscript_Expr.EArray(e1,e2));
		case 13:
			var e21 = this.parseExpr();
			var t1 = this.token();
			if(t1 != hscript_Token.TDoubleDot) {
				this.unexpected(t1);
			}
			var e3 = this.parseExpr();
			return hscript_Expr.ETernary(e1,e21,e3);
		default:
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			return e1;
		}
	}
	,parseFunctionDecl: function() {
		var t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		var args = [];
		var tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var done = false;
			while(!done) {
				var name = null;
				var opt = false;
				if(tk[1] == 13) {
					opt = true;
					tk = this.token();
				}
				if(tk[1] == 2) {
					var id = tk[2];
					name = id;
				} else {
					this.unexpected(tk);
				}
				var arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				switch(tk[1]) {
				case 5:
					done = true;
					break;
				case 9:
					tk = this.token();
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		var ret = null;
		if(this.allowTypes) {
			tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	,parsePath: function() {
		var path = [this.getIdent()];
		while(true) {
			var t = this.token();
			if(t != hscript_Token.TDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	,parseType: function() {
		var t = this.token();
		switch(t[1]) {
		case 2:
			var v = t[2];
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(t,_this.head);
			var path = this.parsePath();
			var params = null;
			t = this.token();
			if(t[1] == 3) {
				var op = t[2];
				if(op == "<") {
					params = [];
					try {
						while(true) {
							params.push(this.parseType());
							t = this.token();
							switch(t[1]) {
							case 3:
								var op1 = t[2];
								if(op1 == ">") {
									throw "__break__";
								}
								if(HxOverrides.cca(op1,0) == 62) {
									var _this1 = this.tokens;
									_this1.head = new haxe_ds_GenericCell(hscript_Token.TOp(HxOverrides.substr(op1,1,null)),_this1.head);
									throw "__break__";
								}
								break;
							case 9:
								continue;
								break;
							default:
							}
							this.unexpected(t);
						}
					} catch( e ) { if( e != "__break__" ) throw e; }
				} else {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(t,_this2.head);
				}
			} else {
				var _this3 = this.tokens;
				_this3.head = new haxe_ds_GenericCell(t,_this3.head);
			}
			return this.parseTypeNext(hscript_CType.CTPath(path,params));
		case 4:
			var t1 = this.parseType();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			return this.parseTypeNext(hscript_CType.CTParent(t1));
		case 6:
			var fields = [];
			var meta = null;
			try {
				while(true) {
					t = this.token();
					switch(t[1]) {
					case 2:
						if(t[2] == "var") {
							var name = this.getIdent();
							var t3 = this.token();
							if(t3 != hscript_Token.TDoubleDot) {
								this.unexpected(t3);
							}
							fields.push({ name : name, t : this.parseType(), meta : meta});
							meta = null;
							var t4 = this.token();
							if(t4 != hscript_Token.TSemicolon) {
								this.unexpected(t4);
							}
						} else {
							var name1 = t[2];
							var t5 = this.token();
							if(t5 != hscript_Token.TDoubleDot) {
								this.unexpected(t5);
							}
							fields.push({ name : name1, t : this.parseType(), meta : meta});
							t = this.token();
							switch(t[1]) {
							case 7:
								throw "__break__";
								break;
							case 9:
								break;
							default:
								this.unexpected(t);
							}
						}
						break;
					case 7:
						throw "__break__";
						break;
					case 15:
						var name2 = t[2];
						if(meta == null) {
							meta = [];
						}
						meta.push({ name : name2, params : this.parseMetaArgs()});
						break;
					default:
						this.unexpected(t);
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			return this.parseTypeNext(hscript_CType.CTAnon(fields));
		default:
			return this.unexpected(t);
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk[1] == 3) {
			var op = tk[2];
			if(op != "->") {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				return t;
			}
		} else {
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			return t;
		}
		var t2 = this.parseType();
		if(t2[1] == 1) {
			var args = t2[2];
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk[1] != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
			}
		}
		return args;
	}
	,parseModule: function(content,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = new haxe_io_StringInput(content);
		this.allowTypes = true;
		this.allowMetadata = true;
		var decls = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			decls.push(this.parseModuleDecl());
		}
		return decls;
	}
	,parseMetadata: function() {
		var meta = [];
		while(true) {
			var tk = this.token();
			if(tk[1] == 15) {
				var name = tk[2];
				meta.push({ name : name, params : this.parseMetaArgs()});
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
		return meta;
	}
	,parseParams: function() {
		if(this.maybe(hscript_Token.TOp("<"))) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp("Unsupported class type parameters"));
		}
		return { };
	}
	,parseModuleDecl: function() {
		var meta = this.parseMetadata();
		var ident = this.getIdent();
		var isPrivate = false;
		var isExtern = false;
		try {
			while(true) {
				switch(ident) {
				case "extern":
					isExtern = true;
					break;
				case "private":
					isPrivate = true;
					break;
				default:
					throw "__break__";
				}
				ident = this.getIdent();
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		switch(ident) {
		case "class":
			var name = this.getIdent();
			var params = this.parseParams();
			var extend = null;
			var implement = [];
			try {
				while(true) {
					var t = this.token();
					if(t[1] == 2) {
						switch(t[2]) {
						case "extends":
							extend = this.parseType();
							break;
						case "implements":
							implement.push(this.parseType());
							break;
						default:
							var _this = this.tokens;
							_this.head = new haxe_ds_GenericCell(t,_this.head);
							throw "__break__";
						}
					} else {
						var _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(t,_this1.head);
						throw "__break__";
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			var fields = [];
			var t1 = this.token();
			if(t1 != hscript_Token.TBrOpen) {
				this.unexpected(t1);
			}
			while(!this.maybe(hscript_Token.TBrClose)) fields.push(this.parseField());
			return hscript_ModuleDecl.DClass({ name : name, meta : meta, params : params, extend : extend, implement : implement, fields : fields, isPrivate : isPrivate, isExtern : isExtern});
		case "import":
			var path = [this.getIdent()];
			var star = false;
			while(true) {
				var t2 = this.token();
				if(t2 != hscript_Token.TDot) {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(t2,_this2.head);
					break;
				}
				t2 = this.token();
				switch(t2[1]) {
				case 2:
					var id = t2[2];
					path.push(id);
					break;
				case 3:
					if(t2[2] == "*") {
						star = true;
					} else {
						this.unexpected(t2);
					}
					break;
				default:
					this.unexpected(t2);
				}
			}
			var t3 = this.token();
			if(t3 != hscript_Token.TSemicolon) {
				this.unexpected(t3);
			}
			return hscript_ModuleDecl.DImport(path,star);
		case "package":
			var path1 = this.parsePath();
			var t4 = this.token();
			if(t4 != hscript_Token.TSemicolon) {
				this.unexpected(t4);
			}
			return hscript_ModuleDecl.DPackage(path1);
		case "typedef":
			var name1 = this.getIdent();
			var params1 = this.parseParams();
			var t5 = this.token();
			if(!Type.enumEq(t5,hscript_Token.TOp("="))) {
				this.unexpected(t5);
			}
			var t6 = this.parseType();
			return hscript_ModuleDecl.DTypedef({ name : name1, meta : meta, params : params1, isPrivate : isPrivate, t : t6});
		default:
			this.unexpected(hscript_Token.TId(ident));
		}
		return null;
	}
	,parseField: function() {
		var meta = this.parseMetadata();
		var access = [];
		while(true) {
			var id = this.getIdent();
			switch(id) {
			case "function":
				var name = this.getIdent();
				var inf = this.parseFunctionDecl();
				return { name : name, meta : meta, access : access, kind : hscript_FieldKind.KFunction({ args : inf.args, expr : inf.body, ret : inf.ret})};
			case "inline":
				access.push(hscript_FieldAccess.AInline);
				break;
			case "macro":
				access.push(hscript_FieldAccess.AMacro);
				break;
			case "override":
				access.push(hscript_FieldAccess.AOverride);
				break;
			case "private":
				access.push(hscript_FieldAccess.APrivate);
				break;
			case "public":
				access.push(hscript_FieldAccess.APublic);
				break;
			case "static":
				access.push(hscript_FieldAccess.AStatic);
				break;
			case "var":
				var name1 = this.getIdent();
				var get = null;
				var set = null;
				if(this.maybe(hscript_Token.TPOpen)) {
					get = this.getIdent();
					var t = this.token();
					if(t != hscript_Token.TComma) {
						this.unexpected(t);
					}
					set = this.getIdent();
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
				}
				var type = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
				var expr = this.maybe(hscript_Token.TOp("=")) ? this.parseExpr() : null;
				if(expr != null) {
					if(this.isBlock(expr)) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					}
				} else if(type != null && type[1] == 2) {
					this.maybe(hscript_Token.TSemicolon);
				} else {
					var t3 = this.token();
					if(t3 != hscript_Token.TSemicolon) {
						this.unexpected(t3);
					}
				}
				return { name : name1, meta : meta, access : access, kind : hscript_FieldKind.KVar({ get : get, set : set, type : type, expr : expr})};
			default:
				this.unexpected(hscript_Token.TId(id));
			}
		}
	}
	,incPos: function() {
	}
	,readChar: function() {
		try {
			return this.input.readByte();
		} catch( e ) {
			return 0;
		}
	}
	,readString: function(until) {
		var c = 0;
		var b = new haxe_io_BytesOutput();
		var esc = false;
		var old = this.line;
		var s = this.input;
		while(true) {
			try {
				c = s.readByte();
			} catch( e ) {
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 34:case 39:case 92:
					b.writeByte(c);
					break;
				case 47:
					if(this.allowJSON) {
						b.writeByte(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 110:
					b.writeByte(10);
					break;
				case 114:
					b.writeByte(13);
					break;
				case 116:
					b.writeByte(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					var code = null;
					try {
						code = s.readString(4);
					} catch( e1 ) {
						this.line = old;
						throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
					}
					var k = 0;
					var _g = 0;
					while(_g < 4) {
						var i = _g++;
						k <<= 4;
						var $char = HxOverrides.cca(code,i);
						if($char == null) {
							this.invalidChar($char);
						} else {
							switch($char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								k += $char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								k += $char - 55;
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								k += $char - 87;
								break;
							default:
								this.invalidChar($char);
							}
						}
					}
					if(k <= 127) {
						b.writeByte(k);
					} else if(k <= 2047) {
						b.writeByte(192 | k >> 6);
						b.writeByte(128 | k & 63);
					} else {
						b.writeByte(224 | k >> 12);
						b.writeByte(128 | k >> 6 & 63);
						b.writeByte(128 | k & 63);
					}
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b.writeByte(c);
			}
		}
		return b.getBytes().toString();
	}
	,token: function() {
		if(this.tokens.head != null) {
			var _this = this.tokens;
			var k = _this.head;
			if(k == null) {
				return null;
			} else {
				_this.head = k.next;
				return k.elt;
			}
		}
		var $char;
		if(this["char"] < 0) {
			$char = this.readChar();
		} else {
			$char = this["char"];
			this["char"] = -1;
		}
		while(true) {
			switch($char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				break;
			case 9:case 13:case 32:
				break;
			case 35:
				$char = this.readChar();
				if(this.idents[$char]) {
					var id = String.fromCharCode($char);
					while(true) {
						$char = this.readChar();
						if(!this.idents[$char]) {
							this["char"] = $char;
							return this.preprocess(id);
						}
						id += String.fromCharCode($char);
					}
				}
				this.invalidChar($char);
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString($char)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				$char = this.readChar();
				switch($char) {
				case 46:
					$char = this.readChar();
					if($char != 46) {
						this.invalidChar($char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = $char - 48;
					var exp = 1;
					while(true) {
						$char = this.readChar();
						exp *= 10;
						switch($char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + ($char - 48);
							break;
						default:
							this["char"] = $char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this["char"] = $char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = ($char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					$char = this.readChar();
					exp1 *= 10;
					switch($char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.readChar() == 46) {
								var _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(hscript_Token.TOp("..."),_this1.head);
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar($char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + ($char - 48);
						break;
					case 69:case 101:
						var tk = this.token();
						var pow = null;
						switch(tk[1]) {
						case 1:
							if(tk[2][1] == 0) {
								var e = tk[2][2];
								pow = e;
							} else {
								var _this2 = this.tokens;
								_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
							}
							break;
						case 3:
							if(tk[2] == "-") {
								tk = this.token();
								if(tk[1] == 1) {
									if(tk[2][1] == 0) {
										var e1 = tk[2][2];
										pow = -e1;
									} else {
										var _this3 = this.tokens;
										_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
									}
								} else {
									var _this4 = this.tokens;
									_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
								}
							} else {
								var _this5 = this.tokens;
								_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
							}
							break;
						default:
							var _this6 = this.tokens;
							_this6.head = new haxe_ds_GenericCell(tk,_this6.head);
						}
						if(pow == null) {
							this.invalidChar($char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar($char);
						}
						var n2 = 0;
						while(true) {
							$char = this.readChar();
							switch($char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + $char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + ($char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + ($char - 87);
								break;
							default:
								this["char"] = $char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this["char"] = $char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				$char = this.readChar();
				if($char == 61) {
					return hscript_Token.TOp("==");
				} else if($char == 62) {
					return hscript_Token.TOp("=>");
				}
				this["char"] = $char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				$char = this.readChar();
				if(this.idents[$char] || $char == 58) {
					var id1 = String.fromCharCode($char);
					while(true) {
						$char = this.readChar();
						if(!this.idents[$char]) {
							this["char"] = $char;
							return hscript_Token.TMeta(id1);
						}
						id1 += String.fromCharCode($char);
					}
				}
				this.invalidChar($char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[$char]) {
					var op = String.fromCharCode($char);
					var prev = -1;
					while(true) {
						$char = this.readChar();
						if(!this.ops[$char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,$char);
							}
							this["char"] = $char;
							return hscript_Token.TOp(op);
						}
						prev = $char;
						op += String.fromCharCode($char);
					}
				}
				if(this.idents[$char]) {
					var id2 = String.fromCharCode($char);
					while(true) {
						$char = this.readChar();
						if(!this.idents[$char]) {
							this["char"] = $char;
							return hscript_Token.TId(id2);
						}
						id2 += String.fromCharCode($char);
					}
				}
				this.invalidChar($char);
			}
			$char = this.readChar();
		}
	}
	,preprocValue: function(id) {
		var _this = this.preprocesorValues;
		if(__map_reserved[id] != null) {
			return _this.getReserved(id);
		} else {
			return _this.h[id];
		}
	}
	,preprocStack: null
	,parsePreproCond: function() {
		var tk = this.token();
		switch(tk[1]) {
		case 2:
			var id = tk[2];
			return hscript_Expr.EIdent(id);
		case 3:
			if(tk[2] == "!") {
				return hscript_Expr.EUnop("!",true,this.parsePreproCond());
			} else {
				return this.unexpected(tk);
			}
			break;
		case 4:
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(hscript_Token.TPOpen,_this.head);
			return this.parseExpr();
		default:
			return this.unexpected(tk);
		}
	}
	,evalPreproCond: function(e) {
		switch(e[1]) {
		case 1:
			var id = e[2];
			return this.preprocValue(id) != null;
		case 3:
			var e1 = e[2];
			return this.evalPreproCond(e1);
		case 6:
			switch(e[2]) {
			case "&&":
				var e2 = e[4];
				var e11 = e[3];
				if(this.evalPreproCond(e11)) {
					return this.evalPreproCond(e2);
				} else {
					return false;
				}
				break;
			case "||":
				var e21 = e[4];
				var e12 = e[3];
				if(!this.evalPreproCond(e12)) {
					return this.evalPreproCond(e21);
				} else {
					return true;
				}
				break;
			default:
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + e[0]));
			}
			break;
		case 7:
			if(e[2] == "!") {
				var e3 = e[4];
				return !this.evalPreproCond(e3);
			} else {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + e[0]));
			}
			break;
		default:
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + e[0]));
		}
	}
	,preprocess: function(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			var e = this.parsePreproCond();
			if(this.evalPreproCond(e)) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	,skipTokens: function() {
		var spos = this.preprocStack.length - 1;
		var obj = this.preprocStack[spos];
		var pos = 0;
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Unclosed"));
			}
			if(this.preprocStack[spos] != obj) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
	}
	,tokenComment: function(op,$char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			try {
				while($char != 13 && $char != 10) $char = s.readByte();
				this["char"] = $char;
			} catch( e ) {
			}
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this["char"] = $char;
				return this.token();
			}
			try {
				while(true) {
					while($char != 42) {
						if($char == 10) {
							this.line++;
						}
						$char = s.readByte();
					}
					$char = s.readByte();
					if($char == 47) {
						break;
					}
				}
			} catch( e1 ) {
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedComment);
			}
			return this.token();
		}
		this["char"] = $char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c[1]) {
		case 0:
			var v = c[2];
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c[2];
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c[2];
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t[1]) {
		case 0:
			return "<eof>";
		case 1:
			var c = t[2];
			return this.constString(c);
		case 2:
			var s = t[2];
			return s;
		case 3:
			var s1 = t[2];
			return s1;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t[2];
			return "@" + id;
		case 16:
			var id1 = t[2];
			return "#" + id1;
		}
	}
	,__class__: hscript_Parser
};
var interpret_ConvertHaxe = function(haxe) {
	this.inEnumBraces = -1;
	this.inClassBraces = -1;
	this.openBrackets = 0;
	this.openParens = 0;
	this.openBraces = 0;
	this.word = "";
	this.cleanedAfter = "";
	this.cleanedCC = "";
	this.cleanedC = "";
	this.after = "";
	this.cc = "";
	this.c = "";
	this.len = 0;
	this.i = 0;
	this.haxe = StringTools.replace(haxe,"\r","");
};
$hxClasses["interpret.ConvertHaxe"] = interpret_ConvertHaxe;
interpret_ConvertHaxe.__name__ = ["interpret","ConvertHaxe"];
interpret_ConvertHaxe.fail = function(error,pos,code) {
	haxe_Log.trace(HxOverrides.substr(code,pos,100),{ fileName : "ConvertHaxe.hx", lineNumber : 1047, className : "interpret.ConvertHaxe", methodName : "fail"});
	throw new js__$Boot_HaxeError("" + Std.string(error));
};
interpret_ConvertHaxe.cleanType = function(rawType) {
	var cleanedType = rawType.replace(interpret_ConvertHaxe.RE_ANY_SPACE.r,"");
	if(StringTools.startsWith(cleanedType,"Null<")) {
		cleanedType = cleanedType.substring(5,cleanedType.length - 1);
	}
	if(StringTools.startsWith(cleanedType,"Class<")) {
		var classType = cleanedType.substring(6,cleanedType.length - 1);
		cleanedType = "Class<" + interpret_ConvertHaxe.cleanType(classType) + ">";
	} else if(StringTools.startsWith(cleanedType,"Enum<")) {
		var classType1 = cleanedType.substring(5,cleanedType.length - 1);
		cleanedType = "Enum<" + interpret_ConvertHaxe.cleanType(classType1) + ">";
	} else if(interpret_ConvertHaxe.RE_TYPE_WITH_PARAM.match(cleanedType)) {
		cleanedType = interpret_ConvertHaxe.RE_TYPE_WITH_PARAM.matched(1);
	}
	return cleanedType;
};
interpret_ConvertHaxe.cleanComment = function(comment) {
	var lines = [];
	var _g = 0;
	var _g1 = comment.split("\n");
	while(_g < _g1.length) {
		var line = _g1[_g];
		++_g;
		var lineLen = line.length;
		line = line.replace(interpret_ConvertHaxe.RE_BEFORE_COMMENT_LINE.r,"");
		while(line.length < lineLen) line = " " + line;
		line = line.replace(interpret_ConvertHaxe.RE_AFTER_COMMENT_LINE.r,"");
		lines.push(line);
	}
	if(lines.length == 0) {
		return "";
	}
	var commonIndent = 99999;
	var _g2 = 0;
	while(_g2 < lines.length) {
		var line1 = lines[_g2];
		++_g2;
		if(StringTools.trim(line1) != "") {
			commonIndent = Math.min(commonIndent,line1.length - StringTools.ltrim(line1).length) | 0;
		}
	}
	if(commonIndent > 0) {
		var _g11 = 0;
		var _g3 = lines.length;
		while(_g11 < _g3) {
			var i = _g11++;
			lines[i] = lines[i].substring(commonIndent);
		}
	}
	return StringTools.trim(lines.join("\n"));
};
interpret_ConvertHaxe.codeWithoutComments = function(code) {
	var i = 0;
	var c = "";
	var cc = "";
	var after = "";
	var len = code.length;
	var inSingleLineComment = false;
	var inMultiLineComment = false;
	var result_b = "";
	while(i < len) {
		c = code.charAt(i);
		if(i + 1 < len) {
			cc = c + code.charAt(i + 1);
		} else {
			cc = c;
		}
		if(inSingleLineComment) {
			if(c == "\n") {
				inSingleLineComment = false;
			}
			result_b += " ";
			++i;
		} else if(inMultiLineComment) {
			if(cc == "*/") {
				inMultiLineComment = false;
				result_b += "  ";
				i += 2;
			} else {
				result_b += " ";
				++i;
			}
		} else if(cc == "//") {
			inSingleLineComment = true;
			result_b += "  ";
			i += 2;
		} else if(cc == "/*") {
			inMultiLineComment = true;
			result_b += "  ";
			i += 2;
		} else if(c == "\"" || c == "'") {
			after = code.substring(i);
			if(!interpret_ConvertHaxe.RE_STRING.match(after)) {
				interpret_ConvertHaxe.fail("Invalid string",i,code);
			}
			result_b += Std.string(interpret_ConvertHaxe.RE_STRING.matched(0));
			i += interpret_ConvertHaxe.RE_STRING.matched(0).length;
		} else {
			result_b += c == null ? "null" : "" + c;
			++i;
		}
	}
	return result_b;
};
interpret_ConvertHaxe.prototype = {
	haxe: null
	,cleanedHaxe: null
	,tokens: null
	,i: null
	,len: null
	,c: null
	,cc: null
	,after: null
	,cleanedC: null
	,cleanedCC: null
	,cleanedAfter: null
	,word: null
	,openBraces: null
	,openParens: null
	,openBrackets: null
	,inClassBraces: null
	,inEnumBraces: null
	,convert: function() {
		this.cleanedHaxe = StringTools.replace(interpret_ConvertHaxe.codeWithoutComments(this.haxe),"\n"," ");
		this.tokens = [];
		this.inClassBraces = -1;
		this.inEnumBraces = -1;
		this.i = 0;
		this.len = this.haxe.length;
		this.c = "";
		this.cc = "";
		this.after = "";
		this.cleanedC = "";
		this.cleanedCC = "";
		this.cleanedAfter = "";
		this.word = "";
		this.openBraces = 0;
		this.openParens = 0;
		this.openBrackets = 0;
		while(this.i < this.len) {
			this.c = this.haxe.charAt(this.i);
			this.cc = HxOverrides.substr(this.haxe,this.i,2);
			if(this.cc == "//") {
				this.consumeSingleLineComment();
			} else if(this.cc == "/*") {
				this.consumeMultiLineComment();
			} else if(this.c == "@") {
				this.consumeMeta();
			} else if(this.c == "{") {
				this.openBraces++;
				this.i++;
			} else if(this.c == "}") {
				this.openBraces--;
				this.i++;
				if(this.inClassBraces != -1 && this.inClassBraces > this.openBraces) {
					this.inClassBraces = -1;
				} else if(this.inEnumBraces != -1 && this.inEnumBraces > this.openBraces) {
					this.inEnumBraces = -1;
				}
			} else {
				this.cleanedAfter = this.cleanedHaxe.substring(this.i);
				this.after = this.haxe.substring(this.i);
				if(this.i > 0 && interpret_ConvertHaxe.RE_SEP_WORD.match(this.haxe.charAt(this.i - 1) + this.after)) {
					this.word = interpret_ConvertHaxe.RE_SEP_WORD.matched(1);
				} else if(this.i == 0 && interpret_ConvertHaxe.RE_WORD.match(this.after)) {
					this.word = interpret_ConvertHaxe.RE_WORD.matched(0);
				} else {
					this.word = "";
				}
				var key = this.word;
				var _this = interpret_ConvertHaxe.MODIFIERS;
				if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
					this.tokens.push(interpret_Token.TModifier(new interpret_TModifier(this.i,this.word)));
					this.i += this.word.length;
				} else if(this.word == "import") {
					this.consumeImport();
				} else if(this.word == "using") {
					this.consumeUsing();
				} else if(this.word == "package") {
					this.consumePackage();
				} else if(this.inClassBraces != -1) {
					if(this.word == "var" || this.word == "final") {
						this.consumeVar();
					} else if(this.word == "function") {
						this.consumeMethod();
					} else {
						this.i++;
					}
				} else if(this.inEnumBraces != -1) {
					this.i++;
				} else if(this.word == "class") {
					this.consumeClassDecl();
				} else if(this.word == "enum") {
					this.consumeEnumDecl();
				} else if(this.word == "abstract") {
					this.consumeAbstract();
				} else if(this.word == "typedef") {
					this.consumeTypedef();
				} else {
					this.i++;
				}
			}
		}
	}
	,updateC: function() {
		this.c = this.haxe.charAt(this.i);
	}
	,updateCC: function() {
		this.cc = HxOverrides.substr(this.haxe,this.i,2);
	}
	,updateCAndCC: function() {
		this.c = this.haxe.charAt(this.i);
		this.cc = HxOverrides.substr(this.haxe,this.i,2);
	}
	,updateAfter: function() {
		this.after = this.haxe.substring(this.i);
	}
	,updateCleanedC: function() {
		this.cleanedC = this.cleanedHaxe.charAt(this.i);
	}
	,updateCleanedCC: function() {
		this.cleanedCC = HxOverrides.substr(this.cleanedHaxe,this.i,2);
	}
	,updateCleanedCAndCC: function() {
		this.cleanedC = this.cleanedHaxe.charAt(this.i);
		this.cleanedCC = HxOverrides.substr(this.cleanedHaxe,this.i,2);
	}
	,updateCleanedAfter: function() {
		this.cleanedAfter = this.cleanedHaxe.substring(this.i);
	}
	,updateWord: function() {
		if(this.i > 0 && interpret_ConvertHaxe.RE_SEP_WORD.match(this.haxe.charAt(this.i - 1) + this.after)) {
			this.word = interpret_ConvertHaxe.RE_SEP_WORD.matched(1);
		} else if(this.i == 0 && interpret_ConvertHaxe.RE_WORD.match(this.after)) {
			this.word = interpret_ConvertHaxe.RE_WORD.matched(0);
		} else {
			this.word = "";
		}
	}
	,consumeExpression: function(until,expr) {
		var _this = interpret_ConvertHaxe.UNTIL_MAPS;
		var untilMap = __map_reserved[until] != null ? _this.getReserved(until) : _this.h[until];
		if(untilMap == null) {
			interpret_ConvertHaxe.fail("Invalid expression until: " + until,this.i,this.haxe);
		}
		var _expr = new StringBuf();
		var openParensStart = this.openParens;
		var openBracesStart = this.openBraces;
		var openBracketsStart = this.openBrackets;
		var stop = null;
		var stopAtParenClose = __map_reserved[")"] != null ? untilMap.existsReserved(")") : untilMap.h.hasOwnProperty(")");
		var stopAtBraceClose = __map_reserved["}"] != null ? untilMap.existsReserved("}") : untilMap.h.hasOwnProperty("}");
		var stopAtBracketClose = __map_reserved["]"] != null ? untilMap.existsReserved("]") : untilMap.h.hasOwnProperty("]");
		var stopAtComa = __map_reserved[","] != null ? untilMap.existsReserved(",") : untilMap.h.hasOwnProperty(",");
		var stopAtSemicolon = __map_reserved[";"] != null ? untilMap.existsReserved(";") : untilMap.h.hasOwnProperty(";");
		while(this.i < this.len) {
			this.c = this.haxe.charAt(this.i);
			this.cc = HxOverrides.substr(this.haxe,this.i,2);
			if(this.cc == "//") {
				this.consumeSingleLineComment(_expr);
			} else if(this.cc == "/*") {
				this.consumeMultiLineComment(_expr);
			} else if(this.c == "@") {
				this.consumeMeta(_expr);
			} else if(this.c == "'") {
				this.consumeSingleQuotedString(_expr);
			} else if(this.c == "\"") {
				this.consumeDoubleQuotedString(_expr);
			} else if(this.c == "(") {
				this.openParens++;
				_expr.b += "(";
				this.i++;
			} else if(this.c == "{") {
				this.openBraces++;
				_expr.b += "{";
				this.i++;
			} else if(this.c == "[") {
				this.openBrackets++;
				_expr.b += "[";
				this.i++;
			} else if(this.c == ")") {
				if(stopAtParenClose && this.openParens == openParensStart && this.openBraces == openBracesStart && this.openBrackets == openBracketsStart) {
					stop = this.c;
					break;
				}
				this.openParens--;
				_expr.b += ")";
				this.i++;
			} else if(this.c == "}") {
				if(stopAtBraceClose && this.openParens == openParensStart && this.openBraces == openBracesStart && this.openBrackets == openBracketsStart) {
					stop = this.c;
					break;
				}
				this.openBraces--;
				_expr.b += "}";
				this.i++;
			} else if(this.c == "]") {
				if(stopAtBracketClose && this.openParens == openParensStart && this.openBraces == openBracesStart && this.openBrackets == openBracketsStart) {
					stop = this.c;
					break;
				}
				this.openBrackets--;
				_expr.b += "]";
				this.i++;
			} else if(this.cc == "->") {
				this.i += 2;
			} else if(this.c == ",") {
				if(stopAtComa && this.openParens == openParensStart && this.openBraces == openBracesStart && this.openBrackets == openBracketsStart) {
					stop = this.c;
					break;
				}
				_expr.b += ",";
				this.i++;
			} else if(this.c == ";") {
				if(stopAtSemicolon && this.openParens == openParensStart && this.openBraces == openBracesStart && this.openBrackets == openBracketsStart) {
					stop = this.c;
					break;
				}
				_expr.b += ";";
				this.i++;
			} else {
				this.cleanedAfter = this.cleanedHaxe.substring(this.i);
				this.after = this.haxe.substring(this.i);
				if(this.i > 0 && interpret_ConvertHaxe.RE_SEP_WORD.match(this.haxe.charAt(this.i - 1) + this.after)) {
					this.word = interpret_ConvertHaxe.RE_SEP_WORD.matched(1);
				} else if(this.i == 0 && interpret_ConvertHaxe.RE_WORD.match(this.after)) {
					this.word = interpret_ConvertHaxe.RE_WORD.matched(0);
				} else {
					this.word = "";
				}
				var key = this.word;
				var _this1 = interpret_ConvertHaxe.MODIFIERS;
				if(__map_reserved[key] != null ? _this1.existsReserved(key) : _this1.h.hasOwnProperty(key)) {
					this.i += this.word.length;
				} else if(this.word == "var" || this.word == "final") {
					this.consumeVar(_expr);
				} else if(this.word == "cast") {
					this.consumeCast(_expr);
				} else if(this.word == "new") {
					this.consumeNew(_expr);
				} else if(this.word == "function") {
					this.consumeFunction(_expr);
				} else {
					_expr.b += Std.string(this.c);
					this.i++;
				}
			}
		}
		var exprStr = _expr.b;
		if(expr != null) {
			expr.b += exprStr == null ? "null" : "" + exprStr;
		}
		return { stop : stop, expr : exprStr};
	}
	,consumeClassDecl: function() {
		if(!interpret_ConvertHaxe.RE_CLASS_DECL.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid class",this.i,this.haxe);
		}
		var interfaces = [];
		var parent = null;
		var parentsCode = interpret_ConvertHaxe.RE_CLASS_DECL.matched(2);
		if(parentsCode != null) {
			parentsCode = StringTools.trim(parentsCode);
			while(interpret_ConvertHaxe.RE_CLASS_PARENT.match(parentsCode)) {
				var parentName = interpret_ConvertHaxe.cleanType(interpret_ConvertHaxe.RE_CLASS_PARENT.matched(2));
				var parentKeyword = interpret_ConvertHaxe.RE_CLASS_PARENT.matched(1);
				if(parentKeyword == "implements") {
					interfaces.push(new interpret_TParent(parentName,interpret_TParentKind.INTERFACE));
				} else {
					parent = new interpret_TParent(parentName,interpret_TParentKind.SUPERCLASS);
				}
				parentsCode = parentsCode.substring(interpret_ConvertHaxe.RE_CLASS_PARENT.matched(0).length);
			}
		}
		this.i += interpret_ConvertHaxe.RE_CLASS_DECL.matched(0).length;
		this.openBraces++;
		this.inClassBraces = this.openBraces;
		var _g1 = this.i;
		var _g = interpret_TTypeKind.CLASS;
		this.tokens.push(interpret_Token.TType(new interpret_TType(_g1,interpret_ConvertHaxe.RE_CLASS_DECL.matched(1),_g,null,interfaces,parent)));
	}
	,consumeEnumDecl: function() {
		if(!interpret_ConvertHaxe.RE_ENUM_DECL.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid enum",this.i,this.haxe);
		}
		this.i += interpret_ConvertHaxe.RE_ENUM_DECL.matched(0).length;
		this.openBraces++;
		this.inEnumBraces = this.openBraces;
		var _g1 = this.i;
		var _g = interpret_TTypeKind.ENUM;
		this.tokens.push(interpret_Token.TType(new interpret_TType(_g1,interpret_ConvertHaxe.RE_ENUM_DECL.matched(2),_g,null,null,null)));
	}
	,consumeAbstract: function() {
		if(!interpret_ConvertHaxe.RE_ABSTRACT_DECL.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid abstract",this.i,this.haxe);
		}
		this.i += interpret_ConvertHaxe.RE_ABSTRACT_DECL.matched(0).length;
		this.openBraces++;
		var type = interpret_ConvertHaxe.RE_ABSTRACT_DECL.matched(2);
		if(type != null) {
			type = interpret_ConvertHaxe.cleanType(type);
		}
		var _g1 = this.i;
		var _g = interpret_TTypeKind.ABSTRACT;
		this.tokens.push(interpret_Token.TType(new interpret_TType(_g1,interpret_ConvertHaxe.RE_ABSTRACT_DECL.matched(1),_g,type,null,null)));
		this.openBraces++;
		this.consumeExpression("}");
		this.i++;
		this.openBraces--;
	}
	,consumeTypedef: function() {
		if(!interpret_ConvertHaxe.RE_TYPEDEF_DECL.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid typedef",this.i,this.haxe);
		}
		this.i += interpret_ConvertHaxe.RE_TYPEDEF_DECL.matched(0).length;
		this.openBraces++;
		var type = interpret_ConvertHaxe.RE_TYPEDEF_DECL.matched(3) != "" ? interpret_ConvertHaxe.RE_TYPEDEF_DECL.matched(3) : null;
		if(type != null) {
			type = interpret_ConvertHaxe.cleanType(type);
		}
		var _g1 = this.i;
		var _g = interpret_TTypeKind.TYPEDEF;
		this.tokens.push(interpret_Token.TType(new interpret_TType(_g1,interpret_ConvertHaxe.RE_TYPEDEF_DECL.matched(1),_g,type,null,null)));
		if(interpret_ConvertHaxe.RE_TYPEDEF_DECL.matched(2) == "{") {
			this.openBraces++;
			this.consumeExpression("}");
			this.i++;
			this.openBraces--;
		}
	}
	,consumeImport: function() {
		if(!interpret_ConvertHaxe.RE_IMPORT.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid import",this.i,this.haxe);
		}
		var path = interpret_ConvertHaxe.RE_IMPORT.matched(1);
		var alias = interpret_ConvertHaxe.RE_IMPORT.matched(2);
		var parts = path.split(".");
		var imp = new interpret_TImport(this.i,path,parts[parts.length - 1],alias != null && alias != "" ? alias : null);
		this.tokens.push(interpret_Token.TImport(imp));
		this.i += interpret_ConvertHaxe.RE_IMPORT.matched(0).length;
	}
	,consumeUsing: function() {
		if(!interpret_ConvertHaxe.RE_USING.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid using",this.i,this.haxe);
		}
		var path = interpret_ConvertHaxe.RE_USING.matched(1);
		var $use = new interpret_TUsing(this.i,path);
		this.tokens.push(interpret_Token.TUsing($use));
		this.i += interpret_ConvertHaxe.RE_USING.matched(0).length;
	}
	,consumeVar: function(expr) {
		if(!interpret_ConvertHaxe.RE_VAR.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid var",this.i,this.haxe);
		}
		var name = interpret_ConvertHaxe.RE_VAR.matched(2);
		var get = interpret_ConvertHaxe.RE_VAR.matched(3);
		var set = interpret_ConvertHaxe.RE_VAR.matched(4);
		var type = interpret_ConvertHaxe.RE_VAR.matched(5);
		var stop = interpret_ConvertHaxe.RE_VAR.matched(6);
		if(type != null) {
			type = interpret_ConvertHaxe.cleanType(type);
		}
		var field = new interpret_TField(name,this.i,interpret_TFieldKind.VAR,type,null,null,null,null);
		if(get != null && get != "") {
			field.get = get;
		}
		if(set != null && set != "") {
			field.set = set;
		}
		this.i += interpret_ConvertHaxe.RE_VAR.matched(0).length;
		if(stop == "=") {
			field.expr = StringTools.trim(this.consumeExpression(";").expr);
			this.i++;
		}
		if(expr != null) {
			expr.b += Std.string("var " + name);
			if(field.expr != null) {
				expr.b += Std.string(" = " + field.expr);
			}
			expr.b += ";";
		} else {
			this.tokens.push(interpret_Token.TField(field));
		}
	}
	,consumeCast: function(expr) {
		if(!interpret_ConvertHaxe.RE_CAST.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid cast",this.i,this.haxe);
		}
		var hasParen = interpret_ConvertHaxe.RE_CAST.matched(1) == "(";
		this.i += interpret_ConvertHaxe.RE_CAST.matched(0).length;
		if(hasParen) {
			var result;
			var gotFirstExpr = false;
			while(true) {
				result = this.consumeExpression(",)");
				if(!gotFirstExpr) {
					gotFirstExpr = true;
					if(expr != null) {
						expr.b += Std.string("(" + result.expr + ")");
					}
				}
				this.i++;
				if(!(result.stop == ",")) {
					break;
				}
			}
		}
	}
	,consumeNew: function(expr) {
		if(!interpret_ConvertHaxe.RE_NEW.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid new",this.i,this.haxe);
		}
		if(expr != null) {
			expr.b += "new ";
			var x = interpret_ConvertHaxe.RE_NEW.matched(1);
			expr.b += Std.string(x);
			expr.b += "(";
		}
		this.i += interpret_ConvertHaxe.RE_NEW.matched(0).length;
		var result = this.consumeExpression(")");
		if(expr != null) {
			expr.b += Std.string(result.expr);
			expr.b += ")";
		}
		this.i++;
	}
	,consumeFunction: function(expr) {
		if(!interpret_ConvertHaxe.RE_FUNCTION.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid function",this.i,this.haxe);
		}
		if(expr != null) {
			var x = interpret_ConvertHaxe.RE_FUNCTION.matched(0);
			expr.b += Std.string(x);
		}
		this.i += interpret_ConvertHaxe.RE_FUNCTION.matched(0).length;
		this.openParens++;
		var defaults = null;
		var result;
		while(true) {
			result = this.consumeExpression(",)");
			if(result.expr != "") {
				var arg = this.parseNamedArg(result.expr);
				if(arg.opt) {
					if(expr != null) {
						expr.b += "?";
					}
				}
				if(expr != null) {
					expr.b += Std.string(arg.name);
				}
				if(arg.expr != null) {
					if(defaults == null) {
						defaults = [];
					}
					defaults.push([arg.name,arg.expr]);
				}
			}
			if(expr != null) {
				expr.b += Std.string(result.stop);
			}
			this.i++;
			if(!(result.stop == ",")) {
				break;
			}
		}
		this.openParens--;
		if(defaults == null) {
			return;
		}
		this.cleanedAfter = this.cleanedHaxe.substring(this.i);
		if(interpret_ConvertHaxe.RE_FUNC_BLOCK_START.match(this.cleanedAfter)) {
			this.i += interpret_ConvertHaxe.RE_FUNC_BLOCK_START.matched(0).length;
			this.openBraces++;
			if(expr != null) {
				expr.b += "{";
			}
			var _g = 0;
			while(_g < defaults.length) {
				var item = defaults[_g];
				++_g;
				var name = item[0];
				var value = item[1];
				if(expr != null) {
					expr.b += Std.string(" if (" + name + " == null) " + name + " = " + value + ";");
				}
			}
			var str = this.consumeExpression("}").expr;
			if(expr != null) {
				expr.b += Std.string(str);
			}
			if(expr != null) {
				expr.b += "}";
			}
			this.i++;
			this.openBraces--;
		} else {
			if(interpret_ConvertHaxe.RE_FUNC_RET_TYPE.match(this.cleanedAfter)) {
				this.i += interpret_ConvertHaxe.RE_FUNC_RET_TYPE.matched(0).length;
			}
			if(expr != null) {
				expr.b += "{";
			}
			var _g1 = 0;
			while(_g1 < defaults.length) {
				var item1 = defaults[_g1];
				++_g1;
				var name1 = item1[0];
				var value1 = item1[1];
				if(expr != null) {
					expr.b += Std.string(" if (" + name1 + " == null) " + name1 + " = " + value1 + ";");
				}
			}
			var str1 = StringTools.ltrim(this.consumeExpression(";").expr) + ";";
			if(expr != null) {
				expr.b += Std.string(str1);
			}
			if(expr != null) {
				expr.b += "}";
			}
			this.i++;
		}
	}
	,consumeMethod: function() {
		if(!interpret_ConvertHaxe.RE_METHOD.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid method",this.i,this.haxe);
		}
		var name = interpret_ConvertHaxe.RE_METHOD.matched(1);
		var pos = this.i;
		var ret = null;
		this.i += interpret_ConvertHaxe.RE_METHOD.matched(0).length;
		this.openParens++;
		var args = [];
		var result;
		while(true) {
			result = this.consumeExpression(",)");
			if(result.expr != "") {
				var arg = this.parseNamedArg(result.expr);
				args.push(arg);
			}
			this.i++;
			if(!(result.stop == ",")) {
				break;
			}
		}
		this.openParens--;
		this.cleanedAfter = this.cleanedHaxe.substring(this.i);
		var body;
		if(interpret_ConvertHaxe.RE_FUNC_BLOCK_START.match(this.cleanedAfter)) {
			ret = interpret_ConvertHaxe.RE_FUNC_BLOCK_START.matched(2);
			this.i += interpret_ConvertHaxe.RE_FUNC_BLOCK_START.matched(0).length;
			this.openBraces++;
			body = "{" + this.consumeExpression("}").expr + "}";
			this.i++;
			this.openBraces--;
		} else {
			if(interpret_ConvertHaxe.RE_FUNC_RET_TYPE.match(this.cleanedAfter)) {
				ret = interpret_ConvertHaxe.RE_FUNC_RET_TYPE.matched(2);
				this.i += interpret_ConvertHaxe.RE_FUNC_RET_TYPE.matched(0).length;
			}
			body = StringTools.ltrim(this.consumeExpression(";").expr) + ";";
			this.i++;
		}
		if(ret != null) {
			ret = interpret_ConvertHaxe.cleanType(ret);
		}
		var field = new interpret_TField(name,pos,interpret_TFieldKind.METHOD,ret,args,null,null,body);
		this.tokens.push(interpret_Token.TField(field));
	}
	,consumeSingleLineComment: function(expr) {
		var content_b = "";
		var comment = new interpret_TComment(this.i,null,false);
		this.i += 2;
		while(this.i < this.len) {
			this.c = this.haxe.charAt(this.i);
			if(this.c == "\n") {
				this.i++;
				break;
			} else {
				content_b += Std.string(this.c);
				this.i++;
			}
		}
		if(expr == null) {
			comment.content = interpret_ConvertHaxe.cleanComment(content_b);
			this.tokens.push(interpret_Token.TComment(comment));
		}
	}
	,consumeMultiLineComment: function(expr) {
		var content_b = "";
		var comment = new interpret_TComment(this.i,null,true);
		this.i += 2;
		while(this.i < this.len) {
			this.c = this.haxe.charAt(this.i);
			this.cc = HxOverrides.substr(this.haxe,this.i,2);
			if(this.cc == "*/") {
				this.i += 2;
				break;
			} else {
				this.i++;
				content_b += Std.string(this.c);
			}
		}
		if(expr == null) {
			comment.content = interpret_ConvertHaxe.cleanComment(content_b);
			this.tokens.push(interpret_Token.TComment(comment));
		}
	}
	,consumeSingleQuotedString: function(expr) {
		this.i++;
		if(expr != null) {
			expr.b += "'";
		}
		while(this.i < this.len) {
			this.c = this.haxe.charAt(this.i);
			this.cc = HxOverrides.substr(this.haxe,this.i,2);
			if(this.c == "\\") {
				this.i += 2;
				if(expr != null) {
					expr.b += Std.string(this.cc);
				}
			} else if(this.cc == "$$") {
				this.i += 2;
				if(expr != null) {
					expr.b += Std.string(this.cc);
				}
			} else if(this.cc == "${") {
				this.i += 2;
				this.openBraces++;
				if(expr != null) {
					expr.b += "'+(";
				}
				this.consumeExpression("}",expr);
				this.openBraces--;
				if(expr != null) {
					expr.b += ")+'";
				}
				this.i++;
			} else if(this.c == "$") {
				this.i++;
				if(expr != null) {
					expr.b += "'+";
				}
				this.consumeWord(expr);
				if(expr != null) {
					expr.b += "+'";
				}
			} else if(this.c == "'") {
				this.i++;
				if(expr != null) {
					expr.b += "'";
				}
				break;
			} else {
				this.i++;
				if(expr != null) {
					expr.b += Std.string(this.c);
				}
			}
		}
	}
	,consumeDoubleQuotedString: function(expr) {
		this.i++;
		if(expr != null) {
			expr.b += "\"";
		}
		while(this.i < this.len) {
			this.c = this.haxe.charAt(this.i);
			this.cc = HxOverrides.substr(this.haxe,this.i,2);
			if(this.c == "\\") {
				this.i += 2;
				if(expr != null) {
					expr.b += Std.string(this.cc);
				}
			} else if(this.c == "\"") {
				this.i++;
				if(expr != null) {
					expr.b += "\"";
				}
				break;
			} else {
				this.i++;
				if(expr != null) {
					expr.b += Std.string(this.c);
				}
			}
		}
	}
	,consumeWord: function(expr) {
		this.after = this.haxe.substring(this.i);
		if(!interpret_ConvertHaxe.RE_WORD.match(this.after)) {
			interpret_ConvertHaxe.fail("Invalid token",this.i,this.haxe);
		}
		if(expr != null) {
			var x = interpret_ConvertHaxe.RE_WORD.matched(0);
			expr.b += Std.string(x);
		}
		this.i += interpret_ConvertHaxe.RE_WORD.matched(0).length;
	}
	,consumeMeta: function(expr) {
		this.cleanedAfter = this.cleanedHaxe.substring(this.i);
		if(!interpret_ConvertHaxe.RE_META.match(this.cleanedAfter)) {
			interpret_ConvertHaxe.fail("Invalid meta",this.i,this.haxe);
		}
		var name = (interpret_ConvertHaxe.RE_META.matched(1) != null ? interpret_ConvertHaxe.RE_META.matched(1) : "") + interpret_ConvertHaxe.RE_META.matched(2);
		var spaces = interpret_ConvertHaxe.RE_META.matched(3);
		var paren = interpret_ConvertHaxe.RE_META.matched(4);
		var _g = this.i;
		var meta = new interpret_TMeta(_g,(interpret_ConvertHaxe.RE_META.matched(1) != null ? interpret_ConvertHaxe.RE_META.matched(1) : "") + interpret_ConvertHaxe.RE_META.matched(2),null);
		this.i += interpret_ConvertHaxe.RE_META.matched(0).length;
		if(paren == "(") {
			this.openParens++;
			meta.args = [];
			var result;
			while(true) {
				result = this.consumeExpression(",)");
				if(result.expr != "") {
					meta.args.push(result.expr);
				}
				this.i++;
				if(!(result.stop == ",")) {
					break;
				}
			}
			this.openParens--;
		}
		if(expr == null) {
			this.tokens.push(interpret_Token.TMeta(meta));
		}
	}
	,consumePackage: function() {
		var pos = this.i;
		this.i += this.word.length;
		var pack = "";
		var c = this.cleanedHaxe.charAt(this.i);
		while(c != ";") {
			pack += c;
			this.i++;
			c = this.cleanedHaxe.charAt(this.i);
		}
		this.i++;
		if(StringTools.trim(pack) != "") {
			var _g = pos;
			this.tokens.push(interpret_Token.TPackage(new interpret_TPackage(_g,StringTools.trim(pack))));
		}
	}
	,parseNamedArg: function(rawArg) {
		rawArg = StringTools.trim(rawArg);
		if(!interpret_ConvertHaxe.RE_NAMED_ARG.match(rawArg)) {
			interpret_ConvertHaxe.fail("Invalid argument",this.i,this.haxe);
		}
		var type = interpret_ConvertHaxe.RE_NAMED_ARG.matched(3);
		if(type != null) {
			type = interpret_ConvertHaxe.cleanType(type);
		}
		var _g3 = this.i;
		var _g2 = interpret_ConvertHaxe.RE_NAMED_ARG.matched(2);
		var _g1 = type;
		var _g = interpret_ConvertHaxe.RE_NAMED_ARG.matched(4);
		var arg = new interpret_TArg(_g3,_g2,_g1,interpret_ConvertHaxe.RE_NAMED_ARG.matched(1) == "?" || interpret_ConvertHaxe.RE_NAMED_ARG.matched(4) != null && interpret_ConvertHaxe.RE_NAMED_ARG.matched(4) != "",_g);
		return arg;
	}
	,__class__: interpret_ConvertHaxe
};
var interpret_DynamicClass = function(env,options) {
	this._contextArgs = null;
	this.context = null;
	this.usings = null;
	this.imports = null;
	this.className = null;
	this.instances = [];
	this.interpreter = null;
	this.env = env;
	this.options = options;
	this.computeHscript();
};
$hxClasses["interpret.DynamicClass"] = interpret_DynamicClass;
interpret_DynamicClass.__name__ = ["interpret","DynamicClass"];
interpret_DynamicClass.prototype = {
	classHscript: null
	,instanceHscript: null
	,env: null
	,interpreter: null
	,classProgram: null
	,instanceProgram: null
	,classGetters: null
	,classSetters: null
	,instanceGetters: null
	,instanceSetters: null
	,options: null
	,instances: null
	,className: null
	,classProperties: null
	,instanceProperties: null
	,imports: null
	,usings: null
	,packagePath: null
	,instanceType: null
	,classType: null
	,context: null
	,_contextArgs: null
	,createInstance: function(args) {
		if(this.interpreter == null) {
			this.init();
		}
		var instance = new interpret_DynamicInstance(this);
		this.instances.push(instance);
		instance.init(args);
		return instance;
	}
	,get: function(name) {
		if(this.interpreter == null) {
			this.init();
		}
		var prevSelf = this.interpreter._self;
		this.interpreter._self = this.context;
		var result = interpret_TypeUtils.unwrap(this.interpreter.get(this.context,name));
		this.interpreter._self = prevSelf;
		return result;
	}
	,exists: function(name) {
		var prevUnresolved = this.interpreter._unresolved;
		this.interpreter._unresolved = interpret_Unresolved.UNRESOLVED;
		var result = this.get(name);
		this.interpreter._unresolved = prevUnresolved;
		return result != interpret_Unresolved.UNRESOLVED;
	}
	,set: function(name,value) {
		var prevSelf = this.interpreter._self;
		this.interpreter._self = this.context;
		var result = interpret_TypeUtils.unwrap(this.interpreter.set(this.context,name,value));
		this.interpreter._self = prevSelf;
		return result;
	}
	,call: function(name,args) {
		if(this.interpreter == null) {
			this.init();
		}
		var prevSelf = this.interpreter._self;
		this.interpreter._self = this.context;
		var method = this.interpreter.get(this.context,name);
		this.interpreter._self = prevSelf;
		if(method == null) {
			throw new js__$Boot_HaxeError("Class method not found: " + name);
		}
		return interpret_TypeUtils.unwrap(method.apply(null,args != null ? args : interpret_DynamicClass.NO_ARGS));
	}
	,computeHscript: function() {
		var tokens = null;
		if(this.options.tokens != null) {
			tokens = this.options.tokens;
		} else if(this.options.haxe != null) {
			var converter = new interpret_ConvertHaxe(this.options.haxe);
			converter.convert();
			tokens = converter.tokens;
		} else {
			throw new js__$Boot_HaxeError("Cannot create dynamic class without haxe code or tokens");
		}
		var instanceResult = new StringBuf();
		var classResult = new StringBuf();
		var targetClass = this.options.targetClass != null ? this.options.targetClass : null;
		var inTargetClass = false;
		var modifiers = new haxe_ds_StringMap();
		var indent = this.options.indent != null ? this.options.indent : "    ";
		var classTokens = [];
		var importsReady = false;
		var usingsReady = false;
		this.classGetters = new haxe_ds_StringMap();
		this.classSetters = new haxe_ds_StringMap();
		this.instanceGetters = new haxe_ds_StringMap();
		this.instanceSetters = new haxe_ds_StringMap();
		this.classProperties = [];
		this.instanceProperties = [];
		this.packagePath = null;
		if(this.options.imports != null) {
			importsReady = true;
			this.imports = this.options.imports;
		} else {
			this.imports = new interpret_ResolveImports(this.env);
		}
		if(this.options.usings != null) {
			usingsReady = true;
			this.usings = this.options.usings;
		} else {
			this.usings = new interpret_ResolveUsings(this.env);
		}
		var _g = 0;
		while(_g < tokens.length) {
			var token = tokens[_g];
			++_g;
			if(!inTargetClass) {
				switch(token[1]) {
				case 0:
					var data = token[2];
					if(this.packagePath == null) {
						this.packagePath = data.path;
					}
					break;
				case 1:
					var data1 = token[2];
					if(!importsReady) {
						this.imports.addImport(data1);
					}
					break;
				case 2:
					var data2 = token[2];
					if(!usingsReady) {
						this.usings.addUsing(data2);
					}
					break;
				case 7:
					var data3 = token[2];
					if(data3.kind == interpret_TTypeKind.CLASS && (targetClass == null || data3.name == targetClass)) {
						inTargetClass = true;
						this.className = data3.name;
						classTokens.push(token);
					}
					break;
				default:
				}
			} else if(token[1] == 7) {
				var data4 = token[2];
				inTargetClass = false;
				break;
			} else {
				classTokens.push(token);
			}
		}
		classResult.b += "{\n";
		instanceResult.b += "{\n";
		var staticDefaults = [];
		var defaults = [];
		var _g1 = 0;
		while(_g1 < classTokens.length) {
			var token1 = classTokens[_g1];
			++_g1;
			switch(token1[1]) {
			case 3:
				var data5 = token1[2];
				var key = data5.name;
				if(__map_reserved[key] != null) {
					modifiers.setReserved(key,true);
				} else {
					modifiers.h[key] = true;
				}
				break;
			case 6:
				var data6 = token1[2];
				if(data6.kind == interpret_TFieldKind.VAR) {
					if(__map_reserved["static"] != null ? modifiers.existsReserved("static") : modifiers.h.hasOwnProperty("static")) {
						this.classProperties.push(data6.name);
						if(data6.get == "get") {
							this.classGetters.set(data6.name,true);
						}
						if(data6.set == "set") {
							this.classSetters.set(data6.name,true);
						}
						if(data6.expr != null) {
							staticDefaults.push([data6.name,data6.expr]);
						}
					} else {
						this.instanceProperties.push(data6.name);
						if(data6.get == "get") {
							this.instanceGetters.set(data6.name,true);
						}
						if(data6.set == "set") {
							this.instanceSetters.set(data6.name,true);
						}
						if(data6.expr != null) {
							defaults.push([data6.name,data6.expr]);
						}
					}
				}
				modifiers = new haxe_ds_StringMap();
				break;
			default:
			}
		}
		classResult.b += indent == null ? "null" : "" + indent;
		classResult.b += "function __defaults(";
		classResult.b += Std.string(this.className);
		classResult.b += ") {\n";
		var _g2 = 0;
		while(_g2 < staticDefaults.length) {
			var item = staticDefaults[_g2];
			++_g2;
			classResult.b += indent == null ? "null" : "" + indent;
			classResult.b += indent == null ? "null" : "" + indent;
			classResult.b += Std.string(this.className);
			classResult.b += ".";
			classResult.b += Std.string(item[0]);
			classResult.b += " = ";
			classResult.b += Std.string(item[1]);
			classResult.b += ";\n";
		}
		classResult.b += indent == null ? "null" : "" + indent;
		classResult.b += "}\n";
		instanceResult.b += indent == null ? "null" : "" + indent;
		instanceResult.b += "function __defaults(";
		instanceResult.b += Std.string(this.className);
		instanceResult.b += ", this) {\n";
		var _g3 = 0;
		while(_g3 < defaults.length) {
			var item1 = defaults[_g3];
			++_g3;
			instanceResult.b += indent == null ? "null" : "" + indent;
			instanceResult.b += indent == null ? "null" : "" + indent;
			instanceResult.b += "this.";
			instanceResult.b += Std.string(item1[0]);
			instanceResult.b += " = ";
			instanceResult.b += Std.string(item1[1]);
			instanceResult.b += ";\n";
		}
		instanceResult.b += indent == null ? "null" : "" + indent;
		instanceResult.b += "}\n";
		modifiers = new haxe_ds_StringMap();
		var _g4 = 0;
		while(_g4 < classTokens.length) {
			var token2 = classTokens[_g4];
			++_g4;
			switch(token2[1]) {
			case 3:
				var data7 = token2[2];
				var key1 = data7.name;
				if(__map_reserved[key1] != null) {
					modifiers.setReserved(key1,true);
				} else {
					modifiers.h[key1] = true;
				}
				break;
			case 6:
				var data8 = token2[2];
				if(data8.kind == interpret_TFieldKind.METHOD) {
					var isStatic = __map_reserved["static"] != null ? modifiers.existsReserved("static") : modifiers.h.hasOwnProperty("static");
					var result = isStatic ? classResult : instanceResult;
					result.b += indent == null ? "null" : "" + indent;
					result.b += "function ";
					result.b += Std.string(data8.name);
					result.b += "(";
					result.b += Std.string(this.className);
					if(!isStatic) {
						result.b += ", this";
					}
					var i = 0;
					var hasDefaultValues = false;
					var _g11 = 0;
					var _g21 = data8.args;
					while(_g11 < _g21.length) {
						var arg = _g21[_g11];
						++_g11;
						result.b += ", ";
						if(arg.opt) {
							if(arg.expr != null) {
								hasDefaultValues = true;
							}
							result.b += "?";
						}
						result.b += Std.string(arg.name);
					}
					result.b += ") ";
					if(hasDefaultValues) {
						result.b += "{";
						var _g12 = 0;
						var _g22 = data8.args;
						while(_g12 < _g22.length) {
							var arg1 = _g22[_g12];
							++_g12;
							if(arg1.expr != null) {
								result.b += " if (";
								result.b += Std.string(arg1.name);
								result.b += " == null) ";
								result.b += Std.string(arg1.name);
								result.b += " = ";
								result.b += Std.string(arg1.expr);
								result.b += ";";
							}
						}
						result.b += " ";
					}
					result.b += Std.string(data8.expr);
					if(hasDefaultValues) {
						result.b += "}";
					}
					result.b += "\n";
				}
				modifiers = new haxe_ds_StringMap();
				break;
			default:
			}
		}
		classResult.b += "}\n";
		instanceResult.b += "}\n";
		this.classHscript = classResult.b;
		this.instanceHscript = instanceResult.b;
		this.instanceType = this.className;
		if(this.packagePath != null && this.packagePath != "") {
			this.instanceType = this.packagePath + "." + this.instanceType;
		}
		this.classType = "Class<" + this.instanceType + ">";
		var parser = new hscript_Parser();
		parser.allowJSON = true;
		parser.allowMetadata = true;
		parser.allowTypes = true;
		this.classProgram = parser.parseString(this.classHscript);
		this.instanceProgram = parser.parseString(this.instanceHscript);
		process.stdout.write("-- BEGIN INST --");
		process.stdout.write("\n");
		process.stdout.write(this.instanceHscript);
		process.stdout.write("\n");
		process.stdout.write("-- END INST --");
		process.stdout.write("\n");
		process.stdout.write("-- BEGIN STATIC --");
		process.stdout.write("\n");
		process.stdout.write(this.classHscript);
		process.stdout.write("\n");
		process.stdout.write("-- END STATIC --");
		process.stdout.write("\n");
	}
	,init: function() {
		this.context = new haxe_ds_StringMap();
		var _this = this.context;
		var value = this.classType;
		if(__map_reserved["__interpretType"] != null) {
			_this.setReserved("__interpretType",value);
		} else {
			_this.h["__interpretType"] = value;
		}
		if(interpret_DynamicClass._contextType == null) {
			var o = this.context;
			interpret_DynamicClass._contextType = o == null ? null : js_Boot.getClass(o);
		}
		this._contextArgs = [this.context];
		this.interpreter = new interpret_Interpreter(this,this.className);
		this.interpreter.execute(this.classProgram);
		var _g = 0;
		var _g1 = this.classProperties;
		while(_g < _g1.length) {
			var prop = _g1[_g];
			++_g;
			var _this1 = this.context;
			if(__map_reserved[prop] != null) {
				_this1.setReserved(prop,null);
			} else {
				_this1.h[prop] = null;
			}
		}
		this.interpreter.getters = this.classGetters;
		var _this2 = this.interpreter.variables;
		var __defaults = __map_reserved["__defaults"] != null ? _this2.getReserved("__defaults") : _this2.h["__defaults"];
		__defaults(this.context);
		this.interpreter.setters = this.classSetters;
	}
	,toString: function() {
		return "DynamicClass(" + this.instanceType + ")";
	}
	,__class__: interpret_DynamicClass
};
var interpret_DynamicInstance = function(dynamicClass) {
	this._contextArgs = null;
	this.context = null;
	this.dynamicClass = dynamicClass;
};
$hxClasses["interpret.DynamicInstance"] = interpret_DynamicInstance;
interpret_DynamicInstance.__name__ = ["interpret","DynamicInstance"];
interpret_DynamicInstance.prototype = {
	interpreter: null
	,dynamicClass: null
	,context: null
	,_contextArgs: null
	,init: function(args) {
		this.context = new haxe_ds_StringMap();
		var _this = this.context;
		var value = this.dynamicClass.instanceType;
		if(__map_reserved["__interpretType"] != null) {
			_this.setReserved("__interpretType",value);
		} else {
			_this.h["__interpretType"] = value;
		}
		var _this1 = this.context;
		if(__map_reserved["__interpretInstance"] != null) {
			_this1.setReserved("__interpretInstance",this);
		} else {
			_this1.h["__interpretInstance"] = this;
		}
		var _this2 = this.context;
		var value1 = this.dynamicClass;
		if(__map_reserved["__interpretClass"] != null) {
			_this2.setReserved("__interpretClass",value1);
		} else {
			_this2.h["__interpretClass"] = value1;
		}
		this._contextArgs = [this.dynamicClass.context,this.context];
		this.interpreter = new interpret_Interpreter(this.dynamicClass);
		this.interpreter.classInterpreter = this.dynamicClass.interpreter;
		this.interpreter.execute(this.dynamicClass.instanceProgram);
		var _g = 0;
		var _g1 = this.dynamicClass.instanceProperties;
		while(_g < _g1.length) {
			var prop = _g1[_g];
			++_g;
			var _this3 = this.context;
			if(__map_reserved[prop] != null) {
				_this3.setReserved(prop,null);
			} else {
				_this3.h[prop] = null;
			}
		}
		this.interpreter.getters = this.dynamicClass.instanceGetters;
		var _this4 = this.interpreter.variables;
		var __defaults = __map_reserved["__defaults"] != null ? _this4.getReserved("__defaults") : _this4.h["__defaults"];
		__defaults(this.dynamicClass.context,this.context);
		this.interpreter.setters = this.dynamicClass.instanceSetters;
		var env = this.dynamicClass.env;
		var superClassType = env.getSuperClass(this.dynamicClass.instanceType);
		if(superClassType != null) {
			var $module = null;
			var prefix = superClassType + ".";
			var _this5 = env.aliases;
			var alias = __map_reserved[superClassType] != null ? _this5.getReserved(superClassType) : _this5.h[superClassType];
			var aliasPrefix = alias + ".";
			var modulePath = env.modules.keys();
			while(modulePath.hasNext()) {
				var modulePath1 = modulePath.next();
				if(modulePath1 == superClassType || StringTools.startsWith(modulePath1,prefix)) {
					var _this6 = env.modules;
					if(__map_reserved[modulePath1] != null) {
						$module = _this6.getReserved(modulePath1);
					} else {
						$module = _this6.h[modulePath1];
					}
					break;
				}
				if(alias != null) {
					if(modulePath1 == alias || StringTools.startsWith(modulePath1,aliasPrefix)) {
						var _this7 = env.modules;
						if(__map_reserved[modulePath1] != null) {
							$module = _this7.getReserved(modulePath1);
						} else {
							$module = _this7.h[modulePath1];
						}
						break;
					}
				}
			}
			if($module != null) {
				var targetItem = null;
				var _this8 = $module.get_items();
				if(__map_reserved[superClassType] != null) {
					targetItem = _this8.getReserved(superClassType);
				} else {
					targetItem = _this8.h[superClassType];
				}
				if(alias != null) {
					var _this9 = $module.get_items();
					if(__map_reserved[alias] != null) {
						targetItem = _this9.getReserved(alias);
					} else {
						targetItem = _this9.h[alias];
					}
				}
				if(targetItem != null) {
					var _this10 = this.interpreter.variables;
					var value2 = interpret_RuntimeItem.SuperClassItem(targetItem);
					if(__map_reserved["super"] != null) {
						_this10.setReserved("super",value2);
					} else {
						_this10.h["super"] = value2;
					}
				}
			}
		}
		haxe_Log.trace(this.interpreter.variables.toString(),{ fileName : "DynamicInstance.hx", lineNumber : 99, className : "interpret.DynamicInstance", methodName : "init"});
		var _this11 = this.interpreter.variables;
		var _new = __map_reserved["new"] != null ? _this11.getReserved("new") : _this11.h["new"];
		if(_new != null) {
			var o = this.interpreter.variables;
			var args1 = args != null ? this._contextArgs.concat(args) : this._contextArgs;
			_new.apply(o,args1);
		}
	}
	,get: function(name) {
		var prevSelf = this.interpreter._self;
		var prevClassSelf = this.interpreter._classSelf;
		this.interpreter._self = this.context;
		this.interpreter._classSelf = this.dynamicClass.context;
		var result = interpret_TypeUtils.unwrap(this.interpreter.get(this.context,name));
		this.interpreter._self = prevSelf;
		this.interpreter._classSelf = prevClassSelf;
		return result;
	}
	,exists: function(name) {
		var prevUnresolved = this.interpreter._unresolved;
		this.interpreter._unresolved = interpret_Unresolved.UNRESOLVED;
		var result = this.get(name);
		this.interpreter._unresolved = prevUnresolved;
		return result != interpret_Unresolved.UNRESOLVED;
	}
	,set: function(name,value) {
		var prevSelf = this.interpreter._self;
		var prevClassSelf = this.interpreter._classSelf;
		this.interpreter._self = this.context;
		this.interpreter._classSelf = this.dynamicClass.context;
		var result = interpret_TypeUtils.unwrap(this.interpreter.set(this.context,name,value));
		this.interpreter._self = prevSelf;
		this.interpreter._classSelf = prevClassSelf;
		return result;
	}
	,call: function(name,args) {
		var prevSelf = this.interpreter._self;
		var prevClassSelf = this.interpreter._classSelf;
		this.interpreter._self = this.context;
		this.interpreter._classSelf = this.dynamicClass.context;
		var method = this.interpreter.get(this.context,name);
		this.interpreter._self = prevSelf;
		this.interpreter._classSelf = prevClassSelf;
		if(method == null) {
			throw new js__$Boot_HaxeError("Instance method not found: " + name);
		}
		return interpret_TypeUtils.unwrap(method.apply(null,args != null ? args : interpret_DynamicInstance.NO_ARGS));
	}
	,toString: function() {
		return "DynamicInstance(" + this.dynamicClass.instanceType + ")";
	}
	,__class__: interpret_DynamicInstance
};
var interpret_DynamicModule = function() {
	this.typePath = null;
	this.interfaces = new haxe_ds_StringMap();
	this.superClasses = new haxe_ds_StringMap();
	this.onLink = null;
	this.lazyLoad = null;
	this.aliases = new haxe_ds_StringMap();
	this.pack = null;
	this.usings = null;
	this.imports = null;
	this.dynamicClasses = null;
	this.items = null;
	this.id = interpret_DynamicModule._nextId++;
};
$hxClasses["interpret.DynamicModule"] = interpret_DynamicModule;
interpret_DynamicModule.__name__ = ["interpret","DynamicModule"];
interpret_DynamicModule.fromString = function(env,moduleName,haxe1) {
	var converter = new interpret_ConvertHaxe(haxe1);
	converter.convert();
	var $module = new interpret_DynamicModule();
	$module.dynamicClasses = new haxe_ds_StringMap();
	$module.imports = new interpret_ResolveImports(env);
	$module.usings = new interpret_ResolveUsings(env);
	var consumeTokens = function(shallow) {
		var currentClassPath = null;
		var dynClass = null;
		var modifiers = new haxe_ds_StringMap();
		var packagePrefix = "";
		var _g = 0;
		var _g1 = converter.tokens;
		while(_g < _g1.length) {
			var token = _g1[_g];
			++_g;
			switch(token[1]) {
			case 0:
				var data = token[2];
				$module.pack = data.path;
				if(data.path != null && data.path != "") {
					packagePrefix = data.path + ".";
				} else {
					packagePrefix = "";
				}
				break;
			case 1:
				var data1 = token[2];
				if(shallow) {
					continue;
				}
				$module.imports.addImport(data1);
				break;
			case 2:
				var data2 = token[2];
				if(shallow) {
					continue;
				}
				$module.usings.addUsing(data2);
				break;
			case 3:
				var data3 = token[2];
				var key = data3.name;
				if(__map_reserved[key] != null) {
					modifiers.setReserved(key,true);
				} else {
					modifiers.h[key] = true;
				}
				break;
			case 6:
				var data4 = token[2];
				if(currentClassPath != null) {
					if(__map_reserved["static"] != null ? modifiers.existsReserved("static") : modifiers.h.hasOwnProperty("static")) {
						if(data4.kind == interpret_TFieldKind.VAR) {
							$module.add(currentClassPath + "." + data4.name,null,1,null);
						} else if(data4.kind == interpret_TFieldKind.METHOD) {
							var extendedType = null;
							if(data4.args.length > 0) {
								var firstArg = data4.args[0];
								if(firstArg.type != null) {
									extendedType = firstArg.type;
								}
							}
							if(extendedType != null) {
								extendedType = interpret_TypeUtils.toResolvedType($module.imports,extendedType);
							}
							$module.add(currentClassPath + "." + data4.name,null,1,extendedType);
						}
					}
				}
				break;
			case 7:
				var data5 = token[2];
				if(data5.kind == interpret_TTypeKind.CLASS) {
					if(shallow) {
						dynClass = null;
					} else {
						dynClass = new interpret_DynamicClass(env,{ tokens : converter.tokens, targetClass : data5.name});
					}
					if(!shallow) {
						$module.dynamicClasses.set(data5.name,dynClass);
					}
					currentClassPath = packagePrefix + (data5.name == moduleName ? data5.name : moduleName + "." + data5.name);
					$module.add(currentClassPath,null,0,null);
					if(!shallow) {
						if(data5.parent != null) {
							var consumeTokens1 = interpret_TypeUtils.toResolvedType($module.imports,data5.parent.name);
							$module.addSuperClass(currentClassPath,consumeTokens1);
						}
						if(data5.interfaces != null) {
							var _g2 = 0;
							var _g3 = data5.interfaces;
							while(_g2 < _g3.length) {
								var item = _g3[_g2];
								++_g2;
								var consumeTokens2 = interpret_TypeUtils.toResolvedType($module.imports,item.name);
								$module.addInterface(currentClassPath,consumeTokens2);
							}
						}
					}
				} else {
					currentClassPath = null;
					dynClass = null;
				}
				modifiers = new haxe_ds_StringMap();
				break;
			default:
			}
		}
	};
	consumeTokens(true);
	$module.onLink = function() {
		consumeTokens(false);
	};
	return $module;
};
interpret_DynamicModule.prototype = {
	id: null
	,items: null
	,get_items: function() {
		if(!interpret_DynamicModule._adding && this.lazyLoad != null) {
			if(this.lazyLoad != null) {
				var cb = this.lazyLoad;
				this.lazyLoad = null;
				cb(this);
			}
		}
		return this.items;
	}
	,dynamicClasses: null
	,imports: null
	,usings: null
	,pack: null
	,aliases: null
	,lazyLoad: null
	,onLink: null
	,superClasses: null
	,interfaces: null
	,typePath: null
	,add: function(name,rawItem,kind,extra) {
		interpret_DynamicModule._adding = true;
		if(this.get_items() == null) {
			this.items = new haxe_ds_StringMap();
		}
		switch(kind) {
		case 0:
			this.get_items().set(name,interpret_RuntimeItem.ClassItem(rawItem,this.id,name));
			break;
		case 1:
			var extendedType = extra;
			if(extendedType != null) {
				this.get_items().set(name,interpret_RuntimeItem.ExtensionItem(interpret_RuntimeItem.ClassFieldItem(rawItem,this.id,name),extendedType));
			} else {
				this.get_items().set(name,interpret_RuntimeItem.ClassFieldItem(rawItem,this.id,name));
			}
			break;
		case 2:
			this.get_items().set(name,interpret_RuntimeItem.EnumItem(rawItem,this.id,name));
			break;
		case 3:
			var numArgs = extra;
			this.get_items().set(name,interpret_RuntimeItem.EnumFieldItem(rawItem,name,numArgs));
			break;
		default:
		}
		interpret_DynamicModule._adding = false;
	}
	,alias: function(alias,name) {
		var _this = this.aliases;
		if(__map_reserved[alias] != null) {
			_this.setReserved(alias,name);
		} else {
			_this.h[alias] = name;
		}
	}
	,addSuperClass: function(child,superClass) {
		var _this = this.superClasses;
		if(__map_reserved[child] != null) {
			_this.setReserved(child,superClass);
		} else {
			_this.h[child] = superClass;
		}
	}
	,addInterface: function(child,interface_) {
		var _this = this.interfaces;
		var subItems = __map_reserved[child] != null ? _this.getReserved(child) : _this.h[child];
		if(subItems == null) {
			subItems = new haxe_ds_StringMap();
			var _this1 = this.interfaces;
			if(__map_reserved[child] != null) {
				_this1.setReserved(child,subItems);
			} else {
				_this1.h[child] = subItems;
			}
		}
		if(__map_reserved[interface_] != null) {
			subItems.setReserved(interface_,true);
		} else {
			subItems.h[interface_] = true;
		}
	}
	,toString: function() {
		return "DynamicModule(" + this.typePath + ")";
	}
	,__class__: interpret_DynamicModule
	,__properties__: {get_items:"get_items"}
};
var interpret_DynamicPackage = function(env,path) {
	this.resolvedSubs = new haxe_ds_StringMap();
	this.env = env;
	this.path = path;
};
$hxClasses["interpret.DynamicPackage"] = interpret_DynamicPackage;
interpret_DynamicPackage.__name__ = ["interpret","DynamicPackage"];
interpret_DynamicPackage.prototype = {
	env: null
	,path: null
	,resolvedSubs: null
	,getSub: function(subPath) {
		var _this = this.resolvedSubs;
		if(__map_reserved[subPath] != null ? _this.existsReserved(subPath) : _this.h.hasOwnProperty(subPath)) {
			var _this1 = this.resolvedSubs;
			if(__map_reserved[subPath] != null) {
				return _this1.getReserved(subPath);
			} else {
				return _this1.h[subPath];
			}
		}
		var fullPath = this.path + "." + subPath;
		var _this2 = this.env.modules;
		var $module = __map_reserved[fullPath] != null ? _this2.getReserved(fullPath) : _this2.h[fullPath];
		if($module != null) {
			var _this3 = $module.get_items();
			var resolved = __map_reserved[fullPath] != null ? _this3.getReserved(fullPath) : _this3.h[fullPath];
			if(resolved != null) {
				var _this4 = this.resolvedSubs;
				if(__map_reserved[subPath] != null) {
					_this4.setReserved(subPath,resolved);
				} else {
					_this4.h[subPath] = resolved;
				}
				return resolved;
			}
		}
		var resolved1 = this.env.getPackage(fullPath);
		var _this5 = this.resolvedSubs;
		if(__map_reserved[subPath] != null) {
			_this5.setReserved(subPath,resolved1);
		} else {
			_this5.h[subPath] = resolved1;
		}
		return resolved1;
	}
	,__class__: interpret_DynamicPackage
};
var interpret_Env = function() {
	this.resolvedDynamicClasses = new haxe_ds_StringMap();
	this.interfaces = new haxe_ds_StringMap();
	this.superClasses = new haxe_ds_StringMap();
	this.availablePacks = new haxe_ds_StringMap();
	this.packs = new haxe_ds_StringMap();
	this.modulesById = new haxe_ds_IntMap();
	this.aliases = new haxe_ds_StringMap();
	this.modules = new haxe_ds_StringMap();
};
$hxClasses["interpret.Env"] = interpret_Env;
interpret_Env.__name__ = ["interpret","Env"];
interpret_Env.prototype = {
	modules: null
	,aliases: null
	,modulesById: null
	,packs: null
	,availablePacks: null
	,superClasses: null
	,interfaces: null
	,resolvedDynamicClasses: null
	,link: function() {
		var allOnLink = [];
		var _this = this.modules;
		var $module = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while($module.hasNext()) {
			var module1 = $module.next();
			if(module1.onLink != null) {
				var onLink = module1.onLink;
				module1.onLink = null;
				allOnLink.push(onLink);
			}
		}
		var _g = 0;
		while(_g < allOnLink.length) {
			var onLink1 = allOnLink[_g];
			++_g;
			onLink1();
		}
		var _g1 = 0;
		while(_g1 < allOnLink.length) {
			var onLink2 = allOnLink[_g1];
			++_g1;
			onLink2();
		}
		var _this1 = this.modules;
		var module2 = new haxe_ds__$StringMap_StringMapIterator(_this1,_this1.arrayKeys());
		while(module2.hasNext()) {
			var module3 = module2.next();
			this.extractModuleInfo(module3);
		}
	}
	,addDefaultModules: function() {
		var $module = new interpret_DynamicModule();
		$module.pack = "";
		$module.lazyLoad = function(mod) {
			mod.add("Std",Std,0,null);
			mod.add("Std.is",Std["is"],1,null);
			mod.add("Std.instance",Std.instance,1,"instance.T");
			mod.add("Std.string",Std.string,1,null);
			mod.add("Std.int",Std["int"],1,"Float");
			mod.add("Std.parseInt",Std.parseInt,1,"String");
			mod.add("Std.parseFloat",Std.parseFloat,1,"String");
			mod.add("Std.random",Std.random,1,"Int");
		};
		var stdModule = $module;
		var this1 = stdModule.get_items();
		var value = interpret_RuntimeItem.ClassFieldItem($bind(this,this["is"]),stdModule.id,"Std.is");
		var _this = this1;
		if(__map_reserved["Std.is"] != null) {
			_this.setReserved("Std.is",value);
		} else {
			_this.h["Std.is"] = value;
		}
		this.addModule("Std",stdModule);
	}
	,addModule: function(typePath,module) {
		this.modulesById.h[module.id] = module;
		var _this = this.modules;
		if(__map_reserved[typePath] != null) {
			_this.setReserved(typePath,module);
		} else {
			_this.h[typePath] = module;
		}
		if(module.typePath == null) {
			module.typePath = typePath;
		}
		this.extractModuleInfo(module);
	}
	,getPackage: function(path) {
		var _this = this.availablePacks;
		if(!(__map_reserved[path] != null ? _this.existsReserved(path) : _this.h.hasOwnProperty(path))) {
			return null;
		}
		var _this1 = this.packs;
		if(!(__map_reserved[path] != null ? _this1.existsReserved(path) : _this1.h.hasOwnProperty(path))) {
			var pack = new interpret_DynamicPackage(this,path);
			var _this2 = this.packs;
			if(__map_reserved[path] != null) {
				_this2.setReserved(path,pack);
			} else {
				_this2.h[path] = pack;
			}
		}
		var _this3 = this.packs;
		if(__map_reserved[path] != null) {
			return _this3.getReserved(path);
		} else {
			return _this3.h[path];
		}
	}
	,getSuperClass: function(classPath) {
		var _this = this.superClasses;
		var parent = __map_reserved[classPath] != null ? _this.getReserved(classPath) : _this.h[classPath];
		if(parent != null) {
			return parent;
		}
		var _this1 = this.aliases;
		var alias = __map_reserved[classPath] != null ? _this1.getReserved(classPath) : _this1.h[classPath];
		if(alias == null) {
			return null;
		}
		var _this2 = this.superClasses;
		if(__map_reserved[alias] != null) {
			return _this2.getReserved(alias);
		} else {
			return _this2.h[alias];
		}
	}
	,getInterfaces: function(classPath) {
		var _this = this.interfaces;
		var subItems = __map_reserved[classPath] != null ? _this.getReserved(classPath) : _this.h[classPath];
		if(subItems != null) {
			return subItems;
		}
		var _this1 = this.aliases;
		var alias = __map_reserved[classPath] != null ? _this1.getReserved(classPath) : _this1.h[classPath];
		if(alias == null) {
			return null;
		}
		var _this2 = this.interfaces;
		if(__map_reserved[alias] != null) {
			return _this2.getReserved(alias);
		} else {
			return _this2.h[alias];
		}
	}
	,resolveDynamicClass: function(moduleId,name) {
		var _this = this.resolvedDynamicClasses;
		var resolved = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		var tmp;
		if(resolved == null) {
			var _this1 = this.resolvedDynamicClasses;
			if(__map_reserved[name] != null) {
				tmp = _this1.existsReserved(name);
			} else {
				tmp = _this1.h.hasOwnProperty(name);
			}
		} else {
			tmp = true;
		}
		if(tmp) {
			return resolved;
		}
		var $module = this.modulesById.h[moduleId];
		if($module != null) {
			var className = name;
			if($module.pack != null && $module.pack != "") {
				className = className.substring($module.pack.length + 1);
			}
			var _this2 = $module.dynamicClasses;
			var dynClass = __map_reserved[className] != null ? _this2.getReserved(className) : _this2.h[className];
			if(dynClass != null) {
				var _this3 = this.resolvedDynamicClasses;
				if(__map_reserved[name] != null) {
					_this3.setReserved(name,dynClass);
				} else {
					_this3.h[name] = dynClass;
				}
				return dynClass;
			}
			var _this4 = this.aliases;
			var alias = __map_reserved[name] != null ? _this4.getReserved(name) : _this4.h[name];
			if(alias != null) {
				className = alias;
				if($module.pack != null && $module.pack != "") {
					className = className.substring($module.pack.length + 1);
				}
				var _this5 = $module.dynamicClasses;
				if(__map_reserved[alias] != null) {
					dynClass = _this5.getReserved(alias);
				} else {
					dynClass = _this5.h[alias];
				}
				if(dynClass != null) {
					var _this6 = this.resolvedDynamicClasses;
					if(__map_reserved[name] != null) {
						_this6.setReserved(name,dynClass);
					} else {
						_this6.h[name] = dynClass;
					}
					return dynClass;
				}
			}
		}
		var _this7 = this.resolvedDynamicClasses;
		if(__map_reserved[name] != null) {
			_this7.setReserved(name,null);
		} else {
			_this7.h[name] = null;
		}
		return null;
	}
	,patchInterpretableClass: function(interpratableClass,dynamicClass) {
	}
	,'is': function(v,t) {
		haxe_Log.trace("this = " + Std.string(this),{ fileName : "Env.hx", lineNumber : 175, className : "interpret.Env", methodName : "is"});
		v = interpret_TypeUtils.unwrap(v);
		t = interpret_TypeUtils.unwrap(t);
		var vType = null;
		var tClassType = null;
		if(js_Boot.__instanceof(v,interpret_DynamicClass._contextType) && v.exists("__interpretType")) {
			vType = v.get("__interpretType");
		}
		if(js_Boot.__instanceof(t,interpret_DynamicClass)) {
			tClassType = interpret_TypeUtils.typeOf(t,this);
		}
		if(vType == null && tClassType == null) {
			return js_Boot.__instanceof(v,t);
		} else {
			if(vType == null) {
				vType = interpret_TypeUtils.typeOf(v);
			}
			if(tClassType == null) {
				tClassType = interpret_TypeUtils.typeOf(t);
			}
			return this.isKindOfClass(vType,tClassType);
		}
	}
	,isKindOfClass: function(vType,tClassType) {
		if(tClassType.indexOf(" ") != -1) {
			tClassType = StringTools.replace(tClassType," ","");
		}
		if(!StringTools.startsWith(tClassType,"Class<")) {
			return false;
		}
		return this.isKindOf(vType,tClassType.substring(6,tClassType.length - 1));
	}
	,isKindOf: function(vType,tType) {
		var _this = this.aliases;
		var tAlias = __map_reserved[tType] != null ? _this.getReserved(tType) : _this.h[tType];
		var vActive = vType;
		while(vActive != null) {
			if(vActive == tType) {
				return true;
			}
			if(tAlias != null && vActive == tAlias) {
				return true;
			}
			var _this1 = this.aliases;
			var vAlias = __map_reserved[vActive] != null ? _this1.getReserved(vActive) : _this1.h[vActive];
			if(vAlias != null) {
				if(vAlias == tType) {
					return true;
				}
				if(vAlias == tAlias) {
					return true;
				}
			}
			var interfaces = this.getInterfaces(vActive);
			if(interfaces != null) {
				var item = interfaces.keys();
				while(item.hasNext()) {
					var item1 = item.next();
					var iActive = item1;
					while(iActive != null) {
						if(iActive == tType) {
							return true;
						}
						if(iActive == tAlias) {
							return true;
						}
						var _this2 = this.aliases;
						var iAlias = __map_reserved[iActive] != null ? _this2.getReserved(iActive) : _this2.h[iActive];
						if(iAlias != null) {
							if(iAlias == tType) {
								return true;
							}
							if(iAlias == tAlias) {
								return true;
							}
						}
						iActive = this.getSuperClass(iActive);
					}
				}
			}
			vActive = this.getSuperClass(vActive);
		}
		return false;
	}
	,extractModuleInfo: function(module) {
		if(module.pack != null) {
			var parts = module.pack.split(".");
			var _this = this.availablePacks;
			var key = parts[0];
			if(__map_reserved[key] != null) {
				_this.setReserved(key,true);
			} else {
				_this.h[key] = true;
			}
		}
		if(module.aliases != null) {
			var key1 = module.aliases.keys();
			while(key1.hasNext()) {
				var key2 = key1.next();
				var _this1 = module.aliases;
				var val = __map_reserved[key2] != null ? _this1.getReserved(key2) : _this1.h[key2];
				var _this2 = this.aliases;
				if(!(__map_reserved[key2] != null ? _this2.existsReserved(key2) : _this2.h.hasOwnProperty(key2))) {
					var _this3 = this.aliases;
					if(__map_reserved[key2] != null) {
						_this3.setReserved(key2,val);
					} else {
						_this3.h[key2] = val;
					}
				}
				var _this4 = this.aliases;
				if(!(__map_reserved[val] != null ? _this4.existsReserved(val) : _this4.h.hasOwnProperty(val))) {
					var _this5 = this.aliases;
					if(__map_reserved[val] != null) {
						_this5.setReserved(val,key2);
					} else {
						_this5.h[val] = key2;
					}
				}
			}
		}
		if(module.superClasses != null) {
			var key3 = module.superClasses.keys();
			while(key3.hasNext()) {
				var key4 = key3.next();
				var _this6 = module.superClasses;
				var val1 = __map_reserved[key4] != null ? _this6.getReserved(key4) : _this6.h[key4];
				var _this7 = this.superClasses;
				if(!(__map_reserved[key4] != null ? _this7.existsReserved(key4) : _this7.h.hasOwnProperty(key4))) {
					var _this8 = this.superClasses;
					if(__map_reserved[key4] != null) {
						_this8.setReserved(key4,val1);
					} else {
						_this8.h[key4] = val1;
					}
				}
			}
		}
		if(module.interfaces != null) {
			var key5 = module.interfaces.keys();
			while(key5.hasNext()) {
				var key6 = key5.next();
				var _this9 = module.interfaces;
				var subItems = __map_reserved[key6] != null ? _this9.getReserved(key6) : _this9.h[key6];
				var _this10 = this.interfaces;
				var envSubItems = __map_reserved[key6] != null ? _this10.getReserved(key6) : _this10.h[key6];
				if(envSubItems == null) {
					var _this11 = this.aliases;
					var aliasKey = __map_reserved[key6] != null ? _this11.getReserved(key6) : _this11.h[key6];
					var _this12 = this.interfaces;
					if(__map_reserved[aliasKey] != null) {
						envSubItems = _this12.getReserved(aliasKey);
					} else {
						envSubItems = _this12.h[aliasKey];
					}
					if(envSubItems == null) {
						envSubItems = new haxe_ds_StringMap();
						var _this13 = this.interfaces;
						if(__map_reserved[key6] != null) {
							_this13.setReserved(key6,envSubItems);
						} else {
							_this13.h[key6] = envSubItems;
						}
					}
				}
				var subKey = subItems.keys();
				while(subKey.hasNext()) {
					var subKey1 = subKey.next();
					if(__map_reserved[subKey1] != null) {
						envSubItems.setReserved(subKey1,true);
					} else {
						envSubItems.h[subKey1] = true;
					}
				}
			}
		}
	}
	,toString: function() {
		return "Env()";
	}
	,__class__: interpret_Env
};
var interpret_Interpretable = function() { };
$hxClasses["interpret.Interpretable"] = interpret_Interpretable;
interpret_Interpretable.__name__ = ["interpret","Interpretable"];
var interpret_Interpreter = function(dynamicClass,selfName,classInterpreter) {
	if(selfName == null) {
		selfName = "this";
	}
	this._unresolved = null;
	this._queryingInterpreter = null;
	this._classSelf = null;
	this._self = null;
	this.env = null;
	this.setters = null;
	this.getters = null;
	this.oldLocals = [];
	hscript_Interp.call(this);
	this.dynamicClass = dynamicClass;
	this.env = dynamicClass.env;
	this.selfName = selfName;
	this.classInterpreter = classInterpreter;
	var _this = this.variables;
	if(__map_reserved["null"] != null) {
		_this.setReserved("null",null);
	} else {
		_this.h["null"] = null;
	}
	var _this1 = this.variables;
	if(__map_reserved["false"] != null) {
		_this1.setReserved("false",false);
	} else {
		_this1.h["false"] = false;
	}
	var _this2 = this.variables;
	if(__map_reserved["true"] != null) {
		_this2.setReserved("true",true);
	} else {
		_this2.h["true"] = true;
	}
};
$hxClasses["interpret.Interpreter"] = interpret_Interpreter;
interpret_Interpreter.__name__ = ["interpret","Interpreter"];
interpret_Interpreter.__super__ = hscript_Interp;
interpret_Interpreter.prototype = $extend(hscript_Interp.prototype,{
	oldLocals: null
	,selfName: null
	,classInterpreter: null
	,getters: null
	,setters: null
	,env: null
	,dynamicClass: null
	,_self: null
	,_classSelf: null
	,_queryingInterpreter: null
	,_unresolved: null
	,beginBlock: function() {
		this.oldLocals.push(this.declared.length);
	}
	,endBlock: function() {
		this.restore(this.oldLocals.pop());
	}
	,hasGetter: function(id) {
		if(this.getters != null) {
			var _this = this.getters;
			if(__map_reserved[id] != null) {
				return _this.existsReserved(id);
			} else {
				return _this.h.hasOwnProperty(id);
			}
		} else {
			return false;
		}
	}
	,hasSetter: function(id) {
		if(this.setters != null) {
			var _this = this.setters;
			if(__map_reserved[id] != null) {
				return _this.existsReserved(id);
			} else {
				return _this.h.hasOwnProperty(id);
			}
		} else {
			return false;
		}
	}
	,existsAsExtension: function(name) {
		if(this._queryingInterpreter != null) {
			return this._queryingInterpreter.dynamicClass.usings.addedItems.exists(name);
		}
		return this.dynamicClass.usings.addedItems.exists(name);
	}
	,resolve: function(id) {
		var _this = this.locals;
		var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(l != null) {
			return l.r;
		}
		var self;
		if(this._self != null) {
			self = this._self;
		} else {
			var key = this.selfName;
			var _this1 = this.locals;
			self = (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).r;
		}
		if(this.getters != null && this.getters.exists(id)) {
			if(this.classInterpreter != null) {
				var classSelf;
				if(this._classSelf != null) {
					classSelf = this._classSelf;
				} else {
					var key1 = this.classInterpreter.selfName;
					var _this2 = this.locals;
					classSelf = (__map_reserved[key1] != null ? _this2.getReserved(key1) : _this2.h[key1]).r;
				}
				var _this3 = this.variables;
				var key2 = "get_" + id;
				return (__map_reserved[key2] != null ? _this3.getReserved(key2) : _this3.h[key2])(classSelf,self);
			} else {
				var _this4 = this.variables;
				var key3 = "get_" + id;
				return (__map_reserved[key3] != null ? _this4.getReserved(key3) : _this4.h[key3])(self);
			}
		}
		if(__map_reserved[id] != null ? self.existsReserved(id) : self.h.hasOwnProperty(id)) {
			return __map_reserved[id] != null ? self.getReserved(id) : self.h[id];
		}
		var superInstance = __map_reserved["super"] != null ? self.getReserved("super") : self.h["super"];
		if(superInstance != null) {
			if(js_Boot.__instanceof(superInstance,interpret_DynamicInstance)) {
				var dynInst = superInstance;
				var prevQueryingInterpreter = dynInst.interpreter._queryingInterpreter;
				var prevUnresolved = dynInst.interpreter._unresolved;
				dynInst.interpreter._queryingInterpreter = this;
				dynInst.interpreter._unresolved = interpret_Unresolved.UNRESOLVED;
				var result = dynInst.get(id);
				dynInst.interpreter._queryingInterpreter = prevQueryingInterpreter;
				dynInst.interpreter._unresolved = prevUnresolved;
				if(result != interpret_Unresolved.UNRESOLVED) {
					return result;
				}
			} else {
				var result1 = hscript_Interp.prototype.get.call(this,superInstance,id);
				if(result1 != null || Object.prototype.hasOwnProperty.call(superInstance,id) || Object.prototype.hasOwnProperty.call(superInstance,"get_" + id)) {
					if(Reflect.isFunction(result1)) {
						return Reflect.makeVarArgs(function(args) {
							return result1.apply(superInstance,args);
						});
					} else {
						return result1;
					}
				}
			}
		}
		var _this5 = this.variables;
		if(__map_reserved[id] != null ? _this5.existsReserved(id) : _this5.h.hasOwnProperty(id)) {
			var _this6 = this.variables;
			var result2 = __map_reserved[id] != null ? _this6.getReserved(id) : _this6.h[id];
			if(id != "trace" && Reflect.isFunction(result2)) {
				if(this.classInterpreter != null) {
					var classSelf1;
					if(this._classSelf != null) {
						classSelf1 = this._classSelf;
					} else {
						var key4 = this.classInterpreter.selfName;
						var _this7 = this.locals;
						classSelf1 = (__map_reserved[key4] != null ? _this7.getReserved(key4) : _this7.h[key4]).r;
					}
					var selfArgs = [classSelf1,self];
					return Reflect.makeVarArgs(function(args1) {
						var args2 = args1 == null || args1.length == 0 ? selfArgs : selfArgs.concat(args1);
						return result2.apply(null,args2);
					});
				} else {
					var selfArgs1 = [self];
					return Reflect.makeVarArgs(function(args3) {
						var args4 = args3 == null || args3.length == 0 ? selfArgs1 : selfArgs1.concat(args3);
						return result2.apply(null,args4);
					});
				}
			}
			return result2;
		}
		if(this.classInterpreter != null) {
			var key5 = this.classInterpreter.selfName;
			var _this8 = this.locals;
			var classSelf2 = (__map_reserved[key5] != null ? _this8.getReserved(key5) : _this8.h[key5]).r;
			var _this9 = this.classInterpreter;
			if(_this9.getters != null && _this9.getters.exists(id)) {
				var _this10 = this.classInterpreter.variables;
				var key6 = "get_" + id;
				return (__map_reserved[key6] != null ? _this10.getReserved(key6) : _this10.h[key6])(classSelf2);
			}
			if(__map_reserved[id] != null ? classSelf2.existsReserved(id) : classSelf2.h.hasOwnProperty(id)) {
				return __map_reserved[id] != null ? classSelf2.getReserved(id) : classSelf2.h[id];
			}
			var _this11 = this.classInterpreter.variables;
			if(__map_reserved[id] != null ? _this11.existsReserved(id) : _this11.h.hasOwnProperty(id)) {
				var _this12 = this.classInterpreter.variables;
				if(__map_reserved[id] != null) {
					return _this12.getReserved(id);
				} else {
					return _this12.h[id];
				}
			}
		}
		var moduleItem = this.dynamicClass.imports.items.get(id);
		if(moduleItem != null) {
			return this.unwrap(moduleItem);
		}
		var _this13 = this.env.modules;
		if(__map_reserved[id] != null ? _this13.existsReserved(id) : _this13.h.hasOwnProperty(id)) {
			var _this14 = this.env.modules;
			var $module = __map_reserved[id] != null ? _this14.getReserved(id) : _this14.h[id];
			var _this15 = $module.get_items();
			if(__map_reserved[id] != null) {
				moduleItem = _this15.getReserved(id);
			} else {
				moduleItem = _this15.h[id];
			}
			if(moduleItem != null) {
				if(moduleItem[1] == 0) {
					var subItem = moduleItem[2];
					return subItem;
				} else {
					return moduleItem;
				}
			}
		}
		var pack = this.env.getPackage(id);
		if(pack != null) {
			return interpret_RuntimeItem.PackageItem(pack);
		}
		return null;
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		switch(e1[1]) {
		case 1:
			var id = e1[2];
			var l = this.locals.get(id);
			if(l == null) {
				var self = this.locals.get(this.selfName).r;
				var superInstance = __map_reserved["super"] != null ? self.getReserved("super") : self.h["super"];
				if(superInstance != null) {
					if(js_Boot.__instanceof(superInstance,interpret_DynamicInstance)) {
						var dynInst = superInstance;
						var prevQueryingInterpreter = dynInst.interpreter._queryingInterpreter;
						var prevUnresolved = dynInst.interpreter._unresolved;
						dynInst.interpreter._queryingInterpreter = this;
						dynInst.interpreter._unresolved = interpret_Unresolved.UNRESOLVED;
						var result = dynInst.set(id,v);
						dynInst.interpreter._queryingInterpreter = prevQueryingInterpreter;
						dynInst.interpreter._unresolved = prevUnresolved;
						if(result != interpret_Unresolved.UNRESOLVED) {
							return result;
						}
					} else {
						var result1 = Reflect.field(superInstance,id);
						var setter_result = Reflect.field(superInstance,"set_" + id);
						if(result1 != null || setter_result != null || Object.prototype.hasOwnProperty.call(superInstance,id) || Object.prototype.hasOwnProperty.call(superInstance,"set_" + id)) {
							Reflect.setProperty(superInstance,id,v);
							return v;
						}
					}
				}
				if(this.setters != null && this.setters.exists(id)) {
					if(this.classInterpreter != null) {
						var classSelf = this._classSelf != null ? this._classSelf : this.locals.get(this.classInterpreter.selfName).r;
						return this.variables.get("set_" + id)(classSelf,self,v);
					} else {
						return this.variables.get("set_" + id)(self,v);
					}
				} else {
					var tmp;
					if(this.classInterpreter != null) {
						var _this = this.classInterpreter;
						if(_this.setters != null) {
							tmp = _this.setters.exists(id);
						} else {
							tmp = false;
						}
					} else {
						tmp = false;
					}
					if(tmp) {
						var classSelf1 = this._classSelf != null ? this._classSelf : this.locals.get(this.classInterpreter.selfName).r;
						return this.classInterpreter.variables.get("set_" + id)(classSelf1,v);
					} else {
						return v;
					}
				}
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1[3];
			var e = e1[2];
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var index = e1[3];
			var e3 = e1[2];
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			var e4 = hscript_Error.EInvalidOp("=");
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,get: function(o,f) {
		if(f == "staticExt") {
			haxe_Log.trace("GET " + Std.string(o) + " " + f,{ fileName : "Interpreter.hx", lineNumber : 276, className : "interpret.Interpreter", methodName : "get"});
		}
		var self;
		if(this._self != null) {
			self = this._self;
		} else {
			var key = this.selfName;
			var _this = this.locals;
			self = (__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]).r;
		}
		if(o == self) {
			if(this.getters != null && this.getters.exists(f)) {
				if(this.classInterpreter != null) {
					var classSelf;
					if(this._classSelf != null) {
						classSelf = this._classSelf;
					} else {
						var key1 = this.classInterpreter.selfName;
						var _this1 = this.locals;
						classSelf = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]).r;
					}
					var _this2 = this.variables;
					var key2 = "get_" + f;
					return (__map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2])(classSelf,self);
				} else {
					var _this3 = this.variables;
					var key3 = "get_" + f;
					return (__map_reserved[key3] != null ? _this3.getReserved(key3) : _this3.h[key3])(self);
				}
			} else if(__map_reserved[f] != null ? self.existsReserved(f) : self.h.hasOwnProperty(f)) {
				return __map_reserved[f] != null ? self.getReserved(f) : self.h[f];
			} else {
				var _this4 = this.variables;
				if(__map_reserved[f] != null ? _this4.existsReserved(f) : _this4.h.hasOwnProperty(f)) {
					var _this5 = this.variables;
					var result = __map_reserved[f] != null ? _this5.getReserved(f) : _this5.h[f];
					if(Reflect.isFunction(result)) {
						if(this.classInterpreter != null) {
							var classSelf1;
							if(this._classSelf != null) {
								classSelf1 = this._classSelf;
							} else {
								var key4 = this.classInterpreter.selfName;
								var _this6 = this.locals;
								classSelf1 = (__map_reserved[key4] != null ? _this6.getReserved(key4) : _this6.h[key4]).r;
							}
							var selfArgs = [classSelf1,self];
							return Reflect.makeVarArgs(function(args) {
								var args1 = args == null || args.length == 0 ? selfArgs : selfArgs.concat(args);
								return result.apply(null,args1);
							});
						} else {
							var selfArgs1 = [self];
							return Reflect.makeVarArgs(function(args2) {
								var args3 = args2 == null || args2.length == 0 ? selfArgs1 : selfArgs1.concat(args2);
								return result.apply(null,args3);
							});
						}
					}
					return result;
				}
			}
			var superInstance = __map_reserved["super"] != null ? self.getReserved("super") : self.h["super"];
			if(superInstance != null) {
				if(js_Boot.__instanceof(superInstance,interpret_DynamicInstance)) {
					var dynInst = superInstance;
					var prevQueryingInterpreter = dynInst.interpreter._queryingInterpreter;
					var prevUnresolved = dynInst.interpreter._unresolved;
					dynInst.interpreter._queryingInterpreter = this;
					dynInst.interpreter._unresolved = interpret_Unresolved.UNRESOLVED;
					var result1 = dynInst.get(f);
					dynInst.interpreter._queryingInterpreter = prevQueryingInterpreter;
					dynInst.interpreter._unresolved = prevUnresolved;
					if(result1 != interpret_Unresolved.UNRESOLVED) {
						return result1;
					}
				} else {
					var result2 = hscript_Interp.prototype.get.call(this,superInstance,f);
					if(result2 != null || Object.prototype.hasOwnProperty.call(superInstance,f) || Object.prototype.hasOwnProperty.call(superInstance,"get_" + f)) {
						return result2;
					}
				}
			}
			if(this.existsAsExtension(f)) {
				if(this._queryingInterpreter != null) {
					var typePath = this._queryingInterpreter.dynamicClass.instanceType;
					var resolved = this._queryingInterpreter.dynamicClass.usings.resolve(typePath,f);
					if(resolved != null) {
						return resolved;
					}
				} else {
					var typePath1 = this.dynamicClass.instanceType;
					var resolved1 = this.dynamicClass.usings.resolve(typePath1,f);
					if(resolved1 != null) {
						return resolved1;
					}
				}
			}
			return this._unresolved;
		}
		var classSelf2;
		if(this.classInterpreter != null) {
			if(this._classSelf != null) {
				classSelf2 = this._classSelf;
			} else {
				var key5 = this.classInterpreter.selfName;
				var _this7 = this.locals;
				classSelf2 = (__map_reserved[key5] != null ? _this7.getReserved(key5) : _this7.h[key5]).r;
			}
		} else {
			classSelf2 = null;
		}
		if(classSelf2 != null && o == classSelf2) {
			var _this8 = this.classInterpreter;
			if(_this8.getters != null && _this8.getters.exists(f)) {
				var _this9 = this.classInterpreter.variables;
				var key6 = "get_" + f;
				return (__map_reserved[key6] != null ? _this9.getReserved(key6) : _this9.h[key6])(classSelf2);
			} else if(__map_reserved[f] != null ? classSelf2.existsReserved(f) : classSelf2.h.hasOwnProperty(f)) {
				return __map_reserved[f] != null ? classSelf2.getReserved(f) : classSelf2.h[f];
			} else if(this.existsAsExtension(f)) {
				var typePath2 = this.dynamicClass.classType;
				var resolved2 = this.dynamicClass.usings.resolve(typePath2,f);
				if(resolved2 != null) {
					return resolved2;
				}
			}
			return null;
		} else if(js_Boot.__instanceof(o,interpret_RuntimeItem)) {
			var moduleItem = o;
			switch(moduleItem[1]) {
			case 0:
				if(moduleItem[2][1] == 1) {
					var rawItem = moduleItem[2][2];
					return hscript_Interp.prototype.get.call(this,rawItem,f);
				} else {
					return null;
				}
				break;
			case 1:
				var rawItem1 = moduleItem[2];
				return hscript_Interp.prototype.get.call(this,rawItem1,f);
			case 2:
				var name = moduleItem[4];
				var moduleId = moduleItem[3];
				var rawItem2 = moduleItem[2];
				var $module = this.env.modulesById.get(moduleId);
				var key7 = name + "." + f;
				if($module.get_items().exists(key7)) {
					return this.unwrap($module.get_items().get(name + "." + f));
				} else if(this.existsAsExtension(f)) {
					var typePath3 = interpret_TypeUtils.typeOf(o,this.env);
					var resolved3 = this.dynamicClass.usings.resolve(typePath3,f);
					if(resolved3 != null) {
						return resolved3;
					}
				}
				return null;
			case 3:
				var name1 = moduleItem[4];
				var moduleId1 = moduleItem[3];
				var rawItem3 = moduleItem[2];
				var module1 = this.env.modulesById.get(moduleId1);
				var resolved4 = module1.get_items().get(name1 + "." + f);
				if(resolved4[1] == 4) {
					var numArgs = resolved4[4];
					var name2 = resolved4[3];
					var rawItem4 = resolved4[2];
					return rawItem4;
				} else {
					return resolved4;
				}
				break;
			case 5:
				var pack = moduleItem[2];
				return this.unwrap(pack.getSub(f));
			default:
				return null;
			}
		} else if(js_Boot.__instanceof(o,interpret_DynamicInstance)) {
			var dynInst1 = o;
			var prevQueryingInterpreter1 = dynInst1.interpreter._queryingInterpreter;
			dynInst1.interpreter._queryingInterpreter = this;
			var result3 = dynInst1.get(f);
			dynInst1.interpreter._queryingInterpreter = prevQueryingInterpreter1;
			return result3;
		} else if(js_Boot.__instanceof(o,interpret_DynamicClass)) {
			var dynClass = o;
			var prevQueryingInterpreter2 = dynClass.interpreter._queryingInterpreter;
			dynClass.interpreter._queryingInterpreter = this;
			var result4 = dynClass.get(f);
			dynClass.interpreter._queryingInterpreter = prevQueryingInterpreter2;
			return result4;
		} else if(this.existsAsExtension(f)) {
			var typePath4 = interpret_TypeUtils.typeOf(o,this.env);
			var resolved5 = this.dynamicClass.usings.resolve(typePath4,f);
			if(resolved5 != null) {
				return resolved5;
			}
		}
		return hscript_Interp.prototype.get.call(this,o,f);
	}
	,set: function(o,f,v) {
		var self;
		if(this._self != null) {
			self = this._self;
		} else {
			var key = this.selfName;
			var _this = this.locals;
			self = (__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]).r;
		}
		if(o == self) {
			if(this.setters != null && this.setters.exists(f)) {
				if(this.classInterpreter != null) {
					var classSelf;
					if(this._classSelf != null) {
						classSelf = this._classSelf;
					} else {
						var key1 = this.classInterpreter.selfName;
						var _this1 = this.locals;
						classSelf = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]).r;
					}
					var _this2 = this.variables;
					var key2 = "set_" + f;
					return (__map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2])(classSelf,self,v);
				} else {
					var _this3 = this.variables;
					var key3 = "set_" + f;
					return (__map_reserved[key3] != null ? _this3.getReserved(key3) : _this3.h[key3])(self,v);
				}
			} else if(this._unresolved == null) {
				var value = v;
				if(__map_reserved[f] != null) {
					self.setReserved(f,value);
				} else {
					self.h[f] = value;
				}
			} else if(__map_reserved[f] != null ? self.existsReserved(f) : self.h.hasOwnProperty(f)) {
				var value1 = v;
				if(__map_reserved[f] != null) {
					self.setReserved(f,value1);
				} else {
					self.h[f] = value1;
				}
			} else {
				return this._unresolved;
			}
			return v;
		}
		var classSelf1;
		if(this.classInterpreter != null) {
			if(this._classSelf != null) {
				classSelf1 = this._classSelf;
			} else {
				var key4 = this.classInterpreter.selfName;
				var _this4 = this.locals;
				classSelf1 = (__map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4]).r;
			}
		} else {
			classSelf1 = null;
		}
		if(classSelf1 != null && o == classSelf1) {
			var _this5 = this.classInterpreter;
			if(_this5.setters != null && _this5.setters.exists(f)) {
				var _this6 = this.classInterpreter.variables;
				var key5 = "set_" + f;
				return (__map_reserved[key5] != null ? _this6.getReserved(key5) : _this6.h[key5])(classSelf1,v);
			} else {
				var value2 = v;
				if(__map_reserved[f] != null) {
					classSelf1.setReserved(f,value2);
				} else {
					classSelf1.h[f] = value2;
				}
			}
			return v;
		}
		return hscript_Interp.prototype.set.call(this,o,f,v);
	}
	,call: function(o,f,args) {
		if(js_Boot.__instanceof(f,interpret_RuntimeItem)) {
			switch(f[1]) {
			case 0:
				if(f[2][1] == 1) {
					var name = f[2][4];
					var moduleId = f[2][3];
					var rawItem = f[2][2];
					if(rawItem == null) {
						var dotIndex = name.lastIndexOf(".");
						var dynClass = this.env.resolveDynamicClass(moduleId,name.substring(0,dotIndex));
						if(dynClass != null) {
							return dynClass.call(name.substring(dotIndex + 1),[o].concat(args));
						} else {
							throw new js__$Boot_HaxeError("Unresolved dynamic extension: " + name);
						}
					}
					var args1 = [o].concat(args);
					return rawItem.apply(null,args1);
				} else {
					throw new js__$Boot_HaxeError("Cannot call module item: " + Std.string(f));
				}
				break;
			case 1:
				var name1 = f[4];
				var moduleId1 = f[3];
				var rawItem1 = f[2];
				if(rawItem1 == null) {
					var dotIndex1 = name1.lastIndexOf(".");
					var dynClass1 = this.env.resolveDynamicClass(moduleId1,name1.substring(0,dotIndex1));
					if(dynClass1 != null) {
						return dynClass1.call(name1.substring(dotIndex1 + 1),args);
					} else {
						throw new js__$Boot_HaxeError("Unresolved dynamic class field: " + name1);
					}
				}
				return rawItem1.apply(o,args);
			case 4:
				var rawItem2 = f[2];
				if(js_Boot.__instanceof(rawItem2,interpret_DynamicClass)) {
					return null;
				}
				return rawItem2.apply(o,args);
			case 6:
				if(f[2][1] == 2) {
					var name2 = f[2][4];
					var moduleId2 = f[2][3];
					var rawItem3 = f[2][2];
					if(rawItem3 == null) {
						var dynClass2 = this.env.resolveDynamicClass(moduleId2,name2);
						if(dynClass2 != null) {
							var self = this.locals.get(this.selfName).r;
							var instance = dynClass2.createInstance(args);
							if(__map_reserved["super"] != null) {
								self.setReserved("super",instance);
							} else {
								self.h["super"] = instance;
							}
							return instance;
						} else {
							throw new js__$Boot_HaxeError("Unresolved dynamic superclass: " + name2);
						}
					}
					var self1 = this.locals.get(this.selfName).r;
					var instance1 = Type.createInstance(rawItem3,args);
					if(__map_reserved["super"] != null) {
						self1.setReserved("super",instance1);
					} else {
						self1.h["super"] = instance1;
					}
					return instance1;
				} else {
					throw new js__$Boot_HaxeError("Cannot call module item: " + Std.string(f));
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Cannot call module item: " + Std.string(f));
			}
		}
		return hscript_Interp.prototype.call.call(this,o,f,args);
	}
	,cnew: function(cl,args) {
		var clazz = this.resolve(cl);
		if(js_Boot.__instanceof(clazz,interpret_DynamicClass)) {
			var dynClass = clazz;
			return dynClass.createInstance(args);
		}
		return hscript_Interp.prototype.cnew.call(this,cl,args);
	}
	,unwrap: function(value) {
		if(value == null) {
			return null;
		}
		if(js_Boot.__instanceof(value,interpret_RuntimeItem)) {
			var item = value;
			switch(item[1]) {
			case 0:
				var subItem = item[2];
				switch(subItem[1]) {
				case 1:
					var rawItem = subItem[2];
					return rawItem;
				case 2:
					var rawItem1 = subItem[2];
					return rawItem1;
				case 3:
					var rawItem2 = subItem[2];
					return rawItem2;
				case 4:
					var rawItem3 = subItem[2];
					return rawItem3;
				default:
					return subItem;
				}
				break;
			case 1:
				var rawItem4 = item[2];
				return rawItem4;
			case 2:
				var name = item[4];
				var moduleId = item[3];
				var rawItem5 = item[2];
				if(rawItem5 == null) {
					var dynClass = this.env.resolveDynamicClass(moduleId,name);
					if(dynClass != null) {
						return dynClass;
					}
				}
				return rawItem5;
			case 3:
				var rawItem6 = item[2];
				return rawItem6;
			case 4:
				var rawItem7 = item[2];
				return rawItem7;
			default:
				return value;
			}
		}
		return value;
	}
	,__class__: interpret_Interpreter
});
var interpret_ResolveImports = function(env) {
	this.items = new haxe_ds_StringMap();
	this.imports = [];
	this.env = env;
};
$hxClasses["interpret.ResolveImports"] = interpret_ResolveImports;
interpret_ResolveImports.__name__ = ["interpret","ResolveImports"];
interpret_ResolveImports.prototype = {
	imports: null
	,env: null
	,items: null
	,addImport: function(data) {
		var _gthis = this;
		var parts = data.path.split(".");
		var lastPart = parts[parts.length - 1];
		var isWildcard = lastPart == "*";
		var resolvedModule = null;
		var i = parts.length;
		var modulePath = data.path;
		while(i > 0) {
			modulePath = parts.slice(0,i).join(".");
			var _this = this.env.modules;
			if(__map_reserved[modulePath] != null ? _this.existsReserved(modulePath) : _this.h.hasOwnProperty(modulePath)) {
				var _this1 = this.env.modules;
				if(__map_reserved[modulePath] != null) {
					resolvedModule = _this1.getReserved(modulePath);
				} else {
					resolvedModule = _this1.h[modulePath];
				}
				break;
			}
			--i;
		}
		var wildcardModules = null;
		if(resolvedModule == null) {
			if(isWildcard) {
				wildcardModules = [];
				var modulePrefix = HxOverrides.substr(data.path,0,data.path.length - 1);
				var moduleKey = this.env.modules.keys();
				while(moduleKey.hasNext()) {
					var moduleKey1 = moduleKey.next();
					var moduleParts = moduleKey1.split(".");
					var moduleLastPart = moduleParts[moduleParts.length - 1];
					if(moduleKey1 == modulePrefix + moduleLastPart) {
						wildcardModules.push(moduleKey1);
					}
				}
			} else {
				throw new js__$Boot_HaxeError("Module not found: " + data.path);
			}
		}
		if(isWildcard) {
			var prefix = parts.slice(0,parts.length - 1).join(".") + ".";
			if(wildcardModules == null) {
				var _this2 = this.env.modules;
				var $module = __map_reserved[modulePath] != null ? _this2.getReserved(modulePath) : _this2.h[modulePath];
				var itemPath = $module.get_items().keys();
				while(itemPath.hasNext()) {
					var itemPath1 = itemPath.next();
					if(StringTools.startsWith(itemPath1,prefix)) {
						var itemParts = itemPath1.split(".");
						if(itemParts.length == parts.length) {
							var name = itemParts[itemParts.length - 1];
							var _this3 = $module.get_items();
							var item = __map_reserved[itemPath1] != null ? _this3.getReserved(itemPath1) : _this3.h[itemPath1];
							if(!_gthis.items.exists(name)) {
								_gthis.items.set(name,item);
							}
						}
					}
				}
			} else {
				var _g = 0;
				while(_g < wildcardModules.length) {
					var moduleKey2 = wildcardModules[_g];
					++_g;
					var _this4 = this.env.modules;
					var module1 = __map_reserved[moduleKey2] != null ? _this4.getReserved(moduleKey2) : _this4.h[moduleKey2];
					var _this5 = module1.get_items();
					var mainItem = __map_reserved[moduleKey2] != null ? _this5.getReserved(moduleKey2) : _this5.h[moduleKey2];
					if(mainItem != null) {
						var name1 = HxOverrides.substr(moduleKey2,moduleKey2.lastIndexOf(".") + 1,null);
						if(!_gthis.items.exists(name1)) {
							_gthis.items.set(name1,mainItem);
						}
					}
				}
			}
		} else {
			var _this6 = this.env.modules;
			var module2 = __map_reserved[modulePath] != null ? _this6.getReserved(modulePath) : _this6.h[modulePath];
			var prefix1 = data.path + ".";
			var this1 = module2.get_items();
			var key = data.path;
			var _this7 = this1;
			var mainItem1 = __map_reserved[key] != null ? _this7.getReserved(key) : _this7.h[key];
			var loadSubItems = false;
			if(mainItem1 == null) {
				loadSubItems = true;
			} else {
				switch(mainItem1[1]) {
				case 2:case 3:
					var name2 = parts[parts.length - 1];
					if(!_gthis.items.exists(name2)) {
						_gthis.items.set(name2,mainItem1);
					}
					loadSubItems = true;
					break;
				case 0:case 1:case 4:
					var name3 = parts[parts.length - 1];
					if(!_gthis.items.exists(name3)) {
						_gthis.items.set(name3,mainItem1);
					}
					break;
				default:
					throw new js__$Boot_HaxeError("Invalid module for path: " + data.path);
				}
			}
			if(loadSubItems) {
				var itemPath2 = module2.get_items().keys();
				while(itemPath2.hasNext()) {
					var itemPath3 = itemPath2.next();
					var _this8 = module2.get_items();
					var item1 = __map_reserved[itemPath3] != null ? _this8.getReserved(itemPath3) : _this8.h[itemPath3];
					switch(item1[1]) {
					case 2:
						var itemParts1 = itemPath3.split(".");
						if(itemPath3 == data.path) {
							var name4 = itemParts1[itemParts1.length - 1];
							if(!_gthis.items.exists(name4)) {
								_gthis.items.set(name4,item1);
							}
						} else if(StringTools.startsWith(itemPath3,prefix1)) {
							if(itemParts1.length == parts.length + 1) {
								var name5 = itemParts1[itemParts1.length - 1];
								if(!_gthis.items.exists(name5)) {
									_gthis.items.set(name5,item1);
								}
							}
						}
						break;
					case 3:
						var itemParts2 = itemPath3.split(".");
						if(itemPath3 == data.path) {
							var name6 = itemParts2[itemParts2.length - 1];
							if(!_gthis.items.exists(name6)) {
								_gthis.items.set(name6,item1);
							}
						} else if(StringTools.startsWith(itemPath3,prefix1)) {
							if(itemParts2.length == parts.length + 1) {
								var name7 = itemParts2[itemParts2.length - 1];
								if(!_gthis.items.exists(name7)) {
									_gthis.items.set(name7,item1);
								}
							}
						}
						break;
					case 4:
						var itemParts3 = itemPath3.split(".");
						if(itemPath3 == data.path) {
							var name8 = itemParts3[itemParts3.length - 1];
							if(!_gthis.items.exists(name8)) {
								_gthis.items.set(name8,item1);
							}
						} else if(StringTools.startsWith(itemPath3,prefix1)) {
							if(itemParts3.length == parts.length + 1 || mainItem1 == null && itemParts3.length == parts.length + 2) {
								var name9 = itemParts3[itemParts3.length - 1];
								if(!_gthis.items.exists(name9)) {
									_gthis.items.set(name9,item1);
								}
							}
						}
						break;
					default:
					}
				}
			}
		}
		this.imports.push(data);
	}
	,resolve: function(name) {
		var _this = this.items;
		if(__map_reserved[name] != null) {
			return _this.getReserved(name);
		} else {
			return _this.h[name];
		}
	}
	,__class__: interpret_ResolveImports
};
var interpret_ResolveUsings = function(env) {
	this.addedItems = new haxe_ds_StringMap();
	this.usings = [];
	this.env = env;
};
$hxClasses["interpret.ResolveUsings"] = interpret_ResolveUsings;
interpret_ResolveUsings.__name__ = ["interpret","ResolveUsings"];
interpret_ResolveUsings.prototype = {
	usings: null
	,env: null
	,addedItems: null
	,addUsing: function(data) {
		var _gthis = this;
		var parts = data.path.split(".");
		var resolvedModule = null;
		var i = parts.length;
		var modulePath = data.path;
		while(i > 0) {
			modulePath = parts.slice(0,i).join(".");
			var _this = this.env.modules;
			if(__map_reserved[modulePath] != null ? _this.existsReserved(modulePath) : _this.h.hasOwnProperty(modulePath)) {
				var _this1 = this.env.modules;
				if(__map_reserved[modulePath] != null) {
					resolvedModule = _this1.getReserved(modulePath);
				} else {
					resolvedModule = _this1.h[modulePath];
				}
				break;
			}
			--i;
		}
		if(resolvedModule == null) {
			throw new js__$Boot_HaxeError("Module not found: " + data.path);
		}
		var prefix = data.path + ".";
		var itemPath = resolvedModule.get_items().keys();
		while(itemPath.hasNext()) {
			var itemPath1 = itemPath.next();
			var _this2 = resolvedModule.get_items();
			var item = __map_reserved[itemPath1] != null ? _this2.getReserved(itemPath1) : _this2.h[itemPath1];
			if(item[1] == 0) {
				if(item[2][1] == 1) {
					var extendedType = item[3];
					var rawItem = item[2][2];
					if(StringTools.startsWith(itemPath1,prefix)) {
						var itemParts = itemPath1.split(".");
						if(itemParts.length == parts.length + 1) {
							var name = itemParts[itemParts.length - 1];
							if(name == "staticExt") {
								haxe_Log.trace("ADD USING " + name + " " + extendedType,{ fileName : "ResolveUsings.hx", lineNumber : 41, className : "interpret.ResolveUsings", methodName : "addUsing"});
							}
							var extendedTypesForName = _gthis.addedItems.get(name);
							if(extendedTypesForName == null) {
								extendedTypesForName = new haxe_ds_StringMap();
								_gthis.addedItems.set(name,extendedTypesForName);
							}
							if(__map_reserved[extendedType] != null) {
								extendedTypesForName.setReserved(extendedType,item);
							} else {
								extendedTypesForName.h[extendedType] = item;
							}
						}
					}
				}
			}
		}
		this.usings.push(data);
	}
	,hasName: function(name) {
		var _this = this.addedItems;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,resolve: function(extendedType,name) {
		haxe_Log.trace("USINGS RESOLVE " + extendedType + " " + name,{ fileName : "ResolveUsings.hx", lineNumber : 77, className : "interpret.ResolveUsings", methodName : "resolve"});
		var _this = this.addedItems;
		var extendedTypesForName = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(extendedTypesForName != null) {
			var type = extendedType;
			while(type != null) {
				if(__map_reserved[type] != null ? extendedTypesForName.existsReserved(type) : extendedTypesForName.h.hasOwnProperty(type)) {
					return __map_reserved[type] != null ? extendedTypesForName.getReserved(type) : extendedTypesForName.h[type];
				}
				var _this1 = this.env.aliases;
				var alias = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
				if(alias != null && (__map_reserved[alias] != null ? extendedTypesForName.existsReserved(alias) : extendedTypesForName.h.hasOwnProperty(alias))) {
					return __map_reserved[alias] != null ? extendedTypesForName.getReserved(alias) : extendedTypesForName.h[alias];
				}
				var interfaces = this.env.getInterfaces(type);
				if(interfaces != null) {
					var item = interfaces.keys();
					while(item.hasNext()) {
						var item1 = item.next();
						var iActive = item1;
						while(iActive != null) {
							if(__map_reserved[iActive] != null ? extendedTypesForName.existsReserved(iActive) : extendedTypesForName.h.hasOwnProperty(iActive)) {
								return __map_reserved[iActive] != null ? extendedTypesForName.getReserved(iActive) : extendedTypesForName.h[iActive];
							}
							var _this2 = this.env.aliases;
							var iAlias = __map_reserved[iActive] != null ? _this2.getReserved(iActive) : _this2.h[iActive];
							if(iAlias != null && (__map_reserved[iAlias] != null ? extendedTypesForName.existsReserved(iAlias) : extendedTypesForName.h.hasOwnProperty(iAlias))) {
								return __map_reserved[iAlias] != null ? extendedTypesForName.getReserved(iAlias) : extendedTypesForName.h[iAlias];
							}
							iActive = this.env.getSuperClass(iActive);
						}
					}
				}
				type = this.env.getSuperClass(type);
			}
		}
		return null;
	}
	,__class__: interpret_ResolveUsings
};
var interpret_TypeUtils = function() { };
$hxClasses["interpret.TypeUtils"] = interpret_TypeUtils;
interpret_TypeUtils.__name__ = ["interpret","TypeUtils"];
interpret_TypeUtils.typeOf = function(obj,env) {
	if(typeof(obj) == "string") {
		return "String";
	}
	if(typeof(obj) == "number" && ((obj | 0) === obj)) {
		return "Int";
	}
	if(typeof(obj) == "number") {
		return "Float";
	}
	if(typeof(obj) == "boolean") {
		return "Bool";
	}
	if((obj instanceof Array) && obj.__enum__ == null) {
		return "Array";
	}
	if(js_Boot.__instanceof(obj,_$Map_Map_$Impl_$)) {
		return "Map";
	}
	if(js_Boot.__instanceof(obj,interpret_DynamicClass)) {
		var c = obj;
		return c.classType;
	}
	if(js_Boot.__instanceof(obj,interpret_DynamicInstance)) {
		var i = obj;
		return i.dynamicClass.instanceType;
	}
	if(js_Boot.__instanceof(obj,interpret_RuntimeItem)) {
		var item = obj;
		switch(item[1]) {
		case 0:
			var extendedType = item[3];
			var item1 = item[2];
			return interpret_TypeUtils.typeOf(item1);
		case 1:
			var rawItem = item[2];
			return interpret_TypeUtils.typeOf(rawItem);
		case 2:
			var name = item[4];
			var moduleId = item[3];
			var rawItem1 = item[2];
			return "Class<" + name + ">";
		case 3:
			var name1 = item[4];
			var moduleId1 = item[3];
			var rawItem2 = item[2];
			return "Enum<" + name1 + ">";
		case 4:
			var numArgs = item[4];
			var name2 = item[3];
			var rawItem3 = item[2];
			return name2.substring(0,name2.lastIndexOf("."));
		case 5:
			var pack = item[2];
			return "Dynamic";
		default:
		}
	}
	if(js_Boot.__instanceof(obj,Class)) {
		var classType = Type.getClassName(obj);
		if(classType == null) {
			classType = "Dynamic";
		}
		return "Class<" + classType + ">";
	}
	if(js_Boot.__instanceof(obj,Enum)) {
		var enumType = Type.getEnumName(obj);
		if(enumType == null) {
			enumType = "Dynamic";
		}
		return "Enum<" + enumType + ">";
	}
	if(Reflect.isEnumValue(obj)) {
		var enu = Type.getEnum(obj);
		if(enu != null) {
			return Type.getEnumName(enu);
		}
	}
	var o = obj;
	var clazz = o == null ? null : js_Boot.getClass(o);
	if(clazz != null) {
		return Type.getClassName(clazz);
	}
	return "Dynamic";
};
interpret_TypeUtils.toResolvedType = function(imports,rawType) {
	var result = rawType;
	var resolveClassType = StringTools.startsWith(rawType,"Class<");
	if(resolveClassType) {
		var name = rawType.substring(6,rawType.length - 1);
		var resolvedType = imports.items.get(name);
		if(resolvedType != null) {
			if(resolvedType[1] == 2) {
				var name1 = resolvedType[4];
				var moduleId = resolvedType[3];
				var rawItem = resolvedType[2];
				result = "Class<" + name1 + ">";
			}
		}
	} else {
		var resolvedType1 = imports.items.get(rawType);
		if(resolvedType1 != null) {
			if(resolvedType1[1] == 2) {
				var name2 = resolvedType1[4];
				var moduleId1 = resolvedType1[3];
				var rawItem1 = resolvedType1[2];
				result = name2;
			}
		}
	}
	return result;
};
interpret_TypeUtils.unwrap = function(value) {
	if(value == null) {
		return null;
	}
	if(js_Boot.__instanceof(value,interpret_RuntimeItem)) {
		var item = value;
		switch(item[1]) {
		case 0:
			var item1 = item[2];
			return interpret_TypeUtils.unwrap(item1);
		case 1:
			var rawItem = item[2];
			return rawItem;
		case 2:
			var rawItem1 = item[2];
			return rawItem1;
		case 3:
			var rawItem2 = item[2];
			return rawItem2;
		case 4:
			var rawItem3 = item[2];
			return rawItem3;
		case 5:
			var pack = item[2];
			return value;
		case 6:
			var item2 = item[2];
			return interpret_TypeUtils.unwrap(item2);
		}
	}
	return value;
};
var interpret_Token = $hxClasses["interpret.Token"] = { __ename__ : ["interpret","Token"], __constructs__ : ["TPackage","TImport","TUsing","TModifier","TMeta","TComment","TField","TType"] };
interpret_Token.TPackage = function(data) { var $x = ["TPackage",0,data]; $x.__enum__ = interpret_Token; $x.toString = $estr; return $x; };
interpret_Token.TImport = function(data) { var $x = ["TImport",1,data]; $x.__enum__ = interpret_Token; $x.toString = $estr; return $x; };
interpret_Token.TUsing = function(data) { var $x = ["TUsing",2,data]; $x.__enum__ = interpret_Token; $x.toString = $estr; return $x; };
interpret_Token.TModifier = function(data) { var $x = ["TModifier",3,data]; $x.__enum__ = interpret_Token; $x.toString = $estr; return $x; };
interpret_Token.TMeta = function(data) { var $x = ["TMeta",4,data]; $x.__enum__ = interpret_Token; $x.toString = $estr; return $x; };
interpret_Token.TComment = function(data) { var $x = ["TComment",5,data]; $x.__enum__ = interpret_Token; $x.toString = $estr; return $x; };
interpret_Token.TField = function(data) { var $x = ["TField",6,data]; $x.__enum__ = interpret_Token; $x.toString = $estr; return $x; };
interpret_Token.TType = function(data) { var $x = ["TType",7,data]; $x.__enum__ = interpret_Token; $x.toString = $estr; return $x; };
interpret_Token.__empty_constructs__ = [];
var interpret_RuntimeItem = $hxClasses["interpret.RuntimeItem"] = { __ename__ : ["interpret","RuntimeItem"], __constructs__ : ["ExtensionItem","ClassFieldItem","ClassItem","EnumItem","EnumFieldItem","PackageItem","SuperClassItem"] };
interpret_RuntimeItem.ExtensionItem = function(item,extendedType) { var $x = ["ExtensionItem",0,item,extendedType]; $x.__enum__ = interpret_RuntimeItem; $x.toString = $estr; return $x; };
interpret_RuntimeItem.ClassFieldItem = function(rawItem,moduleId,name) { var $x = ["ClassFieldItem",1,rawItem,moduleId,name]; $x.__enum__ = interpret_RuntimeItem; $x.toString = $estr; return $x; };
interpret_RuntimeItem.ClassItem = function(rawItem,moduleId,name) { var $x = ["ClassItem",2,rawItem,moduleId,name]; $x.__enum__ = interpret_RuntimeItem; $x.toString = $estr; return $x; };
interpret_RuntimeItem.EnumItem = function(rawItem,moduleId,name) { var $x = ["EnumItem",3,rawItem,moduleId,name]; $x.__enum__ = interpret_RuntimeItem; $x.toString = $estr; return $x; };
interpret_RuntimeItem.EnumFieldItem = function(rawItem,name,numArgs) { var $x = ["EnumFieldItem",4,rawItem,name,numArgs]; $x.__enum__ = interpret_RuntimeItem; $x.toString = $estr; return $x; };
interpret_RuntimeItem.PackageItem = function(pack) { var $x = ["PackageItem",5,pack]; $x.__enum__ = interpret_RuntimeItem; $x.toString = $estr; return $x; };
interpret_RuntimeItem.SuperClassItem = function(item) { var $x = ["SuperClassItem",6,item]; $x.__enum__ = interpret_RuntimeItem; $x.toString = $estr; return $x; };
interpret_RuntimeItem.__empty_constructs__ = [];
var interpret_TPackage = function(pos,path) {
	this.pos = pos;
	this.path = path;
};
$hxClasses["interpret.TPackage"] = interpret_TPackage;
interpret_TPackage.__name__ = ["interpret","TPackage"];
interpret_TPackage.prototype = {
	pos: null
	,path: null
	,__class__: interpret_TPackage
};
var interpret_TImport = function(pos,path,name,alias) {
	this.alias = null;
	this.pos = pos;
	this.path = path;
	this.name = name;
	this.alias = alias;
};
$hxClasses["interpret.TImport"] = interpret_TImport;
interpret_TImport.__name__ = ["interpret","TImport"];
interpret_TImport.prototype = {
	pos: null
	,path: null
	,name: null
	,alias: null
	,__class__: interpret_TImport
};
var interpret_TUsing = function(pos,path) {
	this.pos = pos;
	this.path = path;
};
$hxClasses["interpret.TUsing"] = interpret_TUsing;
interpret_TUsing.__name__ = ["interpret","TUsing"];
interpret_TUsing.prototype = {
	pos: null
	,path: null
	,__class__: interpret_TUsing
};
var interpret_TModifier = function(pos,name) {
	this.pos = pos;
	this.name = name;
};
$hxClasses["interpret.TModifier"] = interpret_TModifier;
interpret_TModifier.__name__ = ["interpret","TModifier"];
interpret_TModifier.prototype = {
	pos: null
	,name: null
	,__class__: interpret_TModifier
};
var interpret_TMeta = function(pos,name,args) {
	this.args = null;
	this.pos = pos;
	this.name = name;
	this.args = args;
};
$hxClasses["interpret.TMeta"] = interpret_TMeta;
interpret_TMeta.__name__ = ["interpret","TMeta"];
interpret_TMeta.prototype = {
	pos: null
	,name: null
	,args: null
	,__class__: interpret_TMeta
};
var interpret_TComment = function(pos,content,multiline) {
	this.pos = pos;
	this.content = content;
	this.multiline = multiline;
};
$hxClasses["interpret.TComment"] = interpret_TComment;
interpret_TComment.__name__ = ["interpret","TComment"];
interpret_TComment.prototype = {
	pos: null
	,content: null
	,multiline: null
	,__class__: interpret_TComment
};
var interpret_TField = function(name,pos,kind,type,args,get,set,expr) {
	this.expr = null;
	this.set = null;
	this.get = null;
	this.args = null;
	this.name = name;
	this.pos = pos;
	this.kind = kind;
	this.type = type;
	this.args = args;
	this.get = get;
	this.set = set;
	this.expr = expr;
};
$hxClasses["interpret.TField"] = interpret_TField;
interpret_TField.__name__ = ["interpret","TField"];
interpret_TField.prototype = {
	name: null
	,pos: null
	,kind: null
	,type: null
	,args: null
	,get: null
	,set: null
	,expr: null
	,__class__: interpret_TField
};
var interpret_TFieldKind = $hxClasses["interpret.TFieldKind"] = { __ename__ : ["interpret","TFieldKind"], __constructs__ : ["VAR","METHOD"] };
interpret_TFieldKind.VAR = ["VAR",0];
interpret_TFieldKind.VAR.toString = $estr;
interpret_TFieldKind.VAR.__enum__ = interpret_TFieldKind;
interpret_TFieldKind.METHOD = ["METHOD",1];
interpret_TFieldKind.METHOD.toString = $estr;
interpret_TFieldKind.METHOD.__enum__ = interpret_TFieldKind;
interpret_TFieldKind.__empty_constructs__ = [interpret_TFieldKind.VAR,interpret_TFieldKind.METHOD];
var interpret_TArg = function(pos,name,type,opt,expr) {
	this.opt = false;
	this.name = null;
	this.pos = pos;
	this.name = name;
	this.type = type;
	this.opt = opt;
	this.expr = expr;
};
$hxClasses["interpret.TArg"] = interpret_TArg;
interpret_TArg.__name__ = ["interpret","TArg"];
interpret_TArg.prototype = {
	pos: null
	,name: null
	,type: null
	,opt: null
	,expr: null
	,__class__: interpret_TArg
};
var interpret_TType = function(pos,name,kind,type,interfaces,parent) {
	this.pos = pos;
	this.name = name;
	this.kind = kind;
	this.type = type;
	this.interfaces = interfaces;
	this.parent = parent;
};
$hxClasses["interpret.TType"] = interpret_TType;
interpret_TType.__name__ = ["interpret","TType"];
interpret_TType.prototype = {
	pos: null
	,name: null
	,kind: null
	,type: null
	,interfaces: null
	,parent: null
	,__class__: interpret_TType
};
var interpret_TParent = function(name,kind) {
	this.name = name;
	this.kind = kind;
};
$hxClasses["interpret.TParent"] = interpret_TParent;
interpret_TParent.__name__ = ["interpret","TParent"];
interpret_TParent.prototype = {
	name: null
	,kind: null
	,__class__: interpret_TParent
};
var interpret_TTypeKind = $hxClasses["interpret.TTypeKind"] = { __ename__ : ["interpret","TTypeKind"], __constructs__ : ["CLASS","ENUM","TYPEDEF","ABSTRACT","YOUPI"] };
interpret_TTypeKind.CLASS = ["CLASS",0];
interpret_TTypeKind.CLASS.toString = $estr;
interpret_TTypeKind.CLASS.__enum__ = interpret_TTypeKind;
interpret_TTypeKind.ENUM = ["ENUM",1];
interpret_TTypeKind.ENUM.toString = $estr;
interpret_TTypeKind.ENUM.__enum__ = interpret_TTypeKind;
interpret_TTypeKind.TYPEDEF = ["TYPEDEF",2];
interpret_TTypeKind.TYPEDEF.toString = $estr;
interpret_TTypeKind.TYPEDEF.__enum__ = interpret_TTypeKind;
interpret_TTypeKind.ABSTRACT = ["ABSTRACT",3];
interpret_TTypeKind.ABSTRACT.toString = $estr;
interpret_TTypeKind.ABSTRACT.__enum__ = interpret_TTypeKind;
interpret_TTypeKind.YOUPI = function(bref) { var $x = ["YOUPI",4,bref]; $x.__enum__ = interpret_TTypeKind; $x.toString = $estr; return $x; };
interpret_TTypeKind.__empty_constructs__ = [interpret_TTypeKind.CLASS,interpret_TTypeKind.ENUM,interpret_TTypeKind.TYPEDEF,interpret_TTypeKind.ABSTRACT];
var interpret_TParentKind = $hxClasses["interpret.TParentKind"] = { __ename__ : ["interpret","TParentKind"], __constructs__ : ["SUPERCLASS","INTERFACE"] };
interpret_TParentKind.SUPERCLASS = ["SUPERCLASS",0];
interpret_TParentKind.SUPERCLASS.toString = $estr;
interpret_TParentKind.SUPERCLASS.__enum__ = interpret_TParentKind;
interpret_TParentKind.INTERFACE = ["INTERFACE",1];
interpret_TParentKind.INTERFACE.toString = $estr;
interpret_TParentKind.INTERFACE.__enum__ = interpret_TParentKind;
interpret_TParentKind.__empty_constructs__ = [interpret_TParentKind.SUPERCLASS,interpret_TParentKind.INTERFACE];
var interpret_ModuleItemKind = function() { };
$hxClasses["interpret.ModuleItemKind"] = interpret_ModuleItemKind;
interpret_ModuleItemKind.__name__ = ["interpret","ModuleItemKind"];
var interpret_Unresolved = function() {
};
$hxClasses["interpret.Unresolved"] = interpret_Unresolved;
interpret_Unresolved.__name__ = ["interpret","Unresolved"];
interpret_Unresolved.prototype = {
	__class__: interpret_Unresolved
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.__clear_trace = function() {
	var d = document.getElementById("haxe:trace");
	if(d != null) {
		d.innerHTML = "";
	}
};
js_Boot.isClass = function(o) {
	return o.__name__;
};
js_Boot.isEnum = function(e) {
	return e.__ename__;
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Lib = function() { };
$hxClasses["js.Lib"] = js_Lib;
js_Lib.__name__ = ["js","Lib"];
js_Lib.__properties__ = {get_undefined:"get_undefined"};
js_Lib.debug = function() {
	debugger;
};
js_Lib.alert = function(v) {
	alert(js_Boot.__string_rec(v,""));
};
js_Lib["eval"] = function(code) {
	return eval(code);
};
js_Lib.get_undefined = function() {
	return undefined;
};
var js_node_ChildProcess = require("child_process");
var js_node_Fs = require("fs");
var js_node_events_EventEmitter = require("events").EventEmitter;
var js_node_Stream = require("stream");
var js_node_Util = require("util");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_node_console_Console = require("console").Console;
var js_node_stream_Readable = require("stream").Readable;
var js_node_stream_Writable = require("stream").Writable;
var sys_io_File = function() { };
$hxClasses["sys.io.File"] = sys_io_File;
sys_io_File.__name__ = ["sys","io","File"];
sys_io_File.getContent = function(path) {
	return js_node_Fs.readFileSync(path,{ encoding : "utf8"});
};
sys_io_File.saveContent = function(path,content) {
	js_node_Fs.writeFileSync(path,content);
};
sys_io_File.getBytes = function(path) {
	return haxe_io_Bytes.ofData(js_node_Fs.readFileSync(path));
};
sys_io_File.saveBytes = function(path,bytes) {
	js_node_Fs.writeFileSync(path,new js_node_buffer_Buffer(bytes.b.bufferValue));
};
sys_io_File.copy = function(srcPath,dstPath) {
	var src = js_node_Fs.openSync(srcPath,"r");
	var stat = js_node_Fs.fstatSync(src);
	var dst = js_node_Fs.openSync(dstPath,"w",stat.mode);
	var bytesRead;
	var pos = 0;
	while(true) {
		bytesRead = js_node_Fs.readSync(src,sys_io_File.copyBuf,0,65536,pos);
		if(!(bytesRead > 0)) {
			break;
		}
		js_node_Fs.writeSync(dst,sys_io_File.copyBuf,0,bytesRead);
		pos += bytesRead;
	}
	js_node_Fs.closeSync(src);
	js_node_Fs.closeSync(dst);
};
var test_Host = function() { };
$hxClasses["test.Host"] = test_Host;
test_Host.__name__ = ["test","Host"];
test_Host.main = function() {
	try {
		require("source-map-support").install();
	} catch( e ) {
	}
	var env = new interpret_Env();
	env.addDefaultModules();
	var $module = new interpret_DynamicModule();
	$module.pack = "";
	$module.lazyLoad = function(mod) {
		mod.add("StringTools",StringTools,0,null);
		mod.add("StringTools.urlEncode",StringTools.urlEncode,1,"String");
		mod.add("StringTools.urlDecode",StringTools.urlDecode,1,"String");
		mod.add("StringTools.htmlEscape",StringTools.htmlEscape,1,"String");
		mod.add("StringTools.htmlUnescape",StringTools.htmlUnescape,1,"String");
		mod.add("StringTools.startsWith",StringTools.startsWith,1,"String");
		mod.add("StringTools.endsWith",StringTools.endsWith,1,"String");
		mod.add("StringTools.isSpace",StringTools.isSpace,1,"String");
		mod.add("StringTools.ltrim",StringTools.ltrim,1,"String");
		mod.add("StringTools.rtrim",StringTools.rtrim,1,"String");
		mod.add("StringTools.trim",StringTools.trim,1,"String");
		mod.add("StringTools.lpad",StringTools.lpad,1,"String");
		mod.add("StringTools.rpad",StringTools.rpad,1,"String");
		mod.add("StringTools.replace",StringTools.replace,1,"String");
		mod.add("StringTools.hex",StringTools.hex,1,"Int");
		mod.add("StringTools.fastCodeAt",StringTools.fastCodeAt,1,"String");
		mod.add("StringTools.isEof",StringTools.isEof,1,"Int");
		mod.add("StringTools.quoteUnixArg",StringTools.quoteUnixArg,1,"String");
		mod.add("StringTools.winMetaCharacters",StringTools.winMetaCharacters,1,null);
		mod.add("StringTools.quoteWinArg",StringTools.quoteWinArg,1,"String");
	};
	env.addModule("StringTools",$module);
	env.addModule("script.SomeClass",interpret_DynamicModule.fromString(env,"SomeClass",js_node_Fs.readFileSync("script/SomeClass.hx",{ encoding : "utf8"})));
	env.addModule("script.SomeOtherClass",interpret_DynamicModule.fromString(env,"SomeOtherClass",js_node_Fs.readFileSync("script/SomeOtherClass.hx",{ encoding : "utf8"})));
	env.link();
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
function $arrayPush(x) { this.push(x); }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var Void = $hxClasses["Void"] = { __ename__ : ["Void"]};
var __map_reserved = {};
StringTools.winMetaCharacters = [32,40,41,37,33,94,34,60,62,38,124,10,13,44,59];
haxe__$Int32_Int32_$Impl_$._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
haxe_io_FPHelper.LN2 = 0.6931471805599453;
hscript_Parser.p1 = 0;
hscript_Parser.readPos = 0;
hscript_Parser.tokenMin = 0;
hscript_Parser.tokenMax = 0;
interpret_ConvertHaxe.UNTIL_MAPS = (function($this) {
	var $r;
	var _g5 = new haxe_ds_StringMap();
	{
		var _g = new haxe_ds_StringMap();
		if(__map_reserved[","] != null) {
			_g.setReserved(",",true);
		} else {
			_g.h[","] = true;
		}
		if(__map_reserved[")"] != null) {
			_g.setReserved(")",true);
		} else {
			_g.h[")"] = true;
		}
		var value = _g;
		if(__map_reserved[",)"] != null) {
			_g5.setReserved(",)",value);
		} else {
			_g5.h[",)"] = value;
		}
	}
	{
		var _g1 = new haxe_ds_StringMap();
		if(__map_reserved[")"] != null) {
			_g1.setReserved(")",true);
		} else {
			_g1.h[")"] = true;
		}
		var value1 = _g1;
		if(__map_reserved[")"] != null) {
			_g5.setReserved(")",value1);
		} else {
			_g5.h[")"] = value1;
		}
	}
	{
		var _g2 = new haxe_ds_StringMap();
		if(__map_reserved["}"] != null) {
			_g2.setReserved("}",true);
		} else {
			_g2.h["}"] = true;
		}
		var value2 = _g2;
		if(__map_reserved["}"] != null) {
			_g5.setReserved("}",value2);
		} else {
			_g5.h["}"] = value2;
		}
	}
	{
		var _g3 = new haxe_ds_StringMap();
		if(__map_reserved[";"] != null) {
			_g3.setReserved(";",true);
		} else {
			_g3.h[";"] = true;
		}
		var value3 = _g3;
		if(__map_reserved[";"] != null) {
			_g5.setReserved(";",value3);
		} else {
			_g5.h[";"] = value3;
		}
	}
	{
		var _g4 = new haxe_ds_StringMap();
		if(__map_reserved[">"] != null) {
			_g4.setReserved(">",true);
		} else {
			_g4.h[">"] = true;
		}
		var value4 = _g4;
		if(__map_reserved[">"] != null) {
			_g5.setReserved(">",value4);
		} else {
			_g5.h[">"] = value4;
		}
	}
	$r = _g5;
	return $r;
}(this));
interpret_ConvertHaxe.MODIFIERS = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["inline"] != null) {
		_g.setReserved("inline",true);
	} else {
		_g.h["inline"] = true;
	}
	if(__map_reserved["static"] != null) {
		_g.setReserved("static",true);
	} else {
		_g.h["static"] = true;
	}
	if(__map_reserved["public"] != null) {
		_g.setReserved("public",true);
	} else {
		_g.h["public"] = true;
	}
	if(__map_reserved["protected"] != null) {
		_g.setReserved("protected",true);
	} else {
		_g.h["protected"] = true;
	}
	if(__map_reserved["dynamic"] != null) {
		_g.setReserved("dynamic",true);
	} else {
		_g.h["dynamic"] = true;
	}
	if(__map_reserved["override"] != null) {
		_g.setReserved("override",true);
	} else {
		_g.h["override"] = true;
	}
	if(__map_reserved["private"] != null) {
		_g.setReserved("private",true);
	} else {
		_g.h["private"] = true;
	}
	$r = _g;
	return $r;
}(this));
interpret_ConvertHaxe.RE_BEFORE_COMMENT_LINE = new EReg("^[\\s\\*]*(//)?\\s*","g");
interpret_ConvertHaxe.RE_AFTER_COMMENT_LINE = new EReg("[\\s\\*]*$","g");
interpret_ConvertHaxe.RE_META = new EReg("^@(:)?([a-zA-Z_][a-zA-Z_0-9]*)(\\s*)(\\()?","g");
interpret_ConvertHaxe.RE_WORD = new EReg("^[a-zA-Z0-9_]+","");
interpret_ConvertHaxe.RE_SEP_WORD = new EReg("^[^a-zA-Z0-9_]([a-zA-Z0-9_]+)","");
interpret_ConvertHaxe.RE_IMPORT = new EReg("^import\\s+([^;\\s]+)\\s*(?:(?:as|in)\\s*([^;\\s]+)\\s*)?;","");
interpret_ConvertHaxe.RE_USING = new EReg("^using\\s+([^;\\s]+)\\s*;","");
interpret_ConvertHaxe.RE_VAR = new EReg("^(var|final)\\s+([a-zA-Z_][a-zA-Z_0-9]*)(?:\\s*\\(\\s*(get|null|never|default)\\s*,\\s*(set|null|never|default)\\s*\\))?(?:\\s*:\\s*([^=;]+))?(?:\\s*(=|;))?","");
interpret_ConvertHaxe.RE_METHOD = new EReg("^function\\s+([a-zA-Z_][a-zA-Z_0-9]*)(?:\\s*<[a-zA-Z0-9,<>_:?()\\s-]+>)?\\s*\\(","");
interpret_ConvertHaxe.RE_FUNCTION = new EReg("^function(?:\\s+([a-zA-Z_][a-zA-Z_0-9]*)(?:\\s*<[a-zA-Z0-9,<>_:?()\\s-]+>)?)?\\s*\\(","");
interpret_ConvertHaxe.RE_STRING = new EReg("^(?:\"(?:[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|'(?:[^'\\\\]*(?:\\\\.[^'\\\\]*)*)')","");
interpret_ConvertHaxe.RE_NAMED_ARG = new EReg("^(?:(\\?)\\s*)?([a-zA-Z_][a-zA-Z_0-9]*)(?:\\s*:\\s*([a-zA-Z0-9,<>_:?()\\s-]+))?(?:\\s*=\\s*(.*))?","");
interpret_ConvertHaxe.RE_FUNC_BLOCK_START = new EReg("^(?:(\\s*:\\s*)([a-zA-Z0-9_]+(?:\\s*<[a-zA-Z0-9,<>_:?()\\s-]+>)?))?\\s*{","");
interpret_ConvertHaxe.RE_FUNC_RET_TYPE = new EReg("^(\\s*:\\s*)([a-zA-Z0-9_]+(?:\\s*<[a-zA-Z0-9,<>_:?()\\s-]+>)?)","");
interpret_ConvertHaxe.RE_CAST = new EReg("^cast(?:\\s*(\\())?","");
interpret_ConvertHaxe.RE_NEW = new EReg("^new\\s+([a-zA-Z_][a-zA-Z_0-9]*)(?:\\s*<[a-zA-Z0-9,<>_:?()\\s-]+>)?\\s*\\(","");
interpret_ConvertHaxe.RE_CLASS_DECL = new EReg("^class\\s+([a-zA-Z_][a-zA-Z_0-9]*)(?:\\s*<[a-zA-Z0-9,<>_:?()\\s-]+>)?([^{]*)\\s*{","");
interpret_ConvertHaxe.RE_ENUM_DECL = new EReg("^enum(\\s+abstract)?\\s+([a-zA-Z_][a-zA-Z_0-9]*)([^{]*)\\s*{","");
interpret_ConvertHaxe.RE_ABSTRACT_DECL = new EReg("^abstract\\s+([a-zA-Z_][a-zA-Z_0-9]*(?:\\s*<[a-zA-Z0-9,<>_:?()\\s-]+>)?)\\s*(?:\\(\\s*((?:[a-zA-Z0-9,<>_:?\\s-]+|\\([a-zA-Z0-9,<>_:?\\s-]+\\))+)\\s*\\))([^{]*)\\s*{","");
interpret_ConvertHaxe.RE_TYPEDEF_DECL = new EReg("^typedef\\s+([a-zA-Z_][a-zA-Z_0-9]*(?:\\s*<[a-zA-Z0-9,<>_:?()\\s-]+>)?)\\s*=\\s*({|([^;]*);)","");
interpret_ConvertHaxe.RE_ANY_SPACE = new EReg("\\s+","gm");
interpret_ConvertHaxe.RE_TYPE_WITH_PARAM = new EReg("^([a-zA-Z_][a-zA-Z_0-9]*)\\s*<([a-zA-Z0-9,<>_:?()\\s-]+)>","");
interpret_ConvertHaxe.RE_CLASS_PARENT = new EReg("^\\s*(implements|extends)\\s+((?:[a-zA-Z_][a-zA-Z_0-9\\.]*)(?:\\s*<[a-zA-Z0-9,<>_:?()\\s-]+>)?)","");
interpret_DynamicClass._contextType = null;
interpret_DynamicClass.NO_ARGS = [];
interpret_DynamicInstance.NO_ARGS = [];
interpret_DynamicModule._adding = false;
interpret_DynamicModule._nextId = 1;
interpret_ModuleItemKind.CLASS = 0;
interpret_ModuleItemKind.CLASS_FIELD = 1;
interpret_ModuleItemKind.ENUM = 2;
interpret_ModuleItemKind.ENUM_FIELD = 3;
interpret_Unresolved.UNRESOLVED = new interpret_Unresolved();
js_Boot.__toStr = ({ }).toString;
sys_io_File.copyBufLen = 65536;
sys_io_File.copyBuf = new js_node_buffer_Buffer(65536);
test_Host.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=host.js.map